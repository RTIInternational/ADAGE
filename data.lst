GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/21/23 22:31:51 Page 1
ADAGE Model - Input Data
C o m p i l a t i o n


   2   
   4   
   6   
   7  **CCCCCCCCCCCCCCCCCCC     Environmental variable for model versions CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
   8  * DA: Model with eight transportation sectors and 5 types of technologies in on-road transportation
   9  * DN: Model with eight transportation sectors and only 1 type of conventional technology in on-road transportation
  10  * AN: Model with two transportation sectors (auto and otrn) and only 1 type of conventional technology in on-road transportation
  11  * Only one of the following three can be activated at a time
  12   
  14  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
  15   
  16   
  17  *CCCCCCCCCCCCCCCCCCC Set up policy analysis CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
  18  *$setglobal shock              ! Biofuel volume requirement analysis
  20  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
  21   
  22  * include set definition file
INCLUDE    c:\Develop\ADAGE_pub\ADAGE\set.gms
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/21/23 22:31:51 Page 2
ADAGE Model - Set Definition
C o m p i l a t i o n


  25   
  26  set   year          Annual time period  /2010*2050/
  27   
  28  set   t(year)       Time periods to use from 2010 to 2050
  29        /2010, 2015, 2020, 2025, 2030, 2035, 2040, 2045, 2050 /;
  30   
  31  alias   (t,tt,ttt) ;
  32   
  33  set  reg              Eight regions included in the model
  34         /USA             "United States"
  35          BRA             "Brazil"
  36          CHN             "China"
  37          EUR             "Europe Union 27"
  38          XLM             "Rest of South America (no Mexico)"
  39          XAS             "Rest of Asia"
  40          AFR             "Africa"
  41          ROW             "Rest of World (has Mexico)"
  42          Total           "Global Total"
  43         /
  44   
  45       r(reg)          Eight regions
  46         /USA             "United States"
  47          BRA             "Brazil"
  48          CHN             "China"
  49          EUR             "Europe Union 27"
  50          XLM             "Rest of South America"
  51          XAS             "Rest of Asia"
  52          AFR             "Africa"
  53          ROW             "Rest of World"
  54         /
  55   
  56       deppr(reg)      Six developing regions
  57         / BRA             "Brazil"
  58           CHN             "China"
  59           XLM             "Rest of South America"
  60           XAS             "Rest of Asia"
  61           AFR             "Africa"
  62           ROW             "Rest of World"
  63          /
  64   
  65       depdr(reg)      Two developed regions
  66         /USA             "United States"
  67          EUR             "Europe Union 27"
  68         /
  69   
  70       num(r)          Numeraire region / USA /
  71       chn(r)          China            / CHN /;
  72   
  73   
  74  **--- All Sectors ---**
  75  set  i               All sectors
  76         /
  77  **---  Energy Industries ---**
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/21/23 22:31:51 Page 3
ADAGE Model - Set Definition
C o m p i l a t i o n


  78          Col             "Coal"
  79          Cru             "Crude oil"
  80          Ele             "Electricity"
  81          Gas             "Natural gas"
  82          Oil             "Refined petroleum"
  83   
  84  **---  Electricity Generation ---**
  85          Conv            "Conventional fossil electricity"
  86            Conv_Col      "Conventional coal generation"
  87            Conv_Gas      "Conventional natural gas generation"
  88            Conv_Oil      "Conventional refined oil generation"
  89          Nuc             "Nuclear electricity"
  90          Hyd             "Hydro and geothermal electricity"
  91          Geo             "Geothermal electricity"
  92          Bio             "Biomass electricity"
  93          Wnd             "Wind electricity"
  94          Sol             "Solar electricity"
  95          Bat             "Electricity storage such as battery"
  96   
  97  **---  Advanced technology for electricity generation
  98          CCS_Col         "Coal carbon capture and storage"
  99          CC_Gas          "Natural gas combined cycle"
 100          CCCCS_Gas       "Natural gas combined cycle with carbon capture and storage"
 101          Wnd_Gas         "Wind generation backed by natural gas"
 102          Sol_Gas         "Solar genration backed by natural gas"
 103   
 104  **--- Biofuels ---**
 105          Ethl            "Ethanol aggregate"
 106          Ceth            "Corn ethanol"
 107          Weth            "Wheat ethanol"
 108          Scet            "Sugarcane ethanol"
 109          Sbet            "Sugarbeet ethanol"
 110   
 111          Biod            "Biodiesel aggregate"
 112          Sybd            "Soybean biodiesel"
 113          Rpbd            "Rape-mustard biodiesel"
 114          Plbd            "Palm-Kernel biodiesel"
 115          Cobd            "Corn-oil biodiesel (introduced after 2010)"
 116   
 117  **--- Advanced Biofuels ---**
 118          Advb            "Advanced biofuel aggregate"
 119          Swge            "Advanced cellulosic ethanol from switchgrass"
 120          Albd            "Advanced biodiesel from algae"
 121          Msce            "Advanced cellulosic ethanol from miscanthus"
 122          ArsE            "Ethanol from ag residue (cost based on corn stover)"
 123          FrsE            "Ethanol from forest residue (cost based on hardwood residue)"
 124          FrwE            "Ethanol from forest pulpwood (cost based on hardwood pulp)"
 125   
 126  **--- Coproducts ---**
 127          Ddgs            "Distillers grains with solubles (DDGs) - coproduct from corn ethanol production"
 128          Omel            "Vegetable oil meal - coproduct from vegetable oil production"
 129   
 130  **--- General Sectors ---**
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/21/23 22:31:51 Page 4
ADAGE Model - Set Definition
C o m p i l a t i o n


 131          Crop            "Crop aggregate"
 132  **--- cereals
 133          Wht             "Wheat"
 134          Corn            "Corn"
 135          Gron            "Rest of cereal grains including rice, oats, barley, sorghum"
 136  **--- oilseeds ---**
 137          Soyb            "Soybean"
 138          Osdn            "Rest of Oilseeds"
 139  **--- Sugar crops ---**
 140          Srcn            "Sugarcane"
 141          Srbt            "Sugarbeet"
 142   
 143          Ocr             "Crops not elsewhere classified"
 144   
 145          Liv             "Livestock or pasture land"
 146          Frs             "Forestry or managed forestland"
 147  *--- processed food products ---**
 148          Mea             "Meat"
 149          Vol             "Vegetable oils"
 150          Ofd             "Other food products"
 151   
 152  *--- Industrial sectors ---**
 153          Eim             "Energy-intensive manufacturing"
 154          Man             "Other manufacturing"
 155          Srv             "Services"
 156   
 157  *--- Transportation sectors ---**
 158          AirP            "Airline transportation (passenger)"
 159          WtrT            "Marine transportation (freight and passenger)"
 160          RalF            "Rail freight"
 161          RodF            "Road freight (medium and large truck)"
 162          RalP            "Rail passenger"
 163          RodP            "Road passenger (bus)"
 164          Auto            "LDV passenger (car and light truck)"
 165          Otrn            "Other transportation (off-road & pipeline)"
 166   
 167  **--- Vehicle Types in Auto sector ---**
 168          Auto_OEV        "LDV passenger - traditional gasoline-ethanol vehicle"
 169          Auto_GasV       "LDV passenger - advanced compressed gas vehicle"
 170          Auto_BEV        "LDV passenger - advanced electric battery vehicle"
 171          Auto_HEV        "LDV passenger - advanced hybrid vehicle"
 172          Auto_FCEV       "LDV passenger - advanced hydrogen vehicle"
 173   
 174  **--- Vehicle Types in RodF sector ---**
 175          RodF_OEV        "Road freight - traditional gasoline-ethanol vehicle"
 176          RodF_GasV       "Road freight - advanced compressed gas vehicle"
 177          RodF_BEV        "Road freight - advanced electric battery vehicle"
 178          RodF_HEV        "Road freight - advanced hybrid vehicle"
 179          RodF_FCEV       "Road freight - advanced hydrogen vehicle"
 180   
 181  **--- Vehicle Types in RodP sector ---**
 182          RodP_OEV        "Road passenger - traditional gasoline-ethanol vehicle"
 183          RodP_GasV       "Road passenger - advanced compressed gas vehicle"
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/21/23 22:31:51 Page 5
ADAGE Model - Set Definition
C o m p i l a t i o n


 184          RodP_BEV        "Road passenger - advanced electric battery vehicle"
 185          RodP_HEV        "Road passenger - advanced hybrid vehicle"
 186          RodP_FCEV       "Road passenger - advanced hydrogen vehicle"
 187   
 188  **--- Aggregate of transportation sectors other than Auto, RodF, RodP ---**
 189          Otrn_OEV        "aggregated transportation sectors"
 190   
 191  **--- Households ---**
 192          HH              "All households"
 193   
 194  **--- Miscellaneous  ---**
 195          Current         "Current type of personal vehicles"
 196          House           "Housing"
 197   
 198          New             "New (flexible) production"
 199          Extant          "Extant (existing) production"
 200   
 201  **--- land type ---**
 202  *       crop           "cropland"
 203  *       liv            "Pasture land"
 204  *       For            "Managed forestry land "
 205          Nfrs           'Natural forest land'
 206          Ngrs           'Natural grassland'
 207  *       Othr           'Other type of land'
 208        /;
 209   
 210  alias   (i,j) ;
 211  alias   (iii,*);
 212   
 213  **--- industrial/agricultural sectors *---
 214  set  s(i)           Agricultural and Industrial Sectors
 215         /
 216          wht             "Wheat"
 217          corn            "Corn"
 218          gron            "Rest of cereal grains nec"
 219          soyb            "Soybean"
 220          osdn            "Rest of oilseeds"
 221          srcn            "Sugarcane"
 222          srbt            "Sugarbeet"
 223          ocr             "Crops nec"
 224   
 225          LIV             "Livestock"
 226          FRS             "Forestry"
 227   
 228          MEA             "Meat"
 229          VOL             "Vegetable oils"
 230          OFD             "Other foods products"
 231   
 232          EIM             "Energy-intensive manufacturing"
 233          MAN             "Other Manufacturing"
 234          SRV             "Services"
 235   
 236          AirP            "Airline transportation (passenger)"
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/21/23 22:31:51 Page 6
ADAGE Model - Set Definition
C o m p i l a t i o n


 237          WtrT            "Marine transportation (freight)"
 238          RalF            "Rail freight"
 239          RodF            "Road freight (medium and large truck)"
 240          RalP            "Rail passenger"
 241          RodP            "Road passenger (bus)"
 242          Auto            "LDV passenger (car and light truck)"
 243          Otrn            "Other transportation (off-road & pipeline)"
 244         /;
 245   
 246  set  agr(i)        Agricultural goods
 247        / wht             "Wheat"
 248          corn            "Corn"
 249          gron            "Rest of cereal grains nec"
 250          soyb            "Soybean"
 251          osdn            "Rest of Oilseeds"
 252          srcn            "Sugarcane"
 253          srbt            "Sugarbeet"
 254          ocr             "Crops nec"
 255          liv             "Livestock"
 256          frs             "Forestry"
 257        /
 258   
 259       crop(i)        Crop or cropland               / crop/
 260       liv(i)         Livestock or pastureland       / liv /
 261       frs(i)         Forestry or managed forestland / frs /
 262   
 263       crp(i)         Crops
 264        / wht           "Wheat"
 265          corn          "Corn"
 266          gron          "Rest of cereal grains nec"
 267          soyb          "Soybean"
 268          osdn          "Rest of oilseeds"
 269          srcn          "Sugarcane"
 270          srbt          "Sugarbeet"
 271          ocr           "Crops nec"
 272         /
 273   
 274       vol(i)        "Vegetable oil"         / vol /
 275       ofd(i)        "Other food products"   / ofd /
 276       chm(i)        "Chemicals"             / eim /
 277   
 278       feed(i)       "Feedstock for livestock"
 279         /wht           "Wheat"
 280          corn          "Corn"
 281          gron          "Rest of cereal grains nec"
 282          soyb          "Soybean"
 283          osdn          "Rest of oilseeds"
 284          srcn          "Sugarcane"
 285          srbt          "Sugarbeet"
 286          ocr           "Crops nec"
 287          ddgs          "Distillers grains with solubles (DDGs)-coproduct of corn ethanol production"
 288          omel          "Vegetable oil meal - coproduct of vegetable oil production"
 289         /
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/21/23 22:31:51 Page 7
ADAGE Model - Set Definition
C o m p i l a t i o n


 290   
 291  * excludes vol as it is used as feedstock in sybd, rpbd, plbd production
 292       biog(i)       Inputs other than feedstock used in biofuels    / mea,ofd,eim,man,srv /
 293   
 294       food(i)       Processed food sectors  / mea, vol, ofd /
 295       ind(i)        Industrial sectors      / eim, man, srv, AirP, WtrT, RalF, RodF, RalP, RodP, Otrn /
 296       indm(i)       Manufacturing sectors   / eim, man /
 297   
 298       byprod(i)     Byproducts              / ddgs,omel /
 299       srv(s)        Service goods           / srv /  ;
 300   
 301  set  scons(i)  Sectors for which household consumption is dynamic or adjusted by population or income growth;
 302       scons(agr)   = yes;
 303       scons(food)  = yes;
 304       scons("Auto")= yes;
 305       scons("RodP")= yes;
 306   
 307  Set  trn(s)        Transportation          /AirP, WtrT, RalF, RodF, RalP, RodP, Auto , Otrn/
 308       trni(i)       Transportation          /AirP, WtrT, RalF, RodF, RalP, RodP, Auto , Otrn/
 309       tranp(i)      Passenger transportation         /AirP, Auto, RalP, RodP/
 310       tranO(i)      Non-passenger (not strict)       /WtrT, RalF, RodF, Otrn/
 311       trnv(i)       Onroad transportation sector     /Auto, RodF, RodP/
 312       hdv(i)        Heavy-duty transportation        /RodF, RodP/
 313       rodp(i)       Bus transportation               /RodP/
 314       RodF(i)       Freight truck transportation     /RodF/
 315       Auto(i)       Auto transportation              /Auto/
 316       Otrn(i)       Other transportation             /Otrn/
 317   
 318       Autoi(i)      Sectors in auto industry
 319          /Auto_OEV      Traditional gasoline or gasoline-ethanol vehicle
 320           Auto_gasV     Advanced natural gas vehicle
 321           Auto_BEV      Advanced electric battery vehicle
 322           Auto_HEV      Advanced hybrid vehicle
 323           Auto_FCEV     Advanced hydrogen vehicle
 324          /
 325       AutoAfv(i)    Advanced alternative vehicle in auto industry
 326          /Auto_gasV     Advanced natural gas vehicle
 327           Auto_BEV      Advanced electric battery vehicle
 328           Auto_HEV      Advanced hybrid vehicle
 329           Auto_FCEV     Advanced hydrogen vehicle
 330          /
 331   
 332       HDVi(i)       Heavy-duty onroad transportation
 333         /RodF_OEV       Traditional gasoline or gasoline-ethanol road freight vehicle
 334          RodF_GasV      Advanced natural gas road freight vehicle
 335          RodF_BEV       Advanced electric battery road freight vehicle
 336          RodF_HEV       Advanced hybrid road freight vehicle
 337          RodF_FCEV      Advanced hydrogen road freight vehicle
 338          RodP_OEV       Traditional gasoline or gasoline-ethanol road passenger vehicle
 339          RodP_GasV      Advanced natural gas road passenger vehicle
 340          RodP_BEV       Advanced electric battery road passenger vehicle
 341          RodP_HEV       Advanced hybrid road passenger vehicle
 342          RodP_FCEV      Advanced hydrogen road passenger vehicle
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/21/23 22:31:51 Page 8
ADAGE Model - Set Definition
C o m p i l a t i o n


 343          /
 344       RodFi(i)      Road freight
 345         /RodF_OEV
 346          RodF_GasV
 347          RodF_BEV
 348          RodF_HEV
 349          RodF_FCEV
 350         /
 351       RodFAFV(i)    Road freight - advanced alternative vehicle
 352          /RodF_GasV
 353           RodF_BEV
 354           RodF_HEV
 355           RodF_FCEV
 356          /
 357   
 358       RodPi(i)      Road passenger
 359          /RodP_OEV
 360           RodP_GasV
 361           RodP_BEV
 362           RodP_HEV
 363           RodP_FCEV
 364          /
 365       RodPAFV(i)    Road passenger  - advanced alternative vehicle
 366          /RodP_GasV
 367           RodP_BEV
 368           RodP_HEV
 369           RodP_FCEV
 370          /
 371   
 372       AFV(i)        Alternative fuel vehicles
 373          /Auto_GasV ,  RodF_GasV ,  RodP_GasV
 374           Auto_BEV  ,  RodF_BEV  ,  RodP_BEV
 375           Auto_HEV  ,  RodF_HEV  ,  RodP_HEV
 376           Auto_FCEV ,  RodF_FCEV ,  RodP_FCEV
 377          /
 378   
 379       HDVAFV(i)     HDV - Alternative fuel vehicles
 380          /RodF_GasV ,  RodP_GasV
 381           RodF_BEV  ,  RodP_BEV
 382           RodF_HEV  ,  RodP_HEV
 383           RodF_FCEV ,  RodP_FCEV
 384          /
 385   
 386       OEV(i)        Traditional onroad gasoline or gasoline-ethanol vehicle
 387          /Auto_OEV,  RodF_OEV,  RodP_OEV, Otrn_OEV /
 388       HEV(i)       Advanced hybrid vehicle
 389          /Auto_HEV, RodF_HEV, RodP_HEV/
 390       BEV(i)       Advanced battery vehicle
 391          /Auto_BEV, RodF_BEV, RodP_BEV/
 392       FCEV(i)       Advanced hydrogen vehicle
 393          /Auto_FCEV, RodF_FCEV, RodP_FCEV/
 394       GASV(i)       Advanced natural gas vehicle
 395          /Auto_GasV, RodF_GasV, RodP_GasV/
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/21/23 22:31:51 Page 9
ADAGE Model - Set Definition
C o m p i l a t i o n


 396       BioAFV(i)     Advanced vehicle refined oil is used so biofuel can be used to replace refined oil
 397          /Auto_GasV, Auto_HEV, RodF_HEV, RodP_HEV/
 398       NoBioAFV(i)     Advanced vehicle where refined oil is not used so no biofuel substitution
 399          /Auto_BEV, RodF_BEV, RodP_BEV, Auto_FceV, RodF_FceV, RodP_FceV, RodF_GasV, RodP_GasV/
 400       BioAutoAFV(i)    /Auto_HEV, Auto_GasV/
 401       AutoOEV(i)       /Auto_OEV/
 402       BioRodFAFV(i)    /RodF_HEV/
 403       rodFOEV(i)       /RodF_OEV/
 404       BioRodPAFV(i)    /RodP_HEV/
 405       RodPOEV(i)       /RodP_OEV /
 406   
 407       trnrod(i)     Onroad transportation where data sources are available
 408          /RodF, RodP, auto_OEV, auto_GasV, auto_BEV, auto_HEV, auto_FCEV  /
 409   
 410  set  maptrn(i,j)  map onroad transportation sector and its afv sectors
 411            /Auto . (Auto_OEV, Auto_GasV,  Auto_BEV, Auto_HEV, Auto_FCEV)
 412             RodF . (RodF_OEV, RodF_GasV,  RodF_BEV, RodF_HEV, RodF_FCEV)
 413             RodP . (RodP_OEV, RodP_GasV,  RodP_BEV, RodP_HEV, RodP_FCEV)
 414            /
 415       mapoev(i,j) map oev to its general sectors (used in report writing)
 416            /Auto_OEV .Auto
 417             RodF_OEV .RodF
 418             RodP_OEV .RodP
 420            /
 421   
 422      maptrn2(i,j)  map onroad transportation sector and its afv sectors
 423            /Auto . (Auto, Auto_OEV, Auto_GasV,  Auto_BEV, Auto_HEV, Auto_FCEV)
 424             RodF . (RodF, RodF_OEV, RodF_GasV,  RodF_BEV, RodF_HEV, RodF_FCEV)
 425             RodP . (RodP, RodP_OEV, RodP_GasV,  RodP_BEV, RodP_HEV, RodP_FCEV)
 426            /
 427   
 428      maptrn3(i,j)  map onroad transportation sector and its afv sectors
 429            /Auto_OEV . (Auto_OEV,  Auto_GasV,  Auto_BEV, Auto_HEV, Auto_FCEV)
 430             RodF_OEV . (RodF_OEV,  RodF_GasV,  RodF_BEV, RodF_HEV, RodF_FCEV)
 431             RodP_OEV . (RodP_OEV,  RodP_GasV,  RodP_BEV, RodP_HEV, RodP_FCEV)
 432            /;
 433   
 434  set  ddgs(i)    /ddgs/
 435       omel(i)    /omel/
 436       corn(i)    /corn/;
 437   
 438  set  agrbio(i)     Ag & byproducts & biofuel & processed food
 439         /ceth    "Corn ethanol"
 440          weth    "Wheat ethanol"
 441          scet    "Sugarcane ethanol"
 442          sbet    "Sugarbeet ethanol"
 443   
 444          sybd    "Soybean biodiesel"
 445          rpbd    "Rape-Mustard biodiesel"
 446          plbd    "Palm-Kernel biodiesel"
 447          Cobd    "Corn-oil biodiesel (introduced after 2010)"
 448   
 449          ddgs    "Distillers grains with solubles (DDGs) - byproduct from corn ethanol production"
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 10
ADAGE Model - Set Definition
C o m p i l a t i o n


 450          omel    "Vegetable oil meal - byproduct from vegetable oil production"
 451   
 452          wht     "Wheat"
 453          corn    "Corn"
 454          gron    "Rest of cereal grains not elsewhere classified"
 455          soyb    "Soybean"
 456          osdn    "Rest of oilseeds"
 457          srcn    "Sugarcane"
 458          srbt    "Sugarbeet"
 459          ocr     "Crops not elsewhere classified"
 460   
 461          LIV     "Livestock"
 462          FRS     "Forestry"
 463   
 464          MEA     "Meat"
 465          VOL     "Vegetable oils"
 466          OFD     "Other food products"
 467        /;
 468   
 469  set  mat(i)        "Material inputs"
 470       man(s)        "Manufacturing goods"
 471       s_trn(s)      "Sectors excluding transport"
 472       trnall(i)     "All transportation sectors"     ;
 473   
 474      mat(s) = s(s);
 475      man(s) = s(s) - srv(s) - trn(s) - agr(s);
 476      s_trn(s) = s(s) - trn(s);
 477   
 478      trnall(trn) = yes;
 479      trnall(oev) = yes;
 480      trnall(afv) = yes;
 481   
 482  display s_trn,man,trnall;
 483   
 484  **--- energy  ---**
 485  set  cego(i)       Coal & electricity & natural gas & refined oil  / col,ele,gas,oil /
 486       ceg(i)        Coal & electricity & natural gas                / col,ele,gas /
 487       cgo(i)        Coal & natural gas & refined oil                / col,gas,oil /
 488       ego(i)        Electricity & natural gas & refined oil         / ele,gas,oil /
 489       eg(i)         Electricity & natural gas                       / ele,gas /
 490       col(i)        Coal          / col /
 491       cru(i)        Crude oil     / cru /
 492       ele(i)        Electricity   / ele /
 493       gas(i)        Natural gas   / gas /
 494       oil(i)        Refined oil   / oil /
 495   
 496       ff(i)         Fossil fuels
 497         /col, cru, gas, oil/  ;
 498   
 499  set  e(i)          All energy including first and second generation biofuels
 500         /col , cru , gas , oil , ele
 501          ceth, weth, scet, sbet
 502          sybd, rpbd, plbd, cobd
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 11
ADAGE Model - Set Definition
C o m p i l a t i o n


 503          advb, Swge, Albd, Msce, ArsE, FrsE, FrwE
 504         /
 505   
 506       et(e)         First generation ethanol     /ceth, weth, scet, sbet/
 507       bd(e)         First generation biodiesel  /sybd, rpbd, plbd, cobd/
 508       ad(e)         Advanced biofuel             /Swge, Albd, Msce, ArsE, FrsE, FrwE/
 509       advb(e)       Advanced biofuel aggregates  /advb/
 510   
 511       bioe(e)       First generation biofuels
 512         /ceth, weth, scet, sbet
 513          sybd, rpbd, plbd, cobd   /
 514   
 515       cegoe(i)      Fossil fuel and first generation biofuels
 516         /col , ele , gas , oil
 517          ceth, weth, scet, sbet
 518          sybd, rpbd, plbd, cobd   /
 519   
 520       bio(i)        First generation biofuels
 521         /ceth, weth, scet, sbet
 522          sybd, rpbd, plbd, cobd /
 523   
 524       ethl(i)       First generation ethanol     /ceth, weth, scet, sbet/
 525       biod(i)       First generation biodiesel   /sybd, rpbd, plbd, Cobd/
 526       advbio(e)     Advanced biofuels            /Swge,Albd,Msce,ArsE,FrsE,FrwE/
 527   
 528       ceth(i)       Corn ethanol                 /ceth/
 529       sybd(i)       Soybean Biodiesel            /sybd/
 530       cobd(i)       Corn-oil biodiesel           /cobd/
 531   
 532       Swge(i)         /Swge/
 533       Msce(i)         /Msce/
 534       Albd(i)         /Albd/
 535       ArsE(i)         /ArsE/
 536       FrsE(i)         /FrsE/
 537       FrwE(i)         /FrwE/
 538   
 539       advl(advbio)  Advanced biofuels that use land  /swge,msce,frwe/
 540       ob(i)         Biofuels and refined oil mix used in transportation
 541          /oil
 542           ceth, weth, scet, sbet
 543           sybd, rpbd, plbd, cobd
 544           Swge, Albd, Msce, ArsE, FrsE, FrwE  /;
 545   
 546  set  lu(i)        land use categories
 547       /  crop         Cropland
 548          Liv          Pasture land
 549          Frs          Managed Forestry
 550          Ngrs         Natural grassland
 551          Nfrs         Natural forestry land
 552  *       Othr         Other type of land
 553        /
 554   
 555       agri(lu)      Agricultural land        / Crop, Liv, Frs /
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 12
ADAGE Model - Set Definition
C o m p i l a t i o n


 556       nat(lu)       Natural land             / Nfrs,  Ngrs /
 557       nfrs(nat)     Natural forestry land    / Nfrs /
 558       ngrs(nat)     Natural grassland        / Ngrs / ;
 559   
 560   
 561  * electricity generation types
 562  set  gentype(i)    Types of electricity generation
 563        /
 564  **---  Electricity Generation ---**
 565          Conv            "Conventional fossil electricity"
 566            Conv_Col      "Conventional coal generation"
 567            Conv_gas      "Conventional natural gas generation"
 568            Conv_Oil      "Conventional refined oil generation"
 569          nuc             "Nuclear electricity"
 570          hyd             "Hydropower electricity"
 571          geo             "Geothermal electricity"
 572          bio             "Biomass electricity"
 573          wnd             "Wind electricity"
 574          sol             "Solar electricity"
 575          bat             "Electricity storage such as battery"
 576   
 577  **---  Advanced technology for electricity generation
 578          CCS_col         "Coal carbon capture and storage (90% capture)"
 579          CC_gas          "Natural gas combined cycle"
 580          CCCCS_gas       "Natural gas combined cycle with carbon capture and storage (90% capture)"
 581          wnd_gas         "Wind generation backed by natural gas"
 582          sol_gas         "Solar genration backed by natural gas"
 583   
 584  *       swge            "Electricity generated from swge production
 585        /
 586       convrnw(i)    Conventional and renewable generation / conv_col, conv_gas, conv_oil
 587                                                             nuc, hyd, bio, geo, wnd, sol/
 588       conv(i)       Conventional generation      / conv/
 589       convi(i)      Conventional generation      / conv_col, conv_gas, conv_oil /
 590       cc_gas(i)     Combined cycle natural gas   /CC_gas/
 591       rnw(i)        Renewable generation         / nuc, hyd, bio, geo, wnd, sol/
 592       conv_oil(i)   Conventional generation      / conv_oil /
 593       wndsol(i)     Wind and Solar               / wnd, sol/
 594       wnd(i)        Wind generation              / wnd/
 595       sol(i)        Solar generation             / sol/
 596       hydgeo(i)     Hydropower and Geothermal    / Hyd, geo /
 597       bioelec(i)    Bioelectricity generation    / bio/
 598       geo(i)        Geothermal                   / geo/
 599       nuc(i)        Nuclear generation           / nuc/
 600   
 601   
 602       adve(i)       Advanced technology for electricity generation
 603        / CCS_col         "Coal carbon capture and storage"
 604          CC_gas          "Natural gas combined cycle"
 605          CCCCS_gas       "Natural gas combined cycle with carbon capture and storage"
 606          wnd_gas         "wind generation backed by natural gas"
 607          sol_gas         "solar generation backed by natural gas"
 608        /
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 13
ADAGE Model - Set Definition
C o m p i l a t i o n


 609   
 610      advee(i)      Advanced technology for electricity generation (near-term)
 611        / CCS_col, CC_gas, CCCCS_gas/
 612      CCS(i)        Carbon capture and storage
 613        /CCS_col,  CCCCS_gas/      ;
 614   
 615  set elefuelmap(i,j)    Electricity generation fuel and technology mapping
 616      /  col.( Conv_Col,    CCS_col)
 617         gas.( Conv_gas,    CC_gas,  CCCCS_gas)
 618         oil.( Conv_Oil)
 619  *      nuc. nuc
 620  *      bio. bio
 621      /
 622   
 623     elesplitmap(i,j)   Electricity generation split mapping from GTAP data
 624     /  conv. (conv_col, conv_gas, conv_oil)
 625        wnd.  (wnd, sol)
 626        hyd.  (hyd, geo)
 627  *     nuc.   nuc
 628  *     bio.   bio
 629     /
 630   
 631    eleemismap(i,j)    Electricity generation emission mapping
 632      /  Conv_Col.    CCS_col
 633         Conv_gas.   (CC_gas,  CCCCS_gas)
 634      /
 635  parameter eleemisf(j,i)  electricity generation emissions adjustment for CCS;
 636     eleemisf(e,i)$(elefuelmap(e,i) and not CCS(i))=1;
 637     eleemisf(e,i)$(elefuelmap(e,i) and CCS(i))=0.1;
 638   
 639  set  use           Energy use
 640       /  fuel           "Energy for fuel"
 641          feed           "Feedstocks"
 642          heat           "Residential heating"
 643          othr           "Other residential energy" /
 644   
 645       fdst(use)     Energy use as feedstock         / feed/
 646       fuel(use)     Energy use as fuel              / fuel/
 647       hous(use)     Energy use in housing or other  / heat,othr/;
 648   
 649  set  k             Capital types
 650        / va              "Value-added"
 651          res             "Residential houses"
 652          ldv             "Light-duty personal vehicles"   /;
 653   
 654  set
 655       va(k)         "Value-added capital"                  / va  /
 656       ldv(k)        "Residential house capital"            / ldv /
 657       res(k)        "Light-duty personal vehicle capital"  / res / ;
 658   
 659  * household variables
 660  set
 661       housei(i)       / house /
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 14
ADAGE Model - Set Definition
C o m p i l a t i o n


 662       hh(i)           / HH    /;
 663   
 664  set  v(i)          Capital vintages                / extant,new /
 665       extant(i)     Existing (fixed) production     / extant /
 666       new(i)        New (flexible) production       / new /
 667       vnum(v)       New (flexible) production       / new / ;
 668   
 669  set  trd           Foreign trade type      / ftrd /;
 670   
 671  set  ghg           Greenhouse gas types   / co2,ch4,n2o,hfc,pfc,sf6 /
 672       co2(ghg)      Carbon dioxide         / co2 /
 673       ch4(ghg)      Methane                / ch4 /
 674       n2o(ghg)      Nitrous oxide          / n2o /
 675       hfc(ghg)      Hydrofluorocarbons     / hfc /
 676       pfc(ghg)      Perfluorocarbons       / pfc /
 677   
 678       sf6(ghg)      Sulphur hexafluoride   / sf6 /
 679   
 680       cvar          Carbon type in land use change /vegc, soilc /
 681   
 682       ap            Air pollutants
 683         /BC             Black carbon
 684          CO             Carbon monoxide
 685          NH3            Ammonia
 686          NMVOC          Non-methane volatile organic compounds
 687          NOX            Nitrogen oxides
 688          OC             Organic carbon
 689          PM10           Particulate matter 10 micrometers or less in diameter
 690          PM25           Particulate matter 2.5 micrometers or less in diameter
 691          SO2            Sulfur dioxide
 692         / ;
 693   
 694   
 695  alias   (s,g),    (g,gg),     (r,rr),     (r,rrr);
 696  alias   (e,ee),   (e,f),      (cgo,cgoe), (hh,hhh),   (k,kk),     (v,vv);
 697  alias   (lu,lu_), (agr,agrs), (crp,crp0), (ad,ad0),   (bio,bio0), (agri,agrii);
 698  alias   (i,ii),   (j, jj),    (afv,afv1);
 699   
 700  *CCCCCCCCCCCCCCCCCCC Set up flags for special control  CCCCCCCCCCCCCCCCCCCCCCCCC
 701  parameter   f_ghg(r,ghg)      Flag to price ghg emissions other than CO2 emissions from fossil fuel combustion or not (CO2 emissions from industrial processes are included here)
 702              f_co2(r)          Flag to price co2 emissions from fossil fuel combustion or not
 703              f_co2luc(r)       Flag to price co2 emissions from land use change or not
 704              f_co2eq(r)        Flag to price both f_ghg and f_co2 and f_co2luc emission or not
 705   
 706              ctax(r)           Flag to specify which regions have ghg tax applied to them
 707              ctaxt(r,t)        GHG tax growth path over time
 708              ghgcarb           Convert GHG emissions to co2eq to equilibrate prices in carbon tax scenarios
 709   
 710              f_co2eq_target    Flag to activate co2eq emission reduction target or not
 711   
 712              f_hdvbio(r,i)     Flag to expand biofuel usage in HDV transportation for conventional and afv
 713              f_afvbio(r,i)     Flag to expand biofuel usage in LDV and HDV for AFV
 714   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 15
ADAGE Model - Set Definition
C o m p i l a t i o n


 715              f_trn(r,i,v)      Flag to use fixed factor endowment for conventional OEV
 716   
 717              f_case            Flag to initiate which difcarb to use
 718   
 719              f_cru(r)          Flag to set up an exogenous crude oil price
 720              pcrutrd(r)        Exogenous crude oil price path if f_cru is activated
 721   
 722              f_advgen(r,i,v)   Flag to activate advanced electricity generation technology
 723   
 724              f_ele(r)          Flag to activate the electricity generation emission cap
 725              co2elecap(r)      CO2 emission cap on electricity generation (mmt co2e)
 726   
 727              f_afv(r,i,v)      Flag to activate afv technology for on-road transportation
 728   ;
 729   
 730      f_ghg(r,ghg)   = 0;
 731      f_co2(r)       = 0;
 732      f_co2luc(r)    = 0;
 733      f_co2eq(r)     = 0;
 734   
 735      ctax(r)        = 0;
 736      ctaxt(r,t)     = 0;
 737      ghgcarb(r)     = no;
 738   
 739      f_co2eq_target = 0;
 740   
 741  * The following settings are for sensitivity analysis. The default is f_case=2
 742  *   f_case=1: original difcarb to use
 743  *   f_case=2: emission factor is reduced by 30% for non-cropland in order to calculate difcarb
 744  *   f_case=3; emission factor is reduced by 30% for non-cropland type and some regions are further adjusted to calculate difcarb
 745  *   f_case=4: regional emisisons are further adjusted to ensure simulated emission in 2015 close to the luc emission in 2010 in ghg_lulc0 from World resource institue
 746   
 747      f_case         = 2;
 748   
 749      f_cru(r)       = 0;
 750      pcrutrd(r)     = 1;
 751   
 752      f_advgen(r,i,v)= 0;
 753      f_ele(r)       = 0;
 754      co2elecap(r)   = 0;
 755   
 756      f_afv(r,i,v)   = 0;
 757      f_hdvbio(r,i)  = 0;
 758      f_afvbio(r,i)  = 0;
 759      f_trn(r,i,v)   = 0;
 760   
 761   
 762  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 763  *              Keep the following and don't delete
 764  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      * In the loop file, we can choose the follow options to activate them to allow biofuel expansion to all technologies in LDV and HDV
          f_afv(r,afv,"new")   = 1;
          f_hdvbio(r,hdv)      = 1;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 16
ADAGE Model - Set Definition
C o m p i l a t i o n


      * All technologies
      *    f_afvbio("USA",afv)$(f_afv("USA",afv,"new") and BioAFV(afv) )   = 1;
      * Auto_gas and auto_hev only
      *   f_afvbio("USA",afv)$(f_afv("USA",afv,"new") and BioAFV(afv) and bioautoafv(afv))   = 1;
      * HDV only
          f_afvbio("USA",afv)$(f_afv("USA",afv,"new") and BioAFV(afv) and not bioautoafv(afv))   = 1;
          f_afvbio(r,afv)$(sum(maptrn(i,afv),f_hdvbio(r,i))=0 and hdvafv(afv)) = 0;
      display  f_afvbio;
 778   
 779   
 780  **CCCCCCCCCCCCCCCCCCC    Set up sectoral mapping if aggregated version is used CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 781  scalar f_aggtrn          Flag to activate aggregated transportation sector
 782  set    aggtrn(i)         Aggregated transportation sector
 783         deltrn(i)         Transportation sectors that need to be removed in the aggregated version
 784         map_aggtrn(j,i)   Mapping between transportation aggregation
 785         mapsector(j,i)    Mapping individual sector to aggregated transportation sector
 786         mapGSector(j,i)   Mapping individual sector to aggregated transportation sector  ;
 787   
 789      f_aggtrn = 0;
 790      aggtrn(i)$trni(i)=yes;
 791      deltrn(i)$(trni(i) and not aggtrn(i)) =yes;
 792      Map_aggtrn(i,i)$trni(i)=yes;
 794   
 795      mapsector(i,i)$(not trni(i))=yes;
 796      mapSector(j,i)$(aggtrn(j)) = Map_aggtrn(j,i);
 797      mapGsector(j,i)= mapsector(j,i);
 798   
 799  display aggtrn,deltrn,map_aggtrn,mapsector,maptrn;
 800   
 801  *if(f_aggtrn=0, f_hdvbio("USA",s)$hdv(s)   = 1; );
 802  *if(f_aggtrn=1, f_hdvbio("USA",s)$(otrn(s))= 1; );
 803   
 804   
 805  *CCCCCCCCCCCCCCCCCCCCCCCC Main base-year data in 2010 with disaggregated transportation sectors   CCCCCCCCCCCCCCCCCCCC
 806  parameter
 807          y0_10(r,i,v,t)             Aggregate sectoral output ($2010 billion)
 808          ed0_10(r,j,use,i,v,t)      Energy Demand by sector ($2010 billion)
 809          id0_10(r,j,i,v,t)          Intermediate demand ($2010 billion)
 810          ld0_10(r,i,v,t)            Labor demand ($2010 billion)
 811          kd0_10(r,k,i,v,t)          Capital demand ($2010 billion)
 812          hkd0_10(r,i,v,t)           Human capital demand ($2010 billion)
 813          lnd0_10(r,i,v,t)           Land inputs to agriculture ($2010 billion)
 814          rd0_10(r,i,v,t)            Natural resource inputs to energy ($2010 billion)
 815          rnw0_10(r,i,v,t)           Resource input for electricity generation ($2010 billion)
 816   
 817          cd0_10(r,hh,i,t)           Consumption demand for goods ($2010 billion)
 818          fuel0_10(r,v,t)            Fuel use in personal vehicles (combined with oil & gas and biofuel or other fuels) ($2010 billion)
 819          house0_10(r,i,v,t)         Housing services ($2010 billion)
 820          le0_10(r,hh,t)             Labor endowment of households ($2010 billion)
 821          ke0_10(r,hh,t)             Capital endowment of households ($2010 billion)
 822   
 823          i0_10(r,k,i,t)             Investment demand for goods ($2010 billion)
 824          inv0_10(r,k,t)             Total investment ($2010 billion)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 17
ADAGE Model - Set Definition
C o m p i l a t i o n


 825          g0_10(r,i,t)               Government demand for goods ($2010 billion)
 826          gov0_10(r,t)               Total government ($2010 billion)
 827          tax0_10(r,t)               Total tax revenues ($2010 billion)
 828          lstax_10(r,hh,t)           Lump-sum transfers ($2010 billion)
 829          land0_10(r,t)              Total land endowment ($2010 billion)
 830   
 831          x0_10(r,i,trd,t)           Exports ($2010 billion)
 832          m0_10(r,i,trd,t)           Imports ($2010 billion)
 833          n0_10(r,rr,i,t)            Interregional trade ($2010 billion)
 834          tpt0_10(r,i,t)             Transport services for trade goods ($2010 billion)
 835          trs0_10(r,rr,i,t)          Transport services by export goods ($2010 billion)
 836   
 837          ty_10(r,i)                 Output tax rate (%)
 838          te_10(r,j,use,i,t)         Energy tax rate (%)
 839          ti_10(r,j,i)               Intermediate inputs tax (%)
 840          tl_10(r,i)                 Labor tax rate (%)
 841          tk_10(r,k,i)               Capital tax rate (%)
 842          thk_10(r,i)                Human capital tax rate (%)
 843          tn_10(r,i)                 Land tax rate (%)
 844          tr_10(r,i)                 Resource tax rate (%)
 845          tc_10(r,i)                 Consumption tax (%)
 846          tinv_10(r,k,i)             Investment tax (%)
 847          tg_10(r,i)                 Government purchases tax (%)
 848          tx_10(r,rr,i)              Export tax (%)
 849          tm_10(r,rr,i)              Import tax (%)
 850   
 851          a0_10(r,i,t)               Armington goods ($2010 billion)
 852          d0_10(r,i,t)               Domestic goods ($2010 billion)
 853          c0_10(r,hh,t)              Total consumption of goods ($2010 billion)
 854   
 855          pld0_10(r,i)               Reference labor price (=1+tax rate)
 856          pkd0_10(r,k,i)             Reference capital price (=1+tax rate)
 857          phkd0_10(r,i)              Reference human capital price (=1+tax rate)
 858          pid0_10(r,j,i)             Reference intermediate inputs price (=1+tax rate)
 859          plnd0_10(r,i)              Reference land price (=1+tax rate)
 860          prd0_10(r,i)               Reference resource price (=1+tax rate)
 861          pcd0_10(r,i)               Reference consumption goods price (=1+tax rate)
 862          pmt0_10(r,rr,i)            Reference imports price (=1+tax rate)
 863          pmx0_10(r,rr,i)            Reference exports price (=1+tax rate)
 864   
 865          ertl0_10(r,j,use,i,t)      Energy Retail Demand by sector ($2010 billion)
 866          ewhl0_10(r,j,use,i,t)      Energy Wholesale Demand by sector ($2010 billion)
 867          emrg0_10(r,j,use,i,t)      Energy Margins ($2010 billion)
 868          etax0_10(r,j,use,i,t)      Energy Taxes ($2010 billion)
 869   
 870          btu0_10(r,j,use,i,t)       Energy consumption by sector (quad Btu)
 871          prod0_10(r,i,t)            Energy production (quad Btu)
 872          elegen0_10(r,i)            Electricity generation by type (quad Btu)
 873          em0_btu_10(r,i,t)          Energy imports (quad Btu)
 874          ex0_btu_10(r,i,t)          Energy exports (quad Btu)
 875          en0_btu_10(r,rr,i,t)       Energy bilateral trade (quad btu)
 876   
 877          prc0_10(r,j,use,i)         Delivered retail energy prices ($2010 per MMBtu)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 18
ADAGE Model - Set Definition
C o m p i l a t i o n


 878          whlprc0_10(r,i)            Wholesale energy prices ($2010 per MMBtu)
 879   
 880          hectares0_10(r,i)          Land used in agricultural crops (hectares)
 881          tons_10(r,i)               Agricultural crop production (metric tons)
 882  ;
 883   
 884  * Baseyear data from various sources: GTAP, IEO, EIA, FAO, GCAM
 885  * Data includes renewable electricity generation and disaggregated transportation sector
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data1_main.gdx
--- LOAD  y0_10 = 1:y0
--- LOAD  id0_10 = 2:id0
--- LOAD  ld0_10 = 3:ld0
--- LOAD  hkd0_10 = 4:hkd0
--- LOAD  kd0_10 = 5:kd0
--- LOAD  rd0_10 = 6:rd0
--- LOAD  rnw0_10 = 7:rnw0
--- LOAD  lnd0_10 = 8:lnd0
--- LOAD  cd0_10 = 9:cd0
--- LOAD  fuel0_10 = 11:fuel0
--- LOAD  i0_10 = 12:i0
--- LOAD  g0_10 = 13:g0
--- LOAD  x0_10 = 14:x0
--- LOAD  m0_10 = 15:m0
--- LOAD  n0_10 = 16:n0
--- LOAD  tpt0_10 = 18:tpt0
--- LOAD  trs0_10 = 17:trs0
--- LOAD  ty_10 = 19:ty
--- LOAD  ti_10 = 21:ti
--- LOAD  tl_10 = 22:tl
--- LOAD  tk_10 = 23:tk
--- LOAD  thk_10 = 24:thk
--- LOAD  tn_10 = 25:tn
--- LOAD  tr_10 = 26:tr
--- LOAD  tc_10 = 27:tc
--- LOAD  tinv_10 = 28:tinv
--- LOAD  tg_10 = 29:tg
--- LOAD  tx_10 = 30:tx
--- LOAD  tm_10 = 31:tm
--- LOAD  te_10 = 20:te
--- LOAD  ed0_10 = 34:ed0
--- LOAD  emrg0_10 = 35:emrg0
--- LOAD  etax0_10 = 36:etax0
--- LOAD  ewhl0_10 = 37:ewhl0
--- LOAD  ertl0_10 = 38:ertl0
--- LOAD  btu0_10 = 39:btu0
--- LOAD  prod0_10 = 40:prod0
--- LOAD  prc0_10 = 41:prc0
--- LOAD  whlprc0_10 = 42:whlprc0
--- LOAD  elegen0_10 = 43:elegen
--- LOAD  hectares0_10 = 32:hectares
--- LOAD  tons_10 = 33:tons
--- LOAD  house0_10 = 47:house0
--- LOAD  tax0_10 = 48:tax0
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 19
ADAGE Model - Set Definition
C o m p i l a t i o n


--- LOAD  gov0_10 = 49:gov0
--- LOAD  lstax_10 = 50:lstax
--- LOAD  a0_10 = 51:a0
--- LOAD  d0_10 = 52:d0
--- LOAD  c0_10 = 53:c0
--- LOAD  inv0_10 = 54:inv0
--- LOAD  land0_10 = 55:land0
--- LOAD  le0_10 = 56:le0
--- LOAD  ke0_10 = 57:ke0
--- LOAD  pld0_10 = 58:pld0
--- LOAD  pkd0_10 = 59:pkd0
--- LOAD  phkd0_10 = 60:phkd0
--- LOAD  pid0_10 = 61:pid0
--- LOAD  plnd0_10 = 62:plnd0
--- LOAD  prd0_10 = 63:prd0
--- LOAD  pcd0_10 = 64:pcd0
--- LOAD  pmt0_10 = 65:pmt0
--- LOAD  pmx0_10 = 66:pmx0
--- LOAD  em0_btu_10 = 44:em0_btu
--- LOAD  ex0_btu_10 = 45:ex0_btu
--- LOAD  en0_btu_10 = 46:en0_btu
 896   
 897  * Rename the capital type in auto from va to ldv so it is consistent with model structure
 898      kd0_10(r,"ldv","auto",v,t)= kd0_10(r,"va","auto",v,t) ;
 899      kd0_10(r,"va","auto",v,t) = 0;
 900  * Household energy consumption is accounted in ed0(r,e,use,hh) so remove it from the final consumption
 901      cd0_10(r,hh,i,t)$e(i)     = 0;
 902   
 903   
 904  parameter  oev_valu0_10(r,i,v,t)   Oil and biofuel fuel use in on-road transportation in 2010 ($2010 billion)
 905             oev_btu0_10(r,e,i,t)    Oil and biofuel fuel use in on-road transportation in 2010 (quad)  ;
 906   
 907      oev_valu0_10(r,i,v,t)$trnv(i)= sum(e$ob(e),ed0_10(r,e,"fuel",i,v,"2010"));
 908      oev_btu0_10(r,e,i,t)$(trnv(i) and ob(e)) = btu0_10(r,e,"fuel",i,"2010");
 909   
 910   
 911   
 912  **CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 913  *                            Electricity Sector Disaggregation and Updates
 914  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 915  * Goal: 1) Split fossil fuel electricity generation into coal, gas and oil
 916  *          Split solar from wind
 917  *          split geothermol from hydro power
 918  *       2) Introduce advanced technologies such as CC_gas, CCCCS_gas
 919  *       3) Update the generation cost using ATB2020 data: https://atb.nrel.gov/electricity/2020/about.php
 920  *
 921   
 922  set  elei      Input used in elctricity generation for all regions in ADAGE
 923       / Col,  Gas,  Oil,   Eim,   Man,    Srv,    Ld0,    Kd0,    Id0,   ed0, rnw0, Y0, LCOE/;
 924   
 925  * Introduce IEO2017 data to split renewables
 926  parameter  IEO2017_gentech     Electricity generation from IEO2017 (solar wind hyr geo are included) (quad)
 927  * The file is generated from D:\Model\ADAGE\CGE_Data_2011_tran\International\Energy_Data\EIA_2018\read_IEO2017.gms
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 20
ADAGE Model - Set Definition
C o m p i l a t i o n


 928  *             copied from D:\Model\ADAGE\CGE_Data_2011_tran\International\Energy_Data\EIA_2018\output\IEO2017_gen.gdx
 929  *             renamed to data11_en_eia_gen.gdx in ADAGE model
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data11_en_eia_gen.gdx
--- LOAD  IEO2017_gentech = 1:gen
 932  ;
 933      IEO2017_gentech(r,"sol",t) = IEO2017_gentech(r,"slr",t);
 934      IEO2017_gentech(r,"slr",t) = 0;
 935   
 936  * Fill in missing value with a tiny value
 937      IEO2017_gentech("bra","sol",t)$(t.val<2020) =  IEO2017_gentech("bra","sol","2020");
 938      IEO2017_gentech("chn","geo",t)$(t.val=2015) =  IEO2017_gentech("chn","geo","2010");
 939      IEO2017_gentech("xlm","sol",t)$(t.val<2025) =  IEO2017_gentech("xlm","sol","2025");
 940   
 941  Table EIA_heateff(*,*)    Heat efficiency in electricity generation (%)
 942  *https://www.eia.gov/electricity/annual/html/epa_08_01.html
 943  *Table 8.1. Average Operating Heat Rate for Selected Energy Sources, 2006 through 2016 (Btu per kilowatt hour)
 944  *Btu per kilowatt hour is then converted to Btu generated/btu used, so it becomes percentage to measure energy use efficiency
 945  *Heat rate is the average by energy source from the existing technologies, so gas would be the average from conv_gas
 946  *  and cc_gas as CC_gas already accounts for large share of gas generation
 947   
 948              Col              oil            Gas           Nuc
 949  2006        0.32963        0.31566        0.40279        0.32698
 950  2007        0.32887        0.31610        0.40605        0.32529
 951  2008        0.32877        0.30976        0.41084        0.32644
 952  2009        0.32764        0.31237        0.41814        0.32623
 953  2010        0.32760        0.31063        0.41686        0.32644
 954  2011        0.32669        0.31508        0.41855        0.32607
 955  2012        0.32501        0.31044        0.42443        0.32560
 956  2013        0.32623        0.31849        0.42929        0.32654
 957  2014        0.32720        0.31552        0.43152        0.32623
 958  2015        0.32511        0.31927        0.43310        0.32626
 959  2016        0.32517        0.31560        0.43355        0.32623
 960  ;
 961   
 962   
 963  * Update exisiting electricity technology and introduce new electricity generation technology
 964  parameters ATB20_elecost(r,i,t,*)     Production cost for electricity generation ($2010 per mmbtu)
 965             ATB20_heateff(i)           Electricity energy conversion efficiency by ADAGE sectors (%)
 966             ATB20_WndSolCost           Wind and solar cost and potential generations by detailed technology ($ per mmbtu and quad for gen);
 967   
 968  set        ATB20_mapall               Mapping between ATB technology and ADAGE electricity generation technology ;
 969   
 970  * Source: ATB2020 data from https://atb.nrel.gov/electricity/2020/about.php
 971  * Process: D:\Model\ADAGE\CGE_Data_2011_tran\International\Eletech_data
 972  * Output: D:\Model\ADAGE\CGE_Data_2011_tran\International\Eletech_data\output\Data_ATB2020.gdx
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data11_ATB2020.gdx
--- LOAD  ATB20_elecost = 4:ATB20_elecost
--- LOAD  ATB20_heateff = 3:heateff
--- LOAD  ATB20_WndSolCost = 5:ATB20_WndSolCost
--- LOAD  ATB20_mapall = 2:mapall
 975   
 976      ATB20_heateff("conv_oil") = EIA_heateff("2010","oil") ;
 977  * As natural gas related generation has upward trend in energy cost after 2020, so change it to be flat at 2020 value
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 21
ADAGE Model - Set Definition
C o m p i l a t i o n


 978      ATB20_elecost(r,"conv_gas" ,t,"ed0")$(t.val>2020) = ATB20_elecost(r,"conv_gas" ,"2020","ed0") ;
 979      ATB20_elecost(r,"cc_gas"   ,t,"ed0")$(t.val>2020) = ATB20_elecost(r,"cc_gas" ,"2020","ed0") ;
 980      ATB20_elecost(r,"ccccs_gas",t,"ed0")$(t.val>2020) = ATB20_elecost(r,"ccccs_gas","2020","ed0") ;
 981      ATB20_elecost(r,i ,t,"LCOE") =sum(elei$(not sameas(elei,"LCOE")), ATB20_elecost(r,i ,t,elei));
 982   
 983  *CCCCCC Goal 1: Split CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 984  parameter  chk0_elegen_btu    Check electricity generation from fossil fuels in 2010 (quad)
 985             heateff(r,i)       Final heat rate (%)
 986   
 987             eleshr2split_btu   Electricity share to split in in terms to btu
 988             eleshr2split_val   Electricity share to split in in terms to $
 989   
 990             chk0_eleprod       Check electricity generation input share in 2010 ($ per mmbtu)
 991             chk0_elecost       Check Electricity generation cost by source in 2010 ($ per mmbtu)
 992  ;
 993   
 994  * Rename conventional electricity to new name
 995      elegen0_10(r,"conv") = sum(elefuelmap(e,convi), elegen0_10(r,e));
 996      elegen0_10(r,convi)  = sum(elefuelmap(e,convi), elegen0_10(r,e));
 997      elegen0_10(r,cgo)    = 0;
 998   
 999      btu0_10(r,cgo,use,"conv",t)= btu0_10(r,cgo,use,"ele",t);
1000      btu0_10(r,e,use,convi,t)   = sum(elefuelmap(e,convi), btu0_10(r,e,use,"ele",t));
1001      btu0_10(r,cgo,use,"ele",t) = 0;
1002   
1003  * Compare electricity generation by different heat efficiency assumption
1004      chk0_elegen_btu(r,"conv")        = elegen0_10(r,"conv");
1005      chk0_elegen_btu(r,"conv1")       = sum(convi, elegen0_10(r,convi));
1006      chk0_elegen_btu(r,"conv2")       = sum(elefuelmap(e,convi), btu0_10(r,e,"fuel",convi,"2010")*ATB20_heateff(convi));
1007      chk0_elegen_btu(r,"conv3")       = sum(elefuelmap(e,convi), btu0_10(r,e,"fuel",convi,"2010")*EIA_heateff("2010",e));
1008      chk0_elegen_btu(r,"Total")       =  elegen0_10(r,"conv")+ sum(rnw,elegen0_10(r,rnw))
1009                                        - prod0_10(r,"ele","2010");
1010   
1011  * We use heat rate from GTAP for conventional fossil fuel technology, and ATB2020 for other tecthnologies.
1012      heateff(r,convi)             = sum(elefuelmap(e,convi),elegen0_10(r,convi)/btu0_10(r,e,"fuel",convi,"2010"));
1013      heateff(r,i)$(not convi(i))  = ATB20_heateff(i);
1014   
1015      chk0_elegen_btu(r,"conv4")       = sum(elefuelmap(e,convi), btu0_10(r,e,"fuel",convi,"2010")*heateff(r,convi));
1016   
1017  display elegen0_10,prod0_10,chk0_elegen_btu;
1018   
1019  * Split coal, gas and oil generation from GTAP data, defining in terms of btu
1020  * Split geo from hyd, sol from wnd  - split from i to j using IEO2018 data
1021      eleshr2split_btu(r,convi,"conv")= elegen0_10(r,convi)/elegen0_10(r,"conv");
1022      eleshr2split_btu(r,"sol","wnd") = IEO2017_gentech(r,"sol","2010")/sum(wndsol,IEO2017_gentech(r,wndsol,"2010"));
1023      eleshr2split_btu(r,"wnd","wnd") = IEO2017_gentech(r,"wnd","2010")/sum(wndsol,IEO2017_gentech(r,wndsol,"2010"));
1024      eleshr2split_btu(r,"geo","hyd") = IEO2017_gentech(r,"geo","2010")/sum(hydgeo,IEO2017_gentech(r,hydgeo,"2010"));
1025      eleshr2split_btu(r,"hyd","hyd") = IEO2017_gentech(r,"hyd","2010")/sum(hydgeo,IEO2017_gentech(r,hydgeo,"2010"));
1026   
1027      elegen0_10(r,rnw)$sum(elesplitmap(j,rnw),1) = sum(elesplitmap(j,rnw),eleshr2split_btu(r,rnw,j)*elegen0_10(r,j));
1028   
1029  * Split coal, gas and oil generation from GTAP data in terms of $
1030  * Split geo from hyd, sol from wnd - same as split based on btu
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 22
ADAGE Model - Set Definition
C o m p i l a t i o n


1031   
1032      ed0_10(r,e,"fuel",convi,"new",t)  = sum(elefuelmap(e,convi),ed0_10(r,e,"fuel","conv","new",t));
1033   
1034      eleshr2split_val(r,convi,"conv")  = sum(elefuelmap(e,convi),ed0_10(r,e,"fuel",convi,"new","2010"))
1035                                         /sum(elefuelmap(ee,j),ed0_10(r,ee,"fuel",j,"new","2010"));
1036   
1037      eleshr2split_val(r,rnw,j)$eleshr2split_btu(r,rnw,j) = eleshr2split_btu(r,rnw,j);
1038   
1039      y0_10(r,ii,v,t)$sum(elesplitmap(i,ii),1)    = sum(elesplitmap(i,ii), y0_10(r,i,v,t)    * eleshr2split_val(r,ii,i));
1040      kd0_10(r,k,ii,v,t)$sum(elesplitmap(i,ii),1) = sum(elesplitmap(i,ii), kd0_10(r,k,i,v,t) * eleshr2split_val(r,ii,i));
1041      hkd0_10(r,ii,v,t)$sum(elesplitmap(i,ii),1)  = sum(elesplitmap(i,ii), hkd0_10(r,i,v,t)  * eleshr2split_val(r,ii,i));
1042      id0_10(r,g,ii,v,t)$sum(elesplitmap(i,ii),1) = sum(elesplitmap(i,ii), id0_10(r,g,i,v,t) * eleshr2split_val(r,ii,i));
1043      ld0_10(r,ii,v,t)$sum(elesplitmap(i,ii),1)   = sum(elesplitmap(i,ii), ld0_10(r,i,v,t)   * eleshr2split_val(r,ii,i));
1044      rnw0_10(r,ii,v,t)$sum(elesplitmap(i,ii),1)  = sum(elesplitmap(i,ii), rnw0_10(r,i,v,t)  * eleshr2split_val(r,ii,i));
1045   
1046  * Assign same tax rate across each of the split sectors
1047      ty_10(r,ii)$sum(elesplitmap(i,ii),1)        = sum(elesplitmap(i,ii), ty_10(r,i));
1048      te_10(r,e,use,ii,t)$sum(elesplitmap(i,ii),1)= sum((elesplitmap(i,ii),elefuelmap(e,ii)), te_10(r,e,use,i,t));
1049      ti_10(r,j,ii)$sum(elesplitmap(i,ii),1)      = sum(elesplitmap(i,ii), ti_10(r,j,i));
1050      tl_10(r,ii)$sum(elesplitmap(i,ii),1)        = sum(elesplitmap(i,ii), tl_10(r,i));
1051      tk_10(r,k,ii)$sum(elesplitmap(i,ii),1)      = sum(elesplitmap(i,ii), tk_10(r,k,i));
1052      thk_10(r,ii)$sum(elesplitmap(i,ii),1)       = sum(elesplitmap(i,ii), thk_10(r,i));
1053   
1054      pid0_10(r,j,ii)$sum(elesplitmap(i,ii),1)    = 1 + ti_10(r,j,ii) ;
1055      pld0_10(r,ii)$sum(elesplitmap(i,ii),1)      = 1 + tl_10(r,ii)   ;
1056      pkd0_10(r,k,ii)$sum(elesplitmap(i,ii),1)    = 1 + tk_10(r,k,ii) ;
1057      phkd0_10(r,ii)$sum(elesplitmap(i,ii),1)     = 1 + thk_10(r,ii)  ;
1058   
1059  parameter eleshr2splitgas_btu(i)   CC_gas in total gas generation in USA in terms to quad btu in 2010
1060  * Assign 81.4% of natural gas generation to ADAGE backstop generation CC_gas based on EIA data
1061  *  https://www.eia.gov/electricity/monthly/epm_table_grapher.php?t=table_1_07_c
1062     /CC_gas    0.814
1063      Conv_gas  0.186 /;
1064   
1065      elegen0_10(r,ii)$eleshr2splitgas_btu(ii)    = eleshr2splitgas_btu(ii)*elegen0_10(r,"Conv_gas");
1066   
1067      IEO2017_gentech(r,"conv_col",t)= IEO2017_gentech(r,"col",t);
1068      IEO2017_gentech(r,"conv_oil",t)= IEO2017_gentech(r,"oil",t);
1069      IEO2017_gentech(r,i,t)$eleshr2splitgas_btu(i) = IEO2017_gentech(r,"gas",t)*eleshr2splitgas_btu(i);
1070   
1071      IEO2017_gentech(r,"col",t) = 0;
1072      IEO2017_gentech(r,"oil",t) = 0;
1073      IEO2017_gentech(r,"gas",t) = 0;
1074   
1075  parameter eleshr2splitgas_val(r,i)   CC_gas in total gas generation in USA in terms of $ in 2010;
1076   
1077      eleshr2splitgas_val(r,i)$eleshr2splitgas_btu(i)
1078             = eleshr2splitgas_btu(i)*ATB20_elecost(r,i,"2010","LCOE")
1079              /sum(ii$eleshr2splitgas_btu(ii),eleshr2splitgas_btu(ii)*ATB20_elecost(r,ii,"2010","LCOE"));
1080   
1081      ed0_10(r,e,"fuel",ii,v,t)$eleshr2splitgas_val(r,ii)= ed0_10(r,e,"fuel","conv_gas",v,t)*eleshr2splitgas_val(r,ii)   ;
1082      btu0_10(r,e,"fuel",ii,t)$eleshr2splitgas_val(r,ii) = btu0_10(r,e,"fuel","conv_gas",t)*eleshr2splitgas_val(r,ii)    ;
1083      prod0_10(r,i,"2010")$elegen0_10(r,i)  =  elegen0_10(r,i) ;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 23
ADAGE Model - Set Definition
C o m p i l a t i o n


1084   
1085      heateff(r,gentype)$sum(elefuelmap(e,gentype),btu0_10(r,e,"fuel",gentype,"2010"))
1086                       = elegen0_10(r,gentype)/sum(elefuelmap(e,gentype),btu0_10(r,e,"fuel",gentype,"2010"));
1087   
1088      y0_10(r,ii,v,t)$eleshr2splitgas_val(r,ii)          = y0_10(r,"conv_gas",v,t)    *eleshr2splitgas_val(r,ii) ;
1089      kd0_10(r,k,ii,v,t)$eleshr2splitgas_val(r,ii)       = kd0_10(r,k,"conv_gas",v,t) *eleshr2splitgas_val(r,ii) ;
1090      hkd0_10(r,ii,v,t)$eleshr2splitgas_val(r,ii)        = hkd0_10(r,"conv_gas",v,t)  *eleshr2splitgas_val(r,ii) ;
1091      id0_10(r,g,ii,v,t)$eleshr2splitgas_val(r,ii)       = id0_10(r,g,"conv_gas",v,t) *eleshr2splitgas_val(r,ii) ;
1092      ld0_10(r,ii,v,t)$eleshr2splitgas_val(r,ii)         = ld0_10(r,"conv_gas",v,t)   *eleshr2splitgas_val(r,ii) ;
1093      rnw0_10(r,ii,v,t)$eleshr2splitgas_val(r,ii)        = rnw0_10(r,"conv_gas",v,t)  *eleshr2splitgas_val(r,ii) ;
1094   
1095  * Assign same tax rate to backstop sector as corresponding conventional sector
1096      ty_10(r,ii)$sum(eleemismap(i,ii),1)        = sum(eleemismap(i,ii), ty_10(r,i));
1097      te_10(r,e,use,ii,t)$sum(eleemismap(i,ii),1)= sum((eleemismap(i,ii),elefuelmap(e,ii)), te_10(r,e,use,i,t));
1098      ti_10(r,j,ii)$sum(eleemismap(i,ii),1)      = sum(eleemismap(i,ii), ti_10(r,j,i));
1099      tl_10(r,ii)$sum(eleemismap(i,ii),1)        = sum(eleemismap(i,ii), tl_10(r,i));
1100      tk_10(r,k,ii)$sum(eleemismap(i,ii),1)      = sum(eleemismap(i,ii), tk_10(r,k,i));
1101      thk_10(r,ii)$sum(eleemismap(i,ii),1)       = sum(eleemismap(i,ii), thk_10(r,i));
1102   
1103      pid0_10(r,j,ii)$sum(eleemismap(i,ii),1)    = 1 + ti_10(r,j,ii) ;
1104      pld0_10(r,ii)$sum(eleemismap(i,ii),1)      = 1 + tl_10(r,ii)   ;
1105      pkd0_10(r,k,ii)$sum(eleemismap(i,ii),1)    = 1 + tk_10(r,k,ii) ;
1106      phkd0_10(r,ii)$sum(eleemismap(i,ii),1)     = 1 + thk_10(r,ii)  ;
1107   
1108  * Check if electricity generation is in balance
1109      chk0_eleprod(r,gentype,"y0")$(elegen0_10(r,gentype))  = y0_10(r,gentype,"new","2010")*(1-ty_10(r,gentype))/elegen0_10(r,gentype);
1110      chk0_eleprod(r,gentype,g)$(elegen0_10(r,gentype))     = id0_10(r,g,gentype,"new","2010")*(1+ti_10(r,g,gentype))/elegen0_10(r,gentype);
1111   
1112      chk0_eleprod(r,gentype,"id0")$(elegen0_10(r,gentype)) = sum(g,id0_10(r,g,gentype,"new","2010")*(1+ti_10(r,g,gentype)))/elegen0_10(r,gentype);
1113      chk0_eleprod(r,gentype,"kd0")$(elegen0_10(r,gentype)) = kd0_10(r,"va",gentype,"new","2010")*(1+tk_10(r,"va",gentype))/elegen0_10(r,gentype);
1114      chk0_eleprod(r,gentype,"ld0")$(elegen0_10(r,gentype)) = ld0_10(r,gentype,"new","2010")*(1+tl_10(r,gentype))/elegen0_10(r,gentype);
1115      chk0_eleprod(r,gentype,e)$(elegen0_10(r,gentype))     = ed0_10(r,e,"fuel",gentype,"new","2010")/elegen0_10(r,gentype);
1116      chk0_eleprod(r,gentype,"rnw0")$(elegen0_10(r,gentype))= rnw0_10(r,gentype,"new","2010")/elegen0_10(r,gentype);
1117   
1118      chk0_eleprod(r,gentype,"bal")= round((  chk0_eleprod(r,gentype,"y0")
1119                                            - chk0_eleprod(r,gentype,"id0")
1120                                            - chk0_eleprod(r,gentype,"kd0")
1121                                            - chk0_eleprod(r,gentype,"ld0")
1122                                            - sum(e,chk0_eleprod(r,gentype,e))
1123                                            - chk0_eleprod(r,gentype,"rnw0") ),7);
1124   
1125  * Assign resource allocation
1126      rnw0_10(r,gentype,"new",t)     = 0.01* y0_10(r,gentype,"new","2010");
1127      kd0_10(r,"va",gentype,"new",t) =  (        y0_10(r,gentype,"new","2010")*(1-ty_10(r,gentype))
1128                                               - sum(g,id0_10(r,g,gentype,"new","2010")*(1+ti_10(r,g,gentype)))
1129                                               - ld0_10(r,gentype,"new","2010")*(1+tl_10(r,gentype))
1130                                               - sum(e,ed0_10(r,e,"fuel",gentype,"new","2010"))
1131                                               - rnw0_10(r,gentype,"new","2010"))
1132                                             /(1+tk_10(r,"va",gentype));
1133   
1134  * Split energy market
1135      ertl0_10(r,j,use,ii,t)$sum(elesplitmap(i,ii),1) = sum((elesplitmap(i,ii),elefuelmap(j,ii)),ertl0_10(r,j,use,i,t));
1136      ewhl0_10(r,j,use,ii,t)$sum(elesplitmap(i,ii),1) = sum((elesplitmap(i,ii),elefuelmap(j,ii)),ewhl0_10(r,j,use,i,t));
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 24
ADAGE Model - Set Definition
C o m p i l a t i o n


1137      emrg0_10(r,j,use,ii,t)$sum(elesplitmap(i,ii),1) = sum((elesplitmap(i,ii),elefuelmap(j,ii)),emrg0_10(r,j,use,i,t));
1138      etax0_10(r,j,use,ii,t)$sum(elesplitmap(i,ii),1) = sum((elesplitmap(i,ii),elefuelmap(j,ii)),etax0_10(r,j,use,i,t));
1139   
1140      ertl0_10(r,j,use,ii,t)$eleshr2splitgas_val(r,ii) = ertl0_10(r,j,use,"conv_gas",t)*eleshr2splitgas_val(r,ii);
1141      ewhl0_10(r,j,use,ii,t)$eleshr2splitgas_val(r,ii) = ewhl0_10(r,j,use,"conv_gas",t)*eleshr2splitgas_val(r,ii);
1142      emrg0_10(r,j,use,ii,t)$eleshr2splitgas_val(r,ii) = emrg0_10(r,j,use,"conv_gas",t)*eleshr2splitgas_val(r,ii);
1143      etax0_10(r,j,use,ii,t)$eleshr2splitgas_val(r,ii) = etax0_10(r,j,use,"conv_gas",t)*eleshr2splitgas_val(r,ii);
1144   
1145  display  chk0_eleprod;
1146   
1147  *CCCCCC Goal 1: End of Code Splitting Electricity Generation into Greater Disaggregation CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
1148   
1149   
1150  *CCCCCC Goal 2: Update existing technology and introduce new advanced technology CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
1151  *  In ATB20_elecost:     conv_oil is not available; bat (Electricity storage such as battery) has capital but no LCOE cost
1152  *  In ATB20_elecost:     wind and solar generation cost is calculated as the potential generation-weighted average cost across all subtechnologies
1153  *  In ATB20_wndsolcost:  wind and solar cost is provided by subtechnology, with no average value provided.
1154  *                                               Optimistic       Representive
1155  *                        wind:  LandbasedWind,  LTRG1             LTRG4
1156  *                        solar: UtilityPV,      Daggett           Kansascity
1157  * Representive technology for wind and solar
1158      ATB20_elecost(r,"wnd",t,elei) = ATB20_WndSolCost(r,"wnd","LandbasedWind","LTRG4",t,elei);
1159      ATB20_elecost(r,"sol",t,elei) = ATB20_WndSolCost(r,"sol","UtilityPV","Kansascity",t,elei);
1160  * Optimistic cost for wind and solar. Could be used for sensitivity analysis
1161  *   ATB20_elecost(r,"wnd",t,elei) = ATB20_WndSolCost(r,"wnd","LandbasedWind","LTRG1",t,elei);
1162  *   ATB20_elecost(r,"sol",t,elei) = ATB20_WndSolCost(r,"sol","UtilityPV","Daggett",t,elei);
1163   
1164  * Combine ed0 in bioele and nuclear into kd0
1165      ATB20_elecost(r,i,t,"Kd0")$(bioelec(i) or nuc(i))
1166         = ATB20_elecost(r,i,t,"ed0")+ATB20_elecost(r,i,t,"Kd0");
1167      ATB20_elecost(r,i,t,"ed0")$(bioelec(i) or nuc(i)) = 0;
1168   
1169  * Fuel cost needs to be replaced with fuel cost in ADAGE using ADAGE fuel price
1170      ATB20_elecost(r,i,t,"ed0")$(heateff(r,i) and sum(elefuelmap(e,i),ed0_10(r,e,"fuel",i,"new","2010")) and not bioelec(i) and not nuc(i))
1171         =sum(elefuelmap(e,i),    1 / heateff(r, i)
1172                                *  ed0_10(r,e,"fuel",i,"new","2010")/btu0_10(r,e,"fuel",i,"2010") );
1173   
1174      ATB20_elecost(r,i,t,e)$(ATB20_heateff(i) and not bioelec(i) and not nuc(i))
1175         =sum(elefuelmap(e,i),   ATB20_elecost(r,i,t,"ed0"));
1176   
1177      ATB20_elecost(r,i,t,"LCOE")=  ATB20_elecost(r,i,t,"ed0")
1178                                  + ATB20_elecost(r,i,t,"kd0")
1179                                  + ATB20_elecost(r,i,t,"Ld0")
1180                                  + sum(g,ATB20_elecost(r,i,t,g))
1181                                  + ATB20_elecost(r,i,t,"rnw0");
1182   
1183  * Assign rnw0 to be 1% of total cost and assign the difference to kd0. 1% share is also used in all backstop tocknology for fixed factor
1184      ATB20_elecost(r,i,t,"rnw0")= 0.01*ATB20_elecost(r,i,t,"LCOE");
1185  * Temparialy reassign rnw0 to be 0
1186      ATB20_elecost(r,i,t,"rnw0")= 0;
1187   
1188      ATB20_elecost(r,i,t,"Kd0") =  ATB20_elecost(r,i,t,"LCOE")
1189                                  - ATB20_elecost(r,i,t,"ed0")
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 25
ADAGE Model - Set Definition
C o m p i l a t i o n


1190                                  - ATB20_elecost(r,i,t,"Ld0")
1191                                  - sum(g,ATB20_elecost(r,i,t,g))
1192                                  - ATB20_elecost(r,i,t,"rnw0");
1193   
1194  display ATB20_elecost,btu0_10;
1195   
1196  * Prepare the production function for fossil fuel and renewable electricity generation
1197   parameter   elegen_yt0(r,i,v,t)          Electricity production by technology for new capital ($billion)
1198               elegen_edt0(r,e,use,i,v,t)   Electricity energy consumption by technology for new capital ($billion)
1199               elegen_idt0(r,i,g,v,t)       Electricity material usage by technology for new capital ($billion)
1200               elegen_kdt0(r,i,k,v,t)       Electricity capital usage by technology for new capital($billion)
1201               elegen_ldt0(r,i,v,t)         Electricity labor usage by technology for new capital($billion)
1202               elegen_rnwdt0(r,i,v,t)       Electricity resource (fixed factor) usage by technology for new capital($billion)
1203   
1204               elegen_yt00(r,i,v,t)         Electricity production by technology for new and extant capital ($billion)
1205               elegen_edt00(r,e,use,i,v,t)  Electricity energy consumption by technology for new and extant capital ($billion)
1206               elegen_idt00(r,i,g,v,t)      Electricity material usage by technology for new and extant capital ($billion)
1207               elegen_kdt00(r,i,k,v,t)      Electricity capital usage by technology for new and extant capital ($billion)
1208               elegen_ldt00(r,i,v,t)        Electricity labor usage by technology for new and extant capital ($billion)
1209               elegen_rnwdt00(r,i,v,t)      Electricity resource (fixed factor) usage by technology for new and extant capital ($billion)
1210   ;
1211   
1212      elegen_yt0(r,i,v,t)$(elegen0_10(r,i) and not conv(i)) = y0_10(r,i,"new",t);
1213   
1214      elegen_idt0(r,i,g,v,t)        = ATB20_elecost(r,i,t,g)     *elegen0_10(r,i)/(1+ti_10(r,g,i));
1215      elegen_kdt0(r,i,"va",v,t)     = ATB20_elecost(r,i,t,"kd0") *elegen0_10(r,i)/(1+tk_10(r,"va",i));
1216      elegen_ldt0(r,i,v,t)          = ATB20_elecost(r,i,t,"Ld0") *elegen0_10(r,i)/(1+tl_10(r,i)) ;
1217      elegen_edt0(r,e,"fuel",i,v,t) = sum(elefuelmap(e,i), ATB20_elecost(r,i,t,"ed0") *elegen0_10(r,i));
1218   
1219  * Fill conv_oil with the data in ADAGE
1220      elegen_yt0(r,i,v,t)$conv_oil(i)            = y0_10(r,i,"new",t)        ;
1221      elegen_edt0(r,e,"fuel",i,v,t)$conv_oil(i)  = ed0_10(r,e,"fuel",i,"new",t) ;
1222      elegen_idt0(r,i,g,v,t)$conv_oil(i)         = id0_10(r,g,i,"new",t)     ;
1223      elegen_ldt0(r,i,v,t)$conv_oil(i)           = ld0_10(r,i,"new",t)       ;
1224      elegen_kdt0(r,i,"va",v,t)$conv_oil(i)      = kd0_10(r,"va",i,"new",t)  ;
1225   
1226  * Ensure the sum of capital and rnw are equal in vintage
1227      elegen_rnwdt0(r,i,"new",t)    = 0.01* elegen_yt0(r,i,"new",t);
1228      elegen_kdt0(r,i,"va","new",t)$elegen_kdt0(r,i,"va","extant",t) = elegen_kdt0(r,i,"va","extant",t) - elegen_rnwdt0(r,i,"new",t)/(1+tk_10(r,"va",i)) ;
1229      elegen_rnwdt0(r,i,"extant",t) = 0;
1230   
1231  * Assign the advanced generation technology production input
1232      y0_10(r,i,v,t)$(advee(i) and not cc_gas(i))          = elegen_yt0(r,i,v,t)           ;
1233      ed0_10(r,e,"fuel",i,v,t)$(advee(i) and not cc_gas(i))= elegen_edt0(r,e,"fuel",i,v,t) ;
1234      id0_10(r,g,i,v,t)$(advee(i) and not cc_gas(i))       = elegen_idt0(r,i,g,v,t)        ;
1235      ld0_10(r,i,v,t)$(advee(i) and not cc_gas(i))         = elegen_ldt0(r,i,v,t)          ;
1236      kd0_10(r,k,i,v,t)$(advee(i) and not cc_gas(i))       = elegen_kdt0(r,i,k,v,t)        ;
1237      rnw0_10(r,i,v,t)$(advee(i) and not cc_gas(i))        = elegen_rnwdt0(r,i,v,t)        ;
1238   
1239  display  ed0_10,elegen_edt0,advee,elegen_kdt0,elegen_rnwdt0;
1240   
1241  * Calculate energy market margins and tax and make sure energy market for advee is available
1242  parameter  chk0_emkt(r,e,use,i,*)              Check energy market ($ billion)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 26
ADAGE Model - Set Definition
C o m p i l a t i o n


1243             chk0_prod                           Check production input-output balance ($ billion)
1244             chk0_eleprod_ATB                    Check ATB input output production data ($ billion) ;
1245   
1246      chk0_emkt(r,e,"fuel",i,"retail")$gentype(i) =  ertl0_10(r,e,"fuel",i,"2010")*(1-te_10(r,e,"fuel",i,"2010") );
1247      chk0_emkt(r,e,"fuel",i,"marg")$gentype(i)   =  emrg0_10(r,e,"fuel",i,"2010");
1248      chk0_emkt(r,e,"fuel",i,"whole")$gentype(i)  =  ewhl0_10(r,e,"fuel",i,"2010") ;
1249      chk0_emkt(r,e,"fuel",i,"diff")$gentype(i)
1250          =  chk0_emkt(r,e,"fuel",i,"retail")
1251           - chk0_emkt(r,e,"fuel",i,"marg")
1252           - chk0_emkt(r,e,"fuel",i,"whole");
1253   
1254      chk0_emkt(r,e,"fuel",i,"%")$chk0_emkt(r,e,"fuel",i,"whole")
1255          =    chk0_emkt(r,e,"fuel",i,"marg")
1256             / chk0_emkt(r,e,"fuel",i,"whole");
1257   
1258      chk0_emkt(r,e,"fuel",i,"%_retail")$chk0_emkt(r,e,"fuel",i,"whole")
1259          =    chk0_emkt(r,e,"fuel",i,"marg")
1260             / chk0_emkt(r,e,"fuel",i,"retail");
1261   
1262  * Check if electricity generation is in balance
1263      chk0_eleprod_ATB(r,gentype,v,"y0")$(elegen0_10(r,gentype))  = elegen_yt0(r,gentype,v,"2010")*(1-ty_10(r,gentype));
1264      chk0_eleprod_ATB(r,gentype,v,g)$(elegen0_10(r,gentype))     = elegen_idt0(r,gentype,g,v,"2010")*(1+ti_10(r,g,gentype));
1265   
1266      chk0_eleprod_ATB(r,gentype,v,"id0")$(elegen0_10(r,gentype)) = sum(g,elegen_idt0(r,gentype,g,v,"2010")*(1+ti_10(r,g,gentype)));
1267      chk0_eleprod_ATB(r,gentype,v,"kd0")$(elegen0_10(r,gentype)) = elegen_kdt0(r,gentype,"va",v,"2010")*(1+tk_10(r,"va",gentype));
1268      chk0_eleprod_ATB(r,gentype,v,"ld0")$(elegen0_10(r,gentype)) = elegen_ldt0(r,gentype,v,"2010")*(1+tl_10(r,gentype));
1269      chk0_eleprod_ATB(r,gentype,v,e)$(elegen0_10(r,gentype))     = elegen_edt0(r,e,"fuel",gentype,v,"2010");
1270      chk0_eleprod_ATB(r,gentype,v,"rnw0")$(elegen0_10(r,gentype))= elegen_rnwdt0(r,gentype,v,"2010");
1271   
1272      chk0_eleprod_ATB(r,gentype,v,"in")=     chk0_eleprod_ATB(r,gentype,v,"id0")
1273                                            + chk0_eleprod_ATB(r,gentype,v,"kd0")
1274                                            + chk0_eleprod_ATB(r,gentype,v,"ld0")
1275                                            + sum(e,chk0_eleprod_ATB(r,gentype,v,e))
1276                                            + chk0_eleprod_ATB(r,gentype,v,"rnw0") ;
1277   
1278      chk0_eleprod_ATB(r,gentype,v,"bal")= round((  chk0_eleprod_ATB(r,gentype,v,"y0")
1279                                                  - chk0_eleprod_ATB(r,gentype,v,"id0")
1280                                                  - chk0_eleprod_ATB(r,gentype,v,"kd0")
1281                                                  - chk0_eleprod_ATB(r,gentype,v,"ld0")
1282                                                  - sum(e,chk0_eleprod_ATB(r,gentype,v,e))
1283                                                  - chk0_eleprod_ATB(r,gentype,v,"rnw0") ),7);
1284   
1285   
1286  option chk0_emkt:3:4:1, chk0_eleprod_ATB:3:3:1;
1287  display chk0_emkt,elegen0_10,chk0_eleprod_ATB;
1288   
1289      ertl0_10(r,e,use,i,"2010")$advee(i) =   ed0_10(r,e,use,i,"new","2010");
1290      ewhl0_10(r,e,use,i,"2010")$advee(i) =   ertl0_10(r,e,use,i,"2010")*(1-te_10(r,e,use,i,"2010"))
1291                                            * sum(eleemismap(ii,i),(1-chk0_emkt(r,e,use,ii,"%_retail")));
1292      emrg0_10(r,e,use,i,"2010")$advee(i) =   ertl0_10(r,e,use,i,"2010")*(1-te_10(r,e,use,i,"2010"))
1293                                            * sum(eleemismap(ii,i),chk0_emkt(r,e,use,ii,"%_retail"));
1294   
1295  * advee will not be in balance as its production cost is lower than conv even in 2010
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 27
ADAGE Model - Set Definition
C o m p i l a t i o n


1296      chk0_prod(r,i,v,'in')$(y0_10(r,i,v,"2010")   and gentype(i) )
1297          =   sum((e,use),ed0_10(r,e,use,i,v,"2010"))
1298            + sum(g,id0_10(r,g,i,v,"2010")*(1+ti_10(r,g,i)))
1299            + ld0_10(r,i,v,"2010")*(1+tl_10(r,i))
1300            + sum(k,kd0_10(r,k,i,v,"2010")*(1+tk_10(r,k,i)))
1301            + hkd0_10(r,i,v,"2010")*(1+thk_10(r,i))
1302            + rnw0_10(r,i,v,"2010")  ;
1303   
1304      chk0_prod(r,i,v,'out')$(y0_10(r,i,v,"2010")   and gentype(i) )
1305           = y0_10(r,i,v,"2010")*(1-ty_10(r,i));
1306      chk0_prod(r,i,v,'bal') =round((chk0_prod(r,i,v,'out')-chk0_prod(r,i,v,'in')),5);
1307  display chk0_prod,rnw0_10;
1308   
1309  * Compare electricity generation cost from different sources and how it changes over time
1310  set       datasource /GTAP, ATBraw,ATBfin/
1311            item2      /y0,id0,kd0,ld0,ed0,rnw0,in,bal/;
1312   
1313  parameter chk_gencost    Electricity generation cost from different soures ($ per mmbtu);
1314   
1315      chk_gencost(r,gentype,v,t,"GTAP","y0")$elegen0_10(r,gentype)    =  chk0_eleprod(r,gentype,"y0") ;
1316      chk_gencost(r,gentype,v,t,"GTAP","id0")$elegen0_10(r,gentype)   =  chk0_eleprod(r,gentype,"id0");
1317      chk_gencost(r,gentype,v,t,"GTAP","kd0")$elegen0_10(r,gentype)   =  chk0_eleprod(r,gentype,"kd0");
1318      chk_gencost(r,gentype,v,t,"GTAP","ld0")$elegen0_10(r,gentype)   =  chk0_eleprod(r,gentype,"ld0");
1319      chk_gencost(r,gentype,v,t,"GTAP","ed0")$elegen0_10(r,gentype)   =  sum(e,chk0_eleprod(r,gentype,e));
1320      chk_gencost(r,gentype,v,t,"GTAP","rnw0")$elegen0_10(r,gentype)  =  chk0_eleprod(r,gentype,"rnw0");
1321   
1322      chk_gencost(r,gentype,v,t,"ATBraw","y0")$(elegen0_10(r,gentype) and not conv(gentype))  =  elegen_yt0(r,gentype,v,t)*(1-ty_10(r,gentype))/elegen0_10(r,gentype);
1323      chk_gencost(r,gentype,v,t,"ATBraw","id0")$(elegen0_10(r,gentype) and not conv(gentype)) =  sum(g,elegen_idt0(r,gentype,g,v,t)*(1+ti_10(r,g,gentype)))/elegen0_10(r,gentype);
1324      chk_gencost(r,gentype,v,t,"ATBraw","kd0")$(elegen0_10(r,gentype) and not conv(gentype)) =  elegen_kdt0(r,gentype,"va",v,t)*(1+tk_10(r,"va",gentype))/elegen0_10(r,gentype);
1325      chk_gencost(r,gentype,v,t,"ATBraw","ld0")$(elegen0_10(r,gentype) and not conv(gentype)) =  elegen_ldt0(r,gentype,v,t)*(1+tl_10(r,gentype))/elegen0_10(r,gentype);
1326      chk_gencost(r,gentype,v,t,"ATBraw","ed0")$(elegen0_10(r,gentype) and not conv(gentype)) =  sum(e,elegen_edt0(r,e,"fuel",gentype,v,t))/elegen0_10(r,gentype) ;
1327      chk_gencost(r,gentype,v,t,"ATBraw","rnw0")$(elegen0_10(r,gentype) and not conv(gentype))=  elegen_rnwdt0(r,gentype,v,t)/elegen0_10(r,gentype) ;
1328   
1329      chk_gencost(r,gentype,v,t,datasource,"in")=   chk_gencost(r,gentype,v,t,datasource,"id0")
1330                                                  + chk_gencost(r,gentype,v,t,datasource,"kd0")
1331                                                  + chk_gencost(r,gentype,v,t,datasource,"ld0")
1332                                                  + chk_gencost(r,gentype,v,t,datasource,"ed0")
1333                                                  + chk_gencost(r,gentype,v,t,datasource,"rnw0") ;
1334   
1335      chk_gencost(r,gentype,v,t,datasource,"bal") = round((  chk_gencost(r,gentype,v,t,datasource,"y0")
1336                                                           - chk_gencost(r,gentype,v,t,datasource,"in")),7);
1337   
1338   
1339   
1340  * The following is used to adjust the Armington block in electricity generation mix in the model agen
1341  parameter y0_IEO2017(r,i,t)    IEO2017 electricity generation by technology from 2010 to 2050 ($billion)
1342            y00_10(r,i,v,t)      Electricity generation by technology if using IEO2017 generation mix from 2010 to 2050 ($billion)
1343            y00(r,i,v)           Electricity generation by technology if using IEO2017 generation mix in 2010 ($billion)       ;
1344   
1345      y0_IEO2017(r,i,t)$prod0_10(r,i,"2010")=IEO2017_gentech(r,i,t)/prod0_10(r,i,"2010")*y0_10(r,i,"new","2010");
1346      y0_IEO2017(r,"ele",t)=sum(i, y0_IEO2017(r,i,t));
1347   
1348      y00_10(r,i,"new",t)= y0_10(r,"ele","new","2010")*y0_IEO2017(r,i,t)/y0_IEO2017(r,"ele",t);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 28
ADAGE Model - Set Definition
C o m p i l a t i o n


1349   
1350      y00(r,i,"new")$y00_10(r,i,"new","2010") = y00_10(r,i,"new","2010") ;
1351  display y0_IEO2017,y00_10,y00;
1352   
1353  *execute_unload  '.\chk\ATB_chk.gdx',ATB20_elecost;
1354  *execute 'gdxxrw.exe .\chk\ATB_chk.gdx o=.\chk\ATB_chk.xlsx  par=ATB20_elecost       rng=ATB20_elecost!a2  cdim=0'
1355   
1356   
1357  *CCCCCCCCCCCCCCCCCCCCCCCC Process the base year data in case model is set for aggregated transportation runs   CCCCCCCCCCCCCCCCCCCC
1358  parameter
1359          y0_10_(r,i,v,t)             Aggregate sectoral output ($2010 billion)
1360          ed0_10_(r,j,use,i,v,t)      Energy Demand by sector ($2010 billion)
1361          id0_10_(r,j,i,v,t)          Intermediate demand ($2010 billion)
1362          ld0_10_(r,i,v,t)            Labor demand ($2010 billion)
1363          kd0_10_(r,k,i,v,t)          Capital demand ($2010 billion)
1364          hkd0_10_(r,i,v,t)           Human capital demand ($2010 billion)
1365          lnd0_10_(r,i,v,t)           Land inputs to agriculture ($2010 billion)
1366          rd0_10_(r,i,v,t)            Natural resource inputs to energy ($2010 billion)
1367          rnw0_10_(r,i,v,t)           Renewable electricity resource ($2010 billion)
1368   
1369          cd0_10_(r,hh,i,t)           Consumption demand for goods ($2010 billion)
1370          fuel0_10_(r,v,t)            Fuel use in personal vehicles ($2010 billion)
1371          house0_10_(r,i,v,t)         Housing services ($2010 billion)
1372          le0_10_(r,hh,t)             Labor endowment of households ($2010 billion)
1373          ke0_10_(r,hh,t)             Capital endowment of households ($2010 billion)
1374   
1375          i0_10_(r,k,i,t)             Investment demand for goods ($2010 billion)
1376          inv0_10_(r,k,t)             Total investment ($2010 billion)
1377          g0_10_(r,i,t)               Government demand for goods ($2010 billion)
1378          gov0_10_(r,t)               Total government ($2010 billion)
1379          tax0_10_(r,t)               Total tax revenues ($2010 billion)
1380          lstax_10_(r,hh,t)           Lump-sum transfers ($2010 billion)
1381          land0_10_(r,t)              Total land endowment ($2010 billion)
1382   
1383          x0_10_(r,i,trd,t)           Exports ($2010 billion)
1384          m0_10_(r,i,trd,t)           Imports ($2010 billion)
1385          n0_10_(r,rr,i,t)            Interregional trade ($2010 billion)
1386          tpt0_10_(r,i,t)             Transport services for trade goods ($2010 billion)
1387          trs0_10_(r,rr,i,t)          Transport services by export good ($2010 billion)
1388   
1389          ty_10_(r,i)                 Output tax rate (%)
1390          te_10_(r,j,use,i,t)         Energy tax rate (%)
1391          ti_10_(r,j,i)               Intermediate inputs tax (%)
1392          tl_10_(r,i)                 Labor tax rate (%)
1393          tk_10_(r,k,i)               Capital tax rate (%)
1394          thk_10_(r,i)                Human capital tax rate (%)
1395          tn_10_(r,i)                 Land tax rate (%)
1396          tr_10_(r,i)                 Resource tax rate (%)
1397          tc_10_(r,i)                 Consumption tax (%)
1398          tinv_10_(r,k,i)             Investment tax (%)
1399          tg_10_(r,i)                 Government purchases tax (%)
1400          tx_10_(r,rr,i)              Export tax (%)
1401          tm_10_(r,rr,i)              Import tax (%)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 29
ADAGE Model - Set Definition
C o m p i l a t i o n


1402   
1403          a0_10_(r,i,t)               Armington goods ($2010 billion)
1404          d0_10_(r,i,t)               Domestic goods ($2010 billion)
1405          c0_10_(r,hh,t)              Total consumption of goods ($2010 billion)
1406   
1407          pld0_10_(r,i)               Reference labor price (=1+tax rate)
1408          pkd0_10_(r,k,i)             Reference capital price (=1+tax rate)
1409          phkd0_10_(r,i)              Reference human capital price (=1+tax rate)
1410          pid0_10_(r,j,i)             Reference intermediate inputs price (=1+tax rate)
1411          plnd0_10_(r,i)              Reference land price (=1+tax rate)
1412          pinv0_10_(r,k,i)            Reference investment price (=1+tax rate)
1413          prd0_10_(r,i)               Reference resource price (=1+tax rate)
1414          pcd0_10_(r,i)               Reference consumption goods price (=1+tax rate)
1415          pg0_10_(r,i)                Reference government consumption price (=1+tax rate)
1416          pmt0_10_(r,rr,i)            Reference imports price (=1+tax rate)
1417          pmx0_10_(r,rr,i)            Reference exports price (=1+tax rate)
1418   
1419          ertl0_10_(r,j,use,i,t)      Energy retail Demand by sector ($2010 billion)
1420          ewhl0_10_(r,j,use,i,t)      Energy wholesale Demand by sector ($2010 billion)
1421          emrg0_10_(r,j,use,i,t)      Energy margins ($2010 billion)
1422          etax0_10_(r,j,use,i,t)      Energy taxes ($2010 billion)
1423   
1424          btu0_10_(r,j,use,i,t)       Energy consumption by sector (quad btu)
1425          prod0_10_(r,i,t)            Energy production (quad Btu)
1426          elegen0_10_(r,i,t)          Electricity generation by type (quad btu)
1427          em0_btu_10_(r,i,t)          Energy imports (quad btu)
1428          ex0_btu_10_(r,i,t)          Energy exports (quad btu)
1429          en0_btu_10_(r,rr,i,t)       Energy bilateral trade (quad btu)
1430   
1431          prc0_10_(r,j,use,i)         Delivered retail energy prices ($2010 per MMBtu)
1432          whlprc0_10_(r,i)            Wholesale energy prices ($2010 per MMBtu)
1433   
1434          hectares0_10_(r,i)          Land used in agricultural crops (hectares) (data are old and updated with another parameter q_land0)
1435          tons0_10_(r,i)              Agricultural crop production (metric tons) (data are old and updated with another parameter ag_ton0)
1436   
1437          oev_valu0_10_(r,i,v,t)      Fuel use in on-road transportation in 2010 ($2010 billion)
1438          oev_btu0_10_(r,e,i,t)       Fuel use in on-road transportation in 2010 (quad btu)  ;
1439   
1440      y0_10_(r,ii,v,t)         = sum(mapsector(ii,i),y0_10(r,i,v,t));
1441      ed0_10_(r,jj,use,ii,v,t) = sum(mapsector(ii,i),sum(mapGsector(jj,j),ed0_10(r,j,use,i,v,t)));
1442      id0_10_(r,jj,ii,v,t)     = sum(mapsector(ii,i),sum(mapGsector(jj,j),id0_10(r,j,i,v,t)));
1443      ld0_10_(r,ii,v,t)        = sum(mapsector(ii,i),ld0_10(r,i,v,t));
1444      kd0_10_(r,k,ii,v,t)      = sum(mapsector(ii,i),kd0_10(r,k,i,v,t));
1445      hkd0_10_(r,ii,v,t)       = sum(mapsector(ii,i),hkd0_10(r,i,v,t));
1446      lnd0_10_(r,ii,v,t)       = sum(mapsector(ii,i),lnd0_10(r,i,v,t));
1447      rd0_10_(r,ii,v,t)        = sum(mapsector(ii,i),rd0_10(r,i,v,t));
1448      rnw0_10_(r,ii,v,t)       = sum(mapsector(ii,i),rnw0_10(r,i,v,t));
1449   
1450      cd0_10_(r,hh,ii,t)       = sum(mapsector(ii,i),cd0_10(r,hh,i,t));
1451      fuel0_10_(r,v,t)         = fuel0_10(r,v,t);
1452      house0_10_(r,ii,v,t)     = sum(mapsector(ii,i), house0_10(r,i,v,t));
1453      le0_10_(r,hh,t)          = le0_10(r,hh,t);
1454      ke0_10_(r,hh,t)          = ke0_10(r,hh,t);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 30
ADAGE Model - Set Definition
C o m p i l a t i o n


1455   
1456      i0_10_(r,k,ii,t)         = sum(mapsector(ii,i),i0_10(r,k,i,t));
1457      inv0_10_(r,k,t)          = inv0_10(r,k,t);
1458      g0_10_(r,ii,t)           = sum(mapsector(ii,i),g0_10(r,i,t));
1459      gov0_10_(r,t)            = gov0_10(r,t);
1460      tax0_10_(r,t)            = tax0_10(r,t);
1461      lstax_10_(r,hh,t)        = lstax_10(r,hh,t);
1462      land0_10_(r,t)           = land0_10(r,t);
1463   
1464      x0_10_(r,ii,trd,t)       = sum(mapsector(ii,i),x0_10(r,i,trd,t));
1465      m0_10_(r,ii,trd,t)       = sum(mapsector(ii,i),m0_10(r,i,trd,t));
1466      n0_10_(r,rr,ii,t)        = sum(mapsector(ii,i),n0_10(r,rr,i,t));
1467      tpt0_10_(r,ii,t)         = sum(mapsector(ii,i),tpt0_10(r,i,t));
1468      trs0_10_(r,rr,ii,t)      = sum(mapsector(ii,i),trs0_10(r,rr,i,t));
1469   
1470      a0_10_(r,ii,t)           = sum(mapsector(ii,i),a0_10(r,i,t));
1471      d0_10_(r,ii,t)           = sum(mapsector(ii,i),d0_10(r,i,t));
1472      c0_10_(r,hh,t)           = c0_10(r,hh,t);
1473   
1474      ertl0_10_(r,jj,use,ii,t) = sum(mapsector(ii,i),sum(mapGsector(jj,j),ertl0_10(r,j,use,i,t)));
1475      ewhl0_10_(r,jj,use,ii,t) = sum(mapsector(ii,i),sum(mapGsector(jj,j),ewhl0_10(r,j,use,i,t)));
1476      emrg0_10_(r,jj,use,ii,t) = sum(mapsector(ii,i),sum(mapGsector(jj,j),emrg0_10(r,j,use,i,t)));
1477      etax0_10_(r,jj,use,ii,t) = sum(mapsector(ii,i),sum(mapGsector(jj,j),etax0_10(r,j,use,i,t)));
1478   
1479      btu0_10_(r,jj,use,ii,t)  = sum(mapsector(ii,i),sum(mapGsector(jj,j),btu0_10(r,j,use,i,t)));
1480      prod0_10_(r,ii,t)        = sum(mapsector(ii,i),prod0_10(r,i,t));
1481      elegen0_10_(r,ii,t)      = sum(mapsector(ii,i), elegen0_10(r,i));
1482      em0_btu_10_(r,e,t)       = em0_btu_10(r,e,t);
1483      ex0_btu_10_(r,e,t)       = ex0_btu_10(r,e,t);
1484      en0_btu_10_(r,rr,e,t)    = en0_btu_10(r,rr,e,t);
1485   
1486      prc0_10_(r,jj,use,ii)$sum((mapSector(ii,i),mapGSector(jj,j)), btu0_10(r,j,use,i,"2010"))
1487            =  sum((mapSector(ii,i),mapGSector(jj,j)), prc0_10(r,j,use,i)*btu0_10(r,j,use,i,"2010"))
1488             / sum((mapSector(ii,i),mapGSector(jj,j)), btu0_10(r,j,use,i,"2010"));
1489   
1490      whlprc0_10_(r,ii)$sum(mapSector(ii,i),prod0_10(r,i,"2010")  )
1491            =  sum(mapSector(ii,i), whlprc0_10(r,i)* prod0_10(r,i,"2010"))
1492             / sum(mapSector(ii,i), prod0_10(r,i,"2010"))  ;
1493   
1494      ty_10_(r,ii)$sum(mapSector(ii,i), y0_10(r,i,"new","2010"))
1495            = sum(mapSector(ii,i),  ty_10(r,i)* y0_10(r,i,"new","2010"))
1496            / sum(mapSector(ii,i), y0_10(r,i,"new","2010"));
1497   
1498      te_10_(r,jj,use,ii,t)$ertl0_10(r,jj,use,ii,t)
1499          = etax0_10(r,jj,use,ii,t) /ertl0_10(r,jj,use,ii,t);
1500   
1501      ti_10_(r,jj,ii)$sum((mapSector(ii,i),mapGSector(jj,j)),  id0_10(r,j,i,"new","2010"))
1502            =  sum((mapSector(ii,i),mapGSector(jj,j)),  ti_10(r,j,i)* id0_10(r,j,i,"new","2010"))
1503             / sum((mapSector(ii,i),mapGSector(jj,j)),  id0_10(r,j,i,"new","2010"));
1504   
1505      tl_10_(r,ii)$sum(mapSector(ii,i), ld0_10(r,i,"new","2010") )
1506            = sum(mapSector(ii,i),  tl_10(r,i)* ld0_10(r,i,"new","2010") )
1507             /sum(mapSector(ii,i),  ld0_10(r,i,"new","2010") ) ;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 31
ADAGE Model - Set Definition
C o m p i l a t i o n


1508   
1509      tk_10_(r,k,ii)$sum(mapSector(ii,i),kd0_10(r,k,i,"new","2010"))
1510            =  sum(mapSector(ii,i),  tk_10(r,k,i)* kd0_10(r,k,i,"new","2010"))
1511             / sum(mapSector(ii,i),  kd0_10(r,k,i,"new","2010"));
1512   
1513      thk_10_(r,ii)$sum(mapSector(ii,i), hkd0_10(r,i,"new","2010") )
1514            = sum(mapSector(ii,i),  thk_10(r,i)*hkd0_10(r,i,"new","2010") )
1515             /sum(mapSector(ii,i),  hkd0_10(r,i,"new","2010") );
1516   
1517      tn_10_(r,ii)$sum(mapSector(ii,i),  lnd0_10(r,i,"new","2010") )
1518            =  sum(mapSector(ii,i),  tn_10(r,i)*lnd0_10(r,i,"new","2010")   )
1519             / sum(mapSector(ii,i),  lnd0_10(r,i,"new","2010") );
1520   
1521      tr_10_(r,ii)$sum(mapSector(ii,i),  rd0_10(r,i,"new","2010"))
1522            =  sum(mapSector(ii,i),  tr_10(r,i)*rd0_10(r,i,"new","2010")  )
1523             / sum(mapSector(ii,i),  rd0_10(r,i,"new","2010")  );
1524   
1525      tc_10_(r,ii)$sum(mapSector(ii,i), cd0_10(r,"hh",i,"2010"))
1526            = sum(mapSector(ii,i),  tc_10(r,i)*cd0_10(r,"hh",i,"2010") )
1527             /sum(mapSector(ii,i),  cd0_10(r,"hh",i,"2010"));
1528   
1529      tinv_10_(r,k,ii)$sum(mapSector(ii,i), i0_10(r,k,i,"2010") )
1530            = sum(mapSector(ii,i),  tinv_10(r,k,i)* i0_10(r,k,i,"2010") )
1531             /sum(mapSector(ii,i),  i0_10(r,k,i,"2010") );
1532   
1533      tg_10_(r,ii)$sum(mapSector(ii,i), g0_10(r,i,"2010"))
1534            =  sum(mapSector(ii,i),  tg_10(r,i)*g0_10(r,i,"2010"))
1535             / sum(mapSector(ii,i),  g0_10(r,i,"2010"));
1536   
1537      tx_10_(r,rr,ii)$sum(mapSector(ii,i), n0_10(r,rr,i,"2010") )
1538            = sum(mapSector(ii,i),  tx_10(r,rr,i)*n0_10(r,rr,i,"2010") )
1539             /sum(mapSector(ii,i),  n0_10(r,rr,i,"2010") );
1540   
1541      tm_10_(r,rr,ii)$sum(mapSector(ii,i),  tm_10(r,rr,i)*(trs0_10(r,rr,i,"2010")+(1+tx_10(r,rr,i))*n0_10(r,rr,i,"2010")) )
1542            =  sum(mapSector(ii,i),  tm_10(r,rr,i)*(trs0_10(r,rr,i,"2010")+(1+tx_10(r,rr,i))*n0_10(r,rr,i,"2010")) )
1543             / sum(mapSector(ii,i),  (trs0_10(r,rr,i,"2010")+(1+tx_10(r,rr,i))*n0_10(r,rr,i,"2010")) );
1544   
1545      pld0_10_(r,ii)           = 1 + tl_10_(r,ii);
1546      pkd0_10_(r,k,ii)         = 1 + tk_10_(r,k,ii);
1547      phkd0_10_(r,ii)          = 1 + thk_10_(r,ii);
1548      pid0_10_(r,jj,ii)        = 1 + ti_10_(r,jj,ii);
1549      plnd0_10_(r,ii)          = 1 + tn_10_(r,ii);
1550      pinv0_10_(r,k,ii)        = 1 + tinv_10_(r,k,ii);
1551      prd0_10_(r,ii)           = 1 + tr_10_(r,ii);
1552      pcd0_10_(r,ii)           = 1 + tc_10_(r,ii);
1553      pg0_10_(r,ii)            = 1 + tg_10_(r,ii);
1554      pmt0_10_(r,rr,ii)        = 1 + tm_10_(r,rr,ii);
1555      pmx0_10_(r,rr,ii)        = (1 + tx_10_(r,rr,ii)) * (1 + tm_10_(r,rr,ii));
1556   
1557      hectares0_10_(r,ii)      = sum(mapsector(ii,i),hectares0_10(r,i));
1558      tons0_10_(r,ii)          = sum(mapsector(ii,i),tons_10(r,i));
1559   
1560      oev_valu0_10_(r,"auto",v,t)= oev_valu0_10(r,"auto",v,t);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 32
ADAGE Model - Set Definition
C o m p i l a t i o n


1561      oev_btu0_10_(r,e,"auto",t) = oev_btu0_10(r,e,"Auto",t);
1562   
1564      oev_valu0_10_(r,hdv,v,t)   = oev_valu0_10(r,hdv,v,t);
1565      oev_btu0_10_(r,e,hdv,t)    = oev_btu0_10(r,e,hdv,t);
1567   
1568  * Remove the time dimension in the base year data set so it can be directly used in model.gms
1569  parameter
1570          y0(r,i,v)               Aggregate sectoral output ($2010 billion)
1571          ed0(r,j,use,i,v)        Energy Demand by sector ($2010 billion)
1572          id0(r,j,i,v)            Intermediate demand ($2010 billion)
1573          ld0(r,i,v)              Labor demand ($2010 billion)
1574          kd0(r,k,i,v)            Capital demand ($2010 billion)
1575          hkd0(r,i,v)             Human capital demand ($2010 billion)
1576          lnd0(r,i,v)             Land inputs to agriculture ($2010 billion)
1577          rd0(r,i,v)              Natural resource inputs to energy ($2010 billion)
1578          rnw0(r,i,v)             Renewable electricity resource ($2010 billion)
1579   
1580          cd0(r,hh,i)             Consumption demand for goods ($2010 billion)
1581          fuel0(r,v)              Fuel use in personal vehicles ($2010 billion)
1582          house0(r,i,v)           Housing services ($2010 billion)
1583          le0(r,hh)               Labor endowment of households ($2010 billion)
1584          ke0(r,hh)               Capital endowment of households ($2010 billion)
1585   
1586  *add endowment for land & energy resource and renewable resource
1587          lnde0(r,i,v)            Land endowment ($2010 billion)
1588          re0(r,i,v)              Energy resource endowment ($2010 billion)
1589          rnwe0(r,i,v)            Electricity resource endowment ($2010 billion)
1590          gove0(r)                Total government endowment ($2010 billion)
1591   
1592          i0(r,k,i)               Investment demand for goods ($2010 billion)
1593          inv0(r,k)               Total investment ($2010 billion)
1594          g0(r,i)                 Government demand for goods ($2010 billion)
1595          gov0(r)                 Total government expenditure ($2010 billion)
1596          tax0(r)                 Total tax revenues ($2010 billion)
1597          lstax(r,hh)             Lump-sum transfers ($2010 billion)
1598          land0(r)                Total land endowment ($2010 billion)
1599   
1600          x0(r,i,trd)             Exports ($2010 billion)
1601          m0(r,i,trd)             Imports ($2010 billion)
1602          n0(r,rr,i)              Interregional trade ($2010 billion)
1603          tpt0(r,i)               Transport services for trade goods ($2010 billion)
1604          trs0(r,rr,i)            Transport services by export good ($2010 billion)
1605   
1606          ty(r,i)                 Output tax rate (%)
1607          te(r,j,use,i)           Energy tax rate (%)
1608          ti(r,j,i)               Intermediate inputs tax (%)
1609          tl(r,i)                 Labor tax rate (%)
1610          tk(r,k,i)               Capital tax rate (%)
1611          thk(r,i)                Human capital tax rate (%)
1612          tn(r,i)                 Land tax rate (%)
1613          tr(r,i)                 Resource tax rate (%)
1614          tc(r,i)                 Consumption tax (%)
1615          tinv(r,k,i)             Investment tax (%)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 33
ADAGE Model - Set Definition
C o m p i l a t i o n


1616          tg(r,i)                 Government purchases tax (%)
1617          tx(r,rr,i)              Export tax (%)
1618          tm(r,rr,i)              Import tax (%)
1619   
1620          hectares0(r,i)          Land used in agricultural crops (hectares) (data are old and updated with another parameter q_land0)
1621          tons0(r,i)              Agricultural crop production (metric tons) (data are old and updated with another parameter ag_ton0)
1622   
1623          a0(r,i)                 Armington goods ($2010 billion)
1624          d0(r,i)                 Domestic goods ($2010 billion)
1625          c0(r,hh)                Total consumption of goods ($2010 billion)
1626   
1627          pld0(r,i)               Reference labor price (=1+tax rate)
1628          pkd0(r,k,i)             Reference capital price (=1+tax rate)
1629          phkd0(r,i)              Reference human capital price (=1+tax rate)
1630          pinv0(r,k,i)            Reference price of investment
1631          pid0(r,j,i)             Reference intermediate inputs price (=1+tax rate)
1632          plnd0(r,i)              Reference land price (=1+tax rate)
1633          prd0(r,i)               Reference resource price (=1+tax rate)
1634          pcd0(r,i)               Reference consumption goods price (=1+tax rate)
1635          pg0(r,i)                Reference price of the government good
1636          pmt0(r,rr,i)            Reference imports price (=1+tax rate)
1637          pmx0(r,rr,i)            Reference exports price (=1+tax rate)
1638   
1639          ertl0(r,j,use,i)        Energy Retail Demand by sector ($2010 billion)
1640          ewhl0(r,j,use,i)        Energy Wholesale Demand by sector ($2010 billion)
1641          emrg0(r,j,use,i)        Energy Margins ($2010 billion)
1642          etax0(r,j,use,i)        Energy Taxes ($2010 billion)
1643   
1644          btu0(r,j,use,i)         Energy consumption by sector i (quad btu)
1645          prod0(r,i)              Energy production (quad Btu)
1646          elegen0(r,i)            Electricity generation by fuel (quad btu)
1647          em0_btu(r,i)            Energy imports (quad Btu)
1648          ex0_btu(r,i)            Energy exports (quad Btu)
1649          en0_btu(r,rr,i)         Energy bilateral trade (quad btu)
1650   
1651          prc0(r,j,use,i)         Delivered energy prices ($2010 per MMBtu)
1652          whlprc0(r,i)            Wholesale energy prices ($2010 per MMBtu)
1653          price0(r,e)             Weighted retail energy price in 2010 ($ per mmbtu)
1654   
1655          oev_valu0(r,i,v)        fuel use in on-road transportation in 2010 ($2010 billion) (otrn is assigned)
1656          oev_btu0(r,i,i)         fuel use in on-road transportation in 2010 (quad) (otrn is assigned) ;
1657   
1658      y0(r,ii,v)         = y0_10_(r,ii,v,"2010");
1659      ed0(r,jj,use,ii,v) = ed0_10_(r,jj,use,ii,v,"2010");
1660      id0(r,jj,ii,v)     = id0_10_(r,jj,ii,v,"2010");
1661      ld0(r,ii,v)        = ld0_10_(r,ii,v,"2010");
1662      kd0(r,k,ii,v)      = kd0_10_(r,k,ii,v,"2010");
1663      hkd0(r,ii,v)       = hkd0_10_(r,ii,v,"2010");
1664      lnd0(r,ii,v)       = lnd0_10_(r,ii,v,"2010");
1665      rd0(r,ii,v)        = rd0_10_(r,ii,v,"2010");
1666      rnw0(r,ii,v)       = rnw0_10_(r,ii,v,"2010");
1667   
1668      cd0(r,hh,ii)       = cd0_10_(r,hh,ii,"2010");
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 34
ADAGE Model - Set Definition
C o m p i l a t i o n


1669      fuel0(r,v)         = fuel0_10_(r,v,"2010");
1670      house0(r,ii,v)     = house0_10_(r,ii,v,"2010");
1671      le0(r,hh)          = le0_10_(r,hh, "2010");
1672      ke0(r,hh)          = ke0_10_(r,hh,"2010");
1673   
1674      i0(r,k,ii)         = i0_10_(r,k,ii,"2010");
1675      inv0(r,k)          = inv0_10_(r,k,"2010");
1676      g0(r,ii)           = g0_10_(r,ii,"2010");
1677      gov0(r)            = gov0_10_(r,"2010");
1678      tax0(r)            = tax0_10_(r,"2010");
1679      lstax(r,hh)        = lstax_10_(r,hh,"2010");
1680      land0(r)           = land0_10_(r,"2010");
1681   
1682      x0(r,ii,trd)       = x0_10_(r,ii,trd,"2010");
1683      m0(r,ii,trd)       = m0_10_(r,ii,trd,"2010");
1684      n0(r,rr,ii)        = n0_10_(r,rr,ii,"2010");
1685      tpt0(r,ii)         = tpt0_10_(r,ii,"2010");
1686      trs0(r,rr,ii)      = trs0_10_(r,rr,ii,"2010");
1687   
1688      a0(r,ii)           = a0_10_(r,ii,"2010");
1689      d0(r,ii)           = d0_10_(r,ii,"2010");
1690      c0(r,hh)           = c0_10_(r,hh,"2010");
1691   
1692      ertl0(r,jj,use,ii) = ertl0_10_(r,jj,use,ii,"2010");
1693      ewhl0(r,jj,use,ii) = ewhl0_10_(r,jj,use,ii,"2010");
1694      emrg0(r,jj,use,ii) = emrg0_10_(r,jj,use,ii,"2010");
1695      etax0(r,jj,use,ii) = etax0_10_(r,jj,use,ii,"2010");
1696   
1697      btu0(r,jj,use,ii)  = btu0_10_(r,jj,use,ii,"2010");
1698      prod0(r,ii)        = prod0_10_(r,ii,"2010");
1699      elegen0(r,ii)      = elegen0_10_(r,ii,"2010");
1700      em0_btu(r,e)       = em0_btu_10_(r,e,"2010");
1701      ex0_btu(r,e)       = ex0_btu_10_(r,e,"2010");
1702      en0_btu(r,rr,e)    = en0_btu_10_(r,rr,e,"2010");
1703   
1704      prc0(r,jj,use,ii)  = prc0_10_(r,jj,use,ii);
1705      whlprc0(r,ii)      = whlprc0_10_(r,ii) ;
1706   
1707      ty(r,ii)           = ty_10_(r,ii);
1708      te(r,jj,use,ii)    = te_10_(r,jj,use,ii,"2010");;
1709      ti(r,jj,ii)        = ti_10_(r,jj,ii);
1710      tl(r,ii)           = tl_10_(r,ii) ;
1711      tk(r,k,ii)         = tk_10_(r,k,ii);
1712      thk(r,ii)          = thk_10_(r,ii);
1713      tn(r,ii)           = tn_10_(r,ii);
1714      tr(r,ii)           = tr_10_(r,ii);
1715      tc(r,ii)           = tc_10_(r,ii);
1716      tinv(r,k,ii)       = tinv_10_(r,k,ii) ;
1717      tg(r,ii)           = tg_10_(r,ii);
1718      tx(r,rr,ii)        = tx_10_(r,rr,ii);
1719      tm(r,rr,ii)        = tm_10_(r,rr,ii);
1720   
1721      pld0(r,ii)         = 1 + tl(r,ii);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 35
ADAGE Model - Set Definition
C o m p i l a t i o n


1722      pkd0(r,k,ii)       = 1 + tk(r,k,ii);
1723      phkd0(r,ii)        = 1 + thk(r,ii);
1724      pid0(r,jj,ii)      = 1 + ti(r,jj,ii);
1725      plnd0(r,ii)        = 1 + tn(r,ii);
1726      pinv0(r,k,ii)      = 1 + tinv(r,k,ii);
1727      prd0(r,ii)         = 1 + tr(r,ii);
1728      pcd0(r,ii)         = 1 + tc(r,ii);
1729      pg0(r,ii)          = 1 + tg(r,ii);
1730      pmt0(r,rr,ii)      = 1 + tm(r,rr,ii);
1731      pmx0(r,rr,ii)      = (1 + tx(r,rr,ii)) * (1 + tm(r,rr,ii));
1732   
1733      hectares0(r,ii)    = hectares0_10_(r,ii);
1734      tons0(r,ii)        = tons0_10_(r,ii);
1735   
1736      oev_valu0(r,ii,v)  = oev_valu0_10_(r,ii,v,"2010");
1737      oev_btu0(r,e,ii)   = oev_btu0_10_(r,e,ii,"2010");
1738   
1739      price0(r,e)$sum((use,i,v),ed0(r,e,use,i,v))
1740       = sum((use,i), ed0(r,e,use,i,"new"))/sum((use,i)$prc0(r,e,use,i),btu0(r,e,use,i))
1741   
1742  set   label        Input catergory
1743              / Ed0         Energy
1744                Ld0         Labor
1745                Kd0         Capital
1746                Hkd0        Human capital
1747                Id0         Material
1748                In          Total input
1749                Out         Totoal output
1750                Y0          Main output
1751              /
1752         balvar      Market balance category    / production, consumption, import, export, balance/
1753         mrkt        Market clearance items      /y0, m0, x0, id0, ed0, cd0, i0,g0,in, out,bal /
1754         inout       Input and output items      /in, out/
1755  ;
1756   
1757  parameter chk0_mrkt(r,i,*)         Check the market balance for all commodities after aggregation;
1758   
1759      chk0_mrkt(r,i,"y0")$(not gentype(i))  = y0(r,i,"new")+ house0(r,"hh","new")$housei(i);
1760      chk0_mrkt(r,i,"m0")$(not gentype(i))  = m0(r,i,"ftrd");
1761      chk0_mrkt(r,i,"x0")$(not gentype(i))  = sum(trd, x0(r,i,trd)) ;
1762      chk0_mrkt(r,i,"id0")$(not gentype(i)) = sum(j, id0(r,i,j,"new"));
1763      chk0_mrkt(r,i,"ed0")$(not gentype(i) and e(i))
1764         =    sum((use,j), ertl0(r,i,use,j))
1765            - sum((use,j), emrg0(r,i,use,j))
1766            - sum((use,j), etax0(r,i,use,j))    ;
1767   
1768      chk0_mrkt(r,i,"cd0")$(not gentype(i)) = sum(hh, cd0(r,hh,i));
1769      chk0_mrkt(r,i,"i0")$(not gentype(i))  = sum(k, i0(r,k,i));
1770      chk0_mrkt(r,i,"g0")$(not gentype(i))  = g0(r,i);
1771   
1772      chk0_mrkt(r,i,"bal")$(not gentype(i))
1773          = round((    y0(r,i,"new") + house0(r,"hh","new")$housei(i)
1774                     + sum(trd,m0(r,i,trd))
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 36
ADAGE Model - Set Definition
C o m p i l a t i o n


1775                     - sum(trd, x0(r,i,trd))
1776                     - sum(j, id0(r,i,j,"new"))
1777                     - chk0_mrkt(r,i,"ed0")$e(i)
1778                     - sum(hh, cd0(r,hh,i))
1779                     - sum(k,  i0(r,k,i))
1780                     - g0(r,i)), 5);
1781   
1782      chk0_prod(r,i,v,'out')$(y0(r,i,v)   and new(v) and not byprod(i))
1783           =  y0(r,i,v)*(1-ty(r,i))
1784            + y0(r,"omel",v)$vol(i)
1785            + y0(r,"ddgs",v)$ceth(i) ;
1786   
1787      chk0_prod(r,i,v,'in')$(y0(r,i,v)   and new(v) and not byprod(i) and not liv(i))
1788          =   sum((e,use),ed0(r,e,use,i,v))
1789            + sum(g,id0(r,g,i,v)*(1+ti(r,g,i)))
1790            + ld0(r,i,v)*(1+tl(r,i))
1791            + sum(k,kd0(r,k,i,v)*(1+tk(r,k,i)))
1792            + hkd0(r,i,v)*(1+thk(r,i))
1793            + (lnd0(r,i,v)*(1+tn(r,i)))$crp(i)
1794            + (lnd0(r,i,v)*(1+tn(r,i)))$(not crp(i))
1795            + rd0(r,i,v)*(1+tr(r,i))
1796            + rnw0(r,i,v)  ;
1797   
1798      chk0_prod(r,i,v,'in')$(y0(r,i,v)    and new(v) and  liv(i))
1799          =   sum((e,use),ed0(r,e,use,i,v))
1800            + sum(g$(not (feed(g) or ofd(g))),id0(r,g,i,v)*(1+ti(r,g,i)))
1801            + sum(crp, id0(r,crp,i,v)  *pid0(r,crp,i))
1802            + sum(byprod, id0(r,byprod,i,v)  )
1803            + sum(ofd, id0(r,ofd,i,v)  *pid0(r,ofd,i))
1804   
1805            + ld0(r,i,v)*(1+tl(r,i))
1806            + sum(k,kd0(r,k,i,v)*(1+tk(r,k,i)))
1807            + hkd0(r,i,v)*(1+thk(r,i))
1808            + lnd0(r,i,v)*(1+tn(r,i))
1809            + rd0(r,i,v)*(1+tr(r,i)) ;
1810   
1811      chk0_prod(r,i,v,'out')$ele(i)
1812           = sum(gentype$(not conv(gentype) and not advee(gentype)), chk0_prod(r,gentype,v,'out'));
1813   
1814      chk0_prod(r,i,v,'in')$ele(i)
1815           = sum(gentype$(not conv(gentype) and not advee(gentype)), chk0_prod(r,gentype,v,'in'));
1816   
1817      chk0_prod(r,i,v,'bal') =round((chk0_prod(r,i,v,'out')-chk0_prod(r,i,v,'in')),5);
1818   
1819  display  chk0_mrkt,chk0_prod;
1820   
1821  parameter chk0_enbal       Check energy supply - demand balance in quad btu
1822            chk0_enconv      Check energy import balance ;
1823  * Goods supply demand balance holds in the equation: y0+m0-x0-a0=0
1824  * Energy has both retail and wholesale market where a0 corresponds to wholesale
1825      chk0_enbal(r,e,"Production") = prod0(r,e);
1826      chk0_enbal(r,e,"Consumption")= sum((use,i),btu0(r,e,use,i));
1827      chk0_enbal(r,e,"Import")     = em0_btu(r,e);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 37
ADAGE Model - Set Definition
C o m p i l a t i o n


1828      chk0_enbal(r,e,"Export")     = ex0_btu(r,e);
1829      chk0_enbal(r,e,"balance")    = round((   chk0_enbal(r,e,"Production")
1830                                             + chk0_enbal(r,e,"Import")
1831                                             - chk0_enbal(r,e,"Consumption")
1832                                             - chk0_enbal(r,e,"Export") ),6) ;
1833   
1834      chk0_enbal("world",e,balvar)=sum(r, chk0_enbal(r,e,balvar));
1835   
1836      chk0_enconv(r,e,"import1") = em0_btu(r,e);
1837      chk0_enconv(r,e,"import2") = sum(rr,en0_btu(r,rr,e));
1838      chk0_enconv(r,e,"export1") = ex0_btu(r,e);
1839      chk0_enconv(r,e,"export2") = sum(rr,en0_btu(rr,r,e));
1840   
1841  option  chk0_enbal:3:2:1;
1842  display chk0_enbal,chk0_enconv;
1843   
1844   
1845  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
1846  *                           Land use, land cover, land use change data and further processing
1847  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
1848   
1849      tr(r,ff)   =  0.05;
1850      rd0(r,ff,v)=  rd0(r,ff,v)/(1+tr(r,ff));
1851   
1852  * Adjust land endowment
1853      rd0(r,"frs",v)    =  rd0(r,"frs",v) * prd0(r,"frs");
1854      lnd0(r,"frs",v)   =  rd0(r,"frs",v);
1855      tn(r,'frs')       =  tr(r,'frs');
1856      tn(r,'frs')       =  0;
1857      plnd0(r,'frs')    =  1+ tn(r,'frs') ;
1858      rd0(r,"frs",v)    =  0;
1859      tr(r,'frs')       =  0;
1860      land0(r)          = land0(r)   + sum(vnum, lnd0(r,"frs",vnum)  );
1861      lnd0(r,"CROP",v)  = sum(crp, lnd0(r,crp,v)  );
1862   
1863  parameter crp_lnd0     Cropland input separated from lnd0;
1864      crp_lnd0(r,crp,v) = lnd0(r,crp,v)  ;
1865      lnd0(r,crp,v)     = 0;
1866   
1867  Parameter
1868            luc          Flag to activate land use change by region
1869            f_luc        Flag to activate transformation in land use from one activity to other
1870            npp          Flag for land productivity improvement
1871            npp0         Land productivity growth trend
1872            mk_luc       Markup in land use transformation to represent costs to open and explore new areas;
1873   
1874  * Allow agriculture transitions:
1875      f_luc(r,agri,agrii) = 1;
1876      f_luc(r,agri,agri)  = 0;
1877  * Allow agriculture abandonment:
1878      f_luc(r,nat,agri)   = 1;
1879  * Do not allow conversion from pasture to forests:
1880      f_luc(r,"frs","liv") = 0;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 38
ADAGE Model - Set Definition
C o m p i l a t i o n


1881      f_luc(r,"nfrs","liv")= 0;
1882   
1883  * No land conversion is allowed from managed forest to pasture in USA
1884      f_luc("usa","liv","frs")= 0;
1885   
1886  * Natural forest can directly become only managed forest and natural grass only pasture:
1887      f_luc(r,agri,nat)     = 0;
1888      f_luc(r,"frs","nfrs") = 1;
1889      f_luc(r,"liv","ngrs") = 1;
1890   
1891  * NPP is assumed to remain constant over time for land uses other than crop production, where productivity is assumed to increase by 1% per year
1892      luc(r)      = 1;
1893      npp(r,lu)   = 1;
1894      npp0(r,lu,t)= 1;
1895      npp0(r,"crop",t)=(1+0.01)**(5*(ord(t)-1));
1896   
1897      mk_luc(r,lu, lu_) = 1;
1898   
1899   
1900  * CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC    Land use, land cover, land use change data CCCCCCCCCCCCCCCCCCCCCCCCCC
1901  * Data are from FAO and GTAP and EPPA-TEM
1902  $include 'data\data2_lulc.dat'
****                               $282
**** LINE   1237 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
1903  *  parameter lulc             Combined land cover for 8 regions in 2010 from different sources (ha) (from EPPA5)/
1904  *  parameter nat_tran         Natural land transformation parameter for ADAGE (from EPPA5)
1905  *  parameter carbcnt(r,lu)    Carbon content for regions (including soil and vegetable carbons) (metric ton c per ha) (from EPPA5)/
1906  *  parameter year_rot(r)      Forest rotation age for ADAGE (from EPPA5)
1907  * nat_tran:
1908  *   out: output from natural forest relative to traditional forestry sector when 1 new ha of natural is harvested
1909  *   inp: ratio natural area rents to harvested area rents
1910  *   nf_f: share of forestry output from natural forests
1911  *   s_el: elasticity of land supply (calculated in the file: Land supply elasticities_corrected.xls at: MIT/Projects/TEM E EPPA/Land use documentation
1912  *   s_el calculations need to be corrected since we rely on historical land use changes from TEM (regional aggregation of EPPA5 is different from EPPA4)
1913   
1914  parameter
1915            d_shr               Share of output coming from managed forestry sector
1916            l_shr               Share of land used by managed forestry sector
1917            f_adj               Adjustment to other inputs at forestry sector  ;
1918   
1919      d_shr(r,s) = 1;
1920      d_shr(r,'frs') = 1 - nat_tran(r,"nf_f");
****                                  $140     $116
**** LINE   1255 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
1921      d_shr(r,"frs")$(not luc(r)) = 1;
1922   
1923  * Calculate the share of land used by managed forestry sector given the share of forest output
1924  * from deforestation and $ output/ha from deforestation relative to managed forest sector
1925      l_shr(r,s) = 1;
1926      l_shr(r,'frs') =  ( d_shr(r,'frs')/nat_tran(r,"nf_f")*nat_tran(r,"out"))
1927                       /((d_shr(r,'frs')/nat_tran(r,"nf_f")*nat_tran(r,"out"))+1);
1928      l_shr(r,'frs')$(not luc(r))=1;
1929   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 39
ADAGE Model - Set Definition
C o m p i l a t i o n


1930      f_adj(r,s,v)$vnum(v) = 1;
1931   
1932  * Adjustment = (output from trad. forestry sector - land rents from trad. forestry sector) / (output from trad. forestry sector - land rents of nat. and trad. forests)
1933      f_adj(r,'frs',v)$vnum(v) = ((1-ty(r,'frs'))*(y0(r,'frs',v)*d_shr(r,'frs'))
1934                                - (lnd0(r,'frs',v)*l_shr(r,'frs')))/((1-ty(r,'frs'))*y0(r,'frs',v)
1935                                - (lnd0(r,'frs',v)));
1936      f_adj(r,"frs",v)$(vnum(v) and not luc(r)) = 1;
1937   
1938      d_shr(r,'crop') = 1;
1939      l_shr(r,'crop') = 1;
1940      f_adj(r,'crop',v) = 1;
1941  option l_shr:5:1:1
1942   
1943  parameter q_lndothr0(reg)   Land area for other in 2010 (SOURCE: EPPA-TEM) (mha)
1944     /
1945      AFR        851.015
1946      BRA        23.575
1947      CHN        241.136
1948      EUR        29.562
1949      ROW        1086.599
1950      USA        106.421
1951      XAS        166.799
1952      XLM        152.138
1953     /;
1954   
1955  table     rice0(reg,*)     Paddy rice information (SOURCE: FAO)
1956  * area: mha; production: mmt; yield:metric ton per ha
1957                 area   production       Yield
1958      CHN      37.488     195.304       5.210
1959      XAS     128.243     438.191       3.417
1960      USA       1.226       9.410       7.677
1961      BRA       3.527      12.293       3.485
1962      XLM       3.176      14.825       4.668
1963      EUR       0.362       2.644       7.304
1964      AFR       9.759      24.783       2.539
1965      ROW       1.125       4.927       4.381
1966  ;
1967   
1968  parameter q_crpchn(*)     Adjustment for China land area (SOURCE: FAO)
1969  * The land area from Lulc for China from EPPA5 looks off so new data from FAO is brought in to fix it
1970     /Wht          19.258
1971      Corn         19.341
1972      Soyb         9.772
1973      Gron         1.286
1974      Srcn         1.696
1975      Srbt         0.219
1976      Osdn         5.424
1977      Ocr          142.461
1978      Total        199.456
1979      /;
1980   
1981  alias(crp,crp0);
1982   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 40
ADAGE Model - Set Definition
C o m p i l a t i o n


1983  parameter q_land0(*,*)        Final land area for the model in 2010 (mha)
1984            p_land0(r,*)        Final land rent for the model in 2010 ($billion per mha)
1985            v_land0(r,*)        Value of land in 2010 ($billion per mha)
1986            rent_r0(r,lu,lu_)   Markup in the land conversion from one type to other ($billion per mha)
1987            rentv0(r,i)         Natural land value ($ billion)
1988            rentv(r,i)          Natural land value endowment ($ billion)
1989   
1990            chk0_lnd0           Check land value before and after adjustment
1991            kd00, ld00          Capital and labor in the adjusted ag production
1992            chk0_ag             Chk zero profit condition in the adjusted ag production
1993    ;
1994  * Natural area comes from eppa-tem
1995  * Land rent is the same for all crops
1996  * Land area is quite different between crpfao and crptem, here we adjust to make sure the yield looks reasonable
1997  * Divide by 1e+6: convert ha in lulc to mha in q_land0
1998      q_land0(r,'crop') = lulc(r,'crptem')/1e+6;
****                             $140       $116
**** LINE   1333 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
1999      q_land0(r,'crop')$(sameas(r,"USA")) = lulc(r,'crpfao')/1e+6;
****                                                          $116
**** LINE   1334 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2000      q_land0(r,'crop')$(sameas(r,"ROW")) = lulc(r,'crpfao')/1e+6;
2001      q_land0(r,'crop')$(sameas(r,"XLM")) = lulc(r,'crpfao')/1e+6;
2002   
2003      q_land0(r,'liv')  = lulc(r,'livtem')/1e+6;
****                                        $116
**** LINE   1338 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2004      q_land0(r,'liv')$(sameas(r,"XLM"))  = lulc(r,'livgtap')/1e+6;
****                                                           $116
**** LINE   1339 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2005   
2006      q_land0(r,'frs')  = lulc(r,'frstem')/1e+6;
****                                        $116
**** LINE   1341 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2007      q_land0(r,'nfrs') = lulc(r,'nfrs')/1e+6;
2008      q_land0(r,'ngrs') = lulc(r,'ngrs')/1e+6;
2009   
2010      p_land0(r,s)$q_land0(r,s)
2011              = sum(v,lnd0(r,s,v))/q_land0(r,s)  ;
2012   
2013      p_land0(r,'crop')$q_land0(r,'crop')
2014             = sum((v,crp),crp_lnd0(r,crp,v))/q_land0(r,'crop')   ;
2015   
2016  * Assign crop area proportionally with gtap crop area
2017  * Change crp_lnd0 proportionally with gtap crop area
2018  * Put the difference of land value to capital
2019      q_land0(r,crp)= q_land0(r,'crop')*lulc(r,crp)/sum(crp0,lulc(r,crp0));
2020   
2021  * Make adjustment for China to fix the negative lnd0 issue
2022      q_land0(r,crp)$chn(r)=q_crpchn(crp);
2023   
2024  * Make adjustment for XAS to fix the negative lnd0 issue
2025      q_land0("xas","gron")= q_land0("xas","gron")-13;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 41
ADAGE Model - Set Definition
C o m p i l a t i o n


2026      q_land0("xas","wht") = q_land0("xas","wht") + 5;
2027      q_land0("xas","srcn")= q_land0("xas","srcn")+ 1;
2028      q_land0("xas","ocr") = q_land0("xas","ocr") + 7;
2029   
2030      lnd0(r,crp,"new")    = q_land0(r,crp)* p_land0(r,'crop');
2031   
2032  * Make adjustments to prevent K&L from going negative
2033  PARAMETER lnd_adj   Track lnd0 adjustments and prevent negatives ;
2034   
2035      lnd_adj(r,crp,"PRE")    = lnd0(r,crp,"new") ;
2036      lnd0(r,crp,"new")$(lnd0(r,crp,"new")-crp_lnd0(r,crp,"new") > 0.9 * (kd0(r,"va",crp,"new")+ld0(r,crp,"new"))) =  0.9 * (kd0(r,"va",crp,"new")+ld0(r,crp,"new")) + crp_lnd0(r,crp,"new");
2037      q_land0(r,crp)          = lnd0(r,crp,"new") / p_land0(r,'crop') ;
2038   
2039      lnd_adj(r,crp,"PST")                            = lnd0(r,crp,"new")         ;
2040      lnd_adj(r,crp,"PCT")$lnd_adj(r,crp,"PRE")       = lnd_adj(r,crp,"PST") / lnd_adj(r,crp,"PRE") - 1   ;
2041      lnd_adj(r,crp,"PRE")$(lnd_adj(r,crp,"PRE")=lnd_adj(r,crp,"PST"))    = 0     ;
2042      lnd_adj(r,crp,"PST")$(lnd_adj(r,crp,"PRE")=0)    = 0 ;
2043      lnd_adj(r,crp,"PCT")$(lnd_adj(r,crp,"PRE")=0)    = 0 ;
2044   
2045      kd00(r,"va",crp,"new")$(kd0(r,"va",crp,"new")+ld0(r,crp,"new"))
2046             = kd0(r,"va",crp,"new")-(lnd0(r,crp,"new")-crp_lnd0(r,crp,"new"))* kd0(r,"va",crp,"new")/(kd0(r,"va",crp,"new")+ld0(r,crp,"new")) ;
2047   
2048      ld00(r,crp,"new")
2049          =(       y0(r,crp,"new")*(1-ty(r,crp))
2050                 - (  sum((e,use),ed0(r,e,use,crp,"new"))
2051                    + sum(g,id0(r,g,crp,"new")*(1+ti(r,g,crp)))
2052                    + sum(k,kd00(r,k,crp,"new")*(1+tk(r,k,crp)))
2053                    + hkd0(r,crp,"new")*(1+thk(r,crp))
2054                   + (lnd0(r,crp,"new")*(1+tn(r,crp)))
2055                    + rd0(r,crp,"new")*(1+tr(r,crp))  ) )
2056            /(1+tl(r,crp));
2057   
2058      p_land0(r,'ngrs')$q_land0(r,'liv')
2059             =  p_land0(r,'liv')*nat_tran(r,'inp')  ;
****                                                $116
**** LINE   1394 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2060   
2061      p_land0(r,'nfrs')$q_land0(r,'frs')
2062             = p_land0(r,'frs')*nat_tran(r,'inp')  ;
2063   
2064  * Fix price for some regions where it is too low or too high
2065      p_land0('usa','nfrs')
2066             =  2* p_land0('usa','nfrs')   ;
2067      p_land0('usa','ngrs')
2068             =  0.1* p_land0('usa','ngrs')   ;
2069      p_land0('eur','nfrs')
2070             =  10* p_land0('eur','nfrs')   ;
2071   
2072      rentv0(r,nat)= p_land0(r,nat)*q_land0(r,nat);
2073      rentv0(r,'nfrs')$((rentv0(r,'nfrs')- lnd0(r,"frs",'new')*(1-l_shr(r,"frs"))*nat_tran(r,"inp"))<0)
2074          = 1.1*lnd0(r,"frs",'new')*(1-l_shr(r,"frs"))*nat_tran(r,"inp");
2075   
2076      p_land0(r,nat)=rentv0(r,nat)/q_land0(r,nat);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 42
ADAGE Model - Set Definition
C o m p i l a t i o n


2077   
2078      v_land0(r,lu)    = p_land0(r,lu);
2079      rent_r0(r,lu,lu_)= max(0, (v_land0(r,lu)-v_land0(r,lu_)));
2080   
2081  * Check land value to ensure it is not negative when we reassign the land value based on the area
2082      chk0_lnd0(r,crp,"old")=crp_lnd0(r,crp,"new");
2083      chk0_lnd0(r,"crop","old")=sum(crp,crp_lnd0(r,crp,"new"));
2084      chk0_lnd0(r,"crop","old1")=lnd0(r,"crop","new");
2085      chk0_lnd0(r,crp,"new")=lnd0(r,crp,"new");
2086      chk0_lnd0(r,"crop","new")=sum(crp,lnd0(r,crp,"new"));
2087      chk0_lnd0(r,s,"diff")=-chk0_lnd0(r,s,"new")+chk0_lnd0(r,s,"old");
2088   
2089      chk0_lnd0(r,crp,"K")=kd0(r,"va",crp,"new");
2090      chk0_lnd0(r,crp,"L")=ld0(r,crp,"new");
2091      chk0_lnd0(r,crp,"K+L")= chk0_lnd0(r,crp,"K")+  chk0_lnd0(r,crp,"L");
2092   
2093      chk0_lnd0(r,crp,"K_new")=kd00(r,"va",crp,"new");
2094      chk0_lnd0(r,crp,"L_new")=ld00(r,crp,"new");
2095      chk0_lnd0(r,crp,"K+L_new")= chk0_lnd0(r,crp,"K_New")+  chk0_lnd0(r,crp,"L_new");
2096   
2097  * Reassign new capital and labor
2098      crp_lnd0(r,crp,"new") = lnd0(r,crp,"new") ;
2099      lnd0(r,crp,"new")     = 0;
2100   
2101      ld0_10_(r,crp,"new","2010")= ld00(r,crp,"new");
2102      ld0(r,crp,"new")           = ld00(r,crp,"new") ;
2103      le0_10_(r,hh, "2010")      = sum(i, ld0_10_(r,i,"new","2010"));
2104      le0(r,hh)                  = le0_10_(r,hh, "2010");
2105   
2106      kd0_10_(r,"va",crp,"new","2010")= kd00(r,"va",crp,"new");
2107      kd0(r,"va",crp,"new")           = kd00(r,"va",crp,"new");
2108      ke0_10_(r,hh,"2010")            = sum(i, kd0_10_(r,"va",i,"new","2010"));
2109      ke0(r,hh)                       = ke0_10_(r,hh,"2010");
2110   
2111  option lnd0:3:1:2,chk0_lnd0:3:2:1;
2112   
2113  parameters
2114           fffor0            Fixed factor endowment for natural land conversion ($billion)
2115           fffor             Fixed factor endowment for natural land conversion ($billion)
2116           ffforT            Fixed factor endowment for natural land conversion over time ($billion)
2117           l_fx_el           Elasticity of substitution in the fixed factor at natural land transformation function
2118           l_fx_elt          Elasticity of substitution in the fixed factor at natural land transformation function
2119           alpha_l           Cost share of fixed factor
2120           lndout            Value of natural harvested product ($billion per mha)
2121           otinp             Value of other inputs      ;
2122   
2123      fffor0(r,agri,v)$vnum(v)=0.01*v_land0(r,agri);
2124      rent_r0(r,lu,lu_)= max(0, (v_land0(r,lu)-v_land0(r,lu_)-fffor0(r,lu_,'new')));
2125   
2126      fffor0(r,'nfrs',v)$vnum(v) = (lnd0(r,"Frs",v)*(1-l_shr(r,"FRS"))-(lnd0(r,"Frs",v)*(1-l_shr(r,"Frs"))*nat_tran(r,"inp")))
2127                                   / q_land0(r,"frs") ;
2128   
2129      alpha_l(r,t,"nfrs",v)$vnum(v) = fffor0(r,"nfrs",v)/((lnd0(r,"frs",v)*(1-l_shr(r,"frs"))+(y0(r,"frs",v)*nat_tran(r,"nf_f")))/q_land0(r,"frs"));
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 43
ADAGE Model - Set Definition
C o m p i l a t i o n


2130      l_fx_el(r,"nfrs",v)$vnum(v)   = nat_tran(r,"s_el")/(1-alpha_l(r,"2010","nfrs",v));
****                                                      $116
**** LINE   1465 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2131      alpha_l(r,t,"ngrs",v)$vnum(v) = alpha_l(r,t,"nfrs",v);
2132      l_fx_el(r,"ngrs",v)$vnum(v)   = l_fx_el(r,"nfrs",v);
2133   
2134  * Allow USA, EUR and China to preserve natural forest as observed historically
2135      l_fx_el("usa","ngrs",v)$vnum(v)   = 10*l_fx_el("Usa","nfrs",v);
2136      l_fx_el("chn","ngrs",v)$vnum(v)   = 10*l_fx_el("chn","nfrs",v);
2137      l_fx_el("eur","ngrs",v)$vnum(v)   = 10*l_fx_el("eur","nfrs",v);
2138      l_fx_el("XLM",lu,v)               = l_fx_el("BRA",lu,v);
2139   
2140      fffor0(r,'ngrs',v)$vnum(v) = v_land0(r,"liv")*alpha_l(r,"2010",'ngrs','new');
2141   
2142      lndout(r,"nfrs",v)$vnum(v) = nat_tran(r,"out")*y0(r,"frs",v)/q_land0(r,"frs");
2143      lndout(r,"ngrs",v)$vnum(v) = 0;
2144   
2145      otinp(r,"nfrs",v)$vnum(v) = lndout(r,"nfrs",v)*(1-ty(r,'frs')) + v_land0(r,"frs") - v_land0(r,"nfrs") - fffor0(r,'nfrs',v);
2146      otinp(r,"ngrs",v)$vnum(v) = lndout(r,"ngrs",v)*(1-ty(r,'liv')) + v_land0(r,"liv") - v_land0(r,"ngrs") - fffor0(r,'ngrs',v);
2147   
2148  alias  (j,j0), (lu,lu_);
2149   
2150  * Prepare land use change production block using the aggregated ag production function
2151  parameter  ag_prd   Total inputs in the production function of agriculture
2152             ag_shr   Share of inputs other than energy in the ag production function which will be used in the land conversion function
2153             ag_shre  Share of energy inputs in the agriculture production function which will be used in the land conversion function   ;
2154   
2155      ag_prd(r,'crop',v)  =   sum((k,crp),kd0(r,k,crp,v))
2156                            + sum(crp, hkd0(r,crp,v))
2157                            + sum(crp, ld0(r,crp,v))
2158                            + sum((g,crp)$(not sameas(crp,'ocr')), id0(r,g,crp,v))
2159                            + sum((g,crp)$(sameas(crp,'ocr')), id0(r,g,crp,v))
2160                            + sum((j,use,crp), ed0(r,j,use,crp,v))
2161                            + sum(crp,rd0(r,crp,v));
2162      ag_prd(r,i,v)$(frs(i) or liv(i))
2163                          =   sum(k,kd0(r,k,i,v)) + hkd0(r,i,v)+ ld0(r,i,v)
2164                            + sum(g, id0(r,g,i,v))
2165                            + sum((j0,use), ed0(r,j0,use,i,v))
2166                            + rd0(r,i,v) ;
2167   
2168      ag_shr(r,'crop',k,v)$ag_prd(r,'crop',v)
2169                        =    sum(crp,kd0(r,k,crp,v))
2170                           / ag_prd(r,'crop',v);
2171   
2172      ag_shr(r,'crop',"hk",v)$ag_prd(r,'crop',v)
2173                        =    sum(crp, hkd0(r,crp,v))
2174                           / ag_prd(r,'crop',v);
2175   
2176      ag_shr(r,'crop',"L",v)$ag_prd(r,'crop',v)
2177                        =    sum(crp, ld0(r,crp,v))
2178                           / ag_prd(r,'crop',v);
2179   
2180      ag_shr(r,'crop',i,v)$(ag_prd(r,'crop',v) )
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 44
ADAGE Model - Set Definition
C o m p i l a t i o n


2181                        =  (   sum(crp$(not sameas(crp,'ocr')), id0(r,i,crp,v))  + id0(r,i,"ocr",v)  )
2182                          / ag_prd(r,'crop',v);
2183   
2184   
2185      ag_shr(r,'crop','r',v)$ag_prd(r,'crop',v)
2186                        =   sum(crp,rd0(r,crp,v))
2187                          / ag_prd(r,'crop',v);
2188   
2189      ag_shre(r,'crop',e,use,crp,v)$ag_prd(r,'crop',v)
2190                        =   ed0(r,e,use,crp,v)
2191                          / ag_prd(r,'crop',v);
2192   
2193   
2194      ag_shr(r,i,k,v)$(( liv(i) or frs(i) ) and  ag_prd(r,i,v))
2195                        =    kd0(r,k,i,v)
2196                           / ag_prd(r,i,v);
2197   
2198      ag_shr(r,i,"hk",v)$(( liv(i) or frs(i) ) and ag_prd(r,i,v))
2199                        =    hkd0(r,i,v)
2200                           / ag_prd(r,i,v);
2201   
2202      ag_shr(r,i,"L",v)$(( liv(i) or frs(i) ) and  ag_prd(r,i,v))
2203                        =    ld0(r,i,v)
2204                           / ag_prd(r,i,v);
2205   
2206      ag_shr(r,i,g,v)$(( liv(i) or frs(i) ) and ag_prd(r,i,v))
2207                        =    id0(r,g,i,v)
2208                           / ag_prd(r,i,v);
2209      ag_shr(r,i,'r',v)$(( liv(i) or frs(i) ) and ag_prd(r,i,v))
2210                        =    rd0(r,i,v)
2211                           / ag_prd(r,i,v);
2212   
2213      ag_shre(r,i,e,use,i,v)$(( liv(i) or frs(i) ) and ag_prd(r,i,v))
2214                        =    ed0(r,e,use,i,v)
2215                           / ag_prd(r,i,v);
2216   
2217      ag_shr(r,i,'tot',v) = sum(k,ag_shr(r,i,k,v))+ag_shr(r,i,'hk',v)+ ag_shr(r,i,'l',v)+ sum(j,ag_shr(r,i,j,v))+ag_shr(r,i,'r',v)+sum((e,use,j),ag_shre(r,i,e,use,j,v));
2218   
2219  option ag_shr:2:2:2,  ag_shre:2:3:2
2220   
2221   
2222  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2223  *                        Data for ag and biofuel physical information in 2010
2224  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2225  * Data are collected from FAO
2226  $include  '.\data\data3_agbio.dat'
****                                   $282
**** LINE   1561 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2227   
2228  parameter chk0_agv      Check agriculture value
2229            chk0_biov     Check biofuel value
2230            ag_yield0     Ag yield in 2010 (metric ton per ha);
2231  ** There is a significant difference between GTAP & FAO data especially the livestock sector
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 45
ADAGE Model - Set Definition
C o m p i l a t i o n


2232      chk0_agv(r,agr,'adage')   = y0(r,agr,'new');
2233      chk0_agv(r,agr,'gtap')    = ag_valu0(r,agr);
****                                         $140
**** LINE   1568 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2234      chk0_agv(r,'frs','adage') = 0;
2235      chk0_agv(r,agr,'diff')    = round((chk0_agv(r,agr,'adage')- chk0_agv(r,agr,'gtap')),1);
2236   
2237      chk0_biov(r,bio,'adage')  = y0(r,bio,'new');
2238      chk0_biov(r,bio,'gtap')   = biop_valu0(r,bio);
****                                           $140
**** LINE   1573 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2239      chk0_biov(r,bio,'diff')   = chk0_biov(r,bio,'adage')- chk0_biov(r,bio,'gtap') ;
2240  option chk0_biov:1:2:1,chk0_agv:1:2:1;
2241   
2242  * Update the ag_valu0 with GTAP data
2243      ag_valu0(r,i)    = 0;
2244      ag_valu0(r,crp)  = y0(r,crp,'new');
2245      ag_tonn0(r,'liv')= 0;
****             $140
**** LINE   1580 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2246      ag_tonn0(r,'mea')= 0;
2247      ag_pric0(r,s)$(not sameas(s,"liv"))=0;
****             $140
**** LINE   1582 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2248      ag_pric0(r,crp)$ag_tonn0(r,crp) = ag_valu0(r,crp)/ag_tonn0(r,crp);
2249   
2250      ag_pric0(r,"mea")= ag_pric0(r,"liv")*y0(r,"mea","new")/id0(r,"liv", "mea","new");
2251      ag_tonn0(r,'liv')= y0(r,"liv",'new')/ag_pric0(r,"liv");
2252      ag_tonn0(r,'mea')= y0(r,"mea",'new')/ag_pric0(r,"mea");
2253   
2254  * Ag price data for forest product is taken from GLOBIOM on phase II model comparision (thousand $2010/metric ton)
2255      ag_pric0("AFR","frs")=   0.56897   ;
2256      ag_pric0("BRA","frs")=   0.55143   ;
2257      ag_pric0("CHN","frs")=   1.26422   ;
2258      ag_pric0("EUR","frs")=   0.64026   ;
2259      ag_pric0("XAS","frs")=   0.67374   ;
2260      ag_pric0("XLM","frs")=   0.56015   ;
2261      ag_pric0("ROW","frs")=   0.64336   ;
2262      ag_pric0("USA","frs")=   0.71233   ;
2263      ag_pric0("World","frs")= 0.68902   ;
2264   
2265      ag_tonn0(r,'frs')$ag_pric0(r,"frs")  =  y0(r,"frs",'new')/ag_pric0(r,"frs");
2266   
2267  * ddgs price is from usda and adjusted to ensure ddgs production yield in USA is 6.011 in 2010
2268      ag_pric0(r,"ddgs")     = 0.1170;
2269      ag_pric0("USA","ddgs") = 0.15375;
2270      ag_pric0("CHN","ddgs") = 0.11179;
2271      ag_pric0("ROW","ddgs") = 0.37505;
2272      ag_pric0(r,"omel")     = 0.31359;
2273      ag_tonn0(r,byprod)$ag_pric0(r,byprod) = y0(r,byprod,'new')/ag_pric0(r,byprod);
2274   
2275  Table volby_pric0(r,i)   vegetable oil and byproduct price
2276  * Assume soybean yield in terms to weight: oil (vol) : 19%, meal (omel): 80%; waste: 1%
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 46
ADAGE Model - Set Definition
C o m p i l a t i o n


2277  * The osdn yield in terms to weight:     oil (vol) : 40%*0.97=38.8%, meal (omel): 60%; waste: 1.2%
2278  *     osdn conversion rate is 0.97 above
2279  * https://www.cmegroup.com/trading/agricultural/files/pm374-cbot-soybeans-vs-dce-soybean-meal-and-soybean-oil.pdf
2280                     Omel           Vol
2281      USA         0.10060       3.70347
2282      BRA         0.02239       4.43709
2283      CHN         0.01392       2.06082
2284      EUR         0.04824       2.66469
2285      XLM         0.02026       2.96744
2286      XAS         0.03595       2.45225
2287      AFR         0.02641       2.20566
2288      ROW         0.06816       4.69054
2289  ;
2290      ag_pric0(r,"vol")  = volby_pric0(r,"vol");
2291      ag_pric0(r,"omel") = volby_pric0(r,"omel");
2292   
2293      ag_tonn0(r,'vol')  = y0(r,"vol",'new')/ag_pric0(r,"vol");
2294      ag_tonn0(r,'omel') = y0(r,"omel",'new')/ag_pric0(r,"omel");
2295   
2296      ag_yield0(r,i)$q_land0(r,i)          = ag_tonn0(r,i)/q_land0(r,i);
2297   
2298  * Yield for feedstock used in advbio in metric ton/ha:
2299      ag_yield0(r,"swge") =   15;
2300      ag_yield0(r,"Msce") = 2*15;
2301      ag_yield0(r,"Frwe") = 22.32;
2302   
2303  parameter     chk0_area       Check area    ;
2304      chk0_area(r,crp,"fao")     = lulc(r,crp)/1e+6;
2305      chk0_area(r,"crop","fao")  = sum(crp,chk0_area(r,crp,"fao"));
2306      chk0_area(r,crp,"Adage")   = q_land0(r,crp);
2307      chk0_area(r,"crop","Adage")= sum(crp,q_land0(r,crp));
2308   
2309   
2310  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2311  *                       GHG emission data and process
2312  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2313  parameter ghg0_10(r,ghg,i,v)             GHG emission by disaggregated sector and ghg in 2010 (mmt co2eq)
2314            co20_10(r,j,use,i,v)           CO2 emissions from fossil fuel combustion by type of use in 2010 for disaggregated sectors (mmt co2eq)
2315            ghgt0_10(r,ghg,i,v,t)          GHG emission by sector and ghg during 2010-2050 for disaggregated sectors (mmt co2eq)
2316            ghg_lulc0_10(r)                CO2 emission from land use change in 2010 (mmt co2eq)
2317   
2318            ghg0_10_(r,ghg,i,v)            GHG emission by aggregated sector and ghg in 2010 (mmt co2eq)
2319            co20_10_(r,j,use,i,v)          CO2 emissions from fossil fuel combustion by type of use in 2010 for aggregated sectors (mmt co2eq)
2320            ghgt0_10_(r,ghg,i,v,t)         GHG emission by sector and ghg during 2010-2050 for aggregated sectors (mmt co2eq)
2321            ghg_lulc0_10_(r)               CO2 emission from land use change in 2010 (mmt co2eq)
2322   
2323            ghg0(r,ghg,i,v)                GHG emission by sector and ghg in 2010 with transportation sectors aggregated (mmt co2eq)
2324            co20(r,j,use,i,v)              CO2 emissions from fossil fuel combustion by type of use in 2010 with transportation sectors aggregated (mmt co2eq)
2325            ghgt0(r,ghg,i,v,t)             GHG emission by sector and ghg during 2010-2050 with transportation sectors aggregated (mmt co2eq)
2326            ghgtott0(r,*,t)                Total GHG emissions by type in 2010 by region (mmt co2eq)
2327   
2328            ghg_lulc0(r)                   GHG emission from land use change in 2010 (mmt co2eq)
2329            ghg_lulctot0                   Total land use emission in the world in 2010 (mmt co2eq)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 47
ADAGE Model - Set Definition
C o m p i l a t i o n


2330   
2331            ghg_target(r,t)                GHG emission target trend based on Copenhagen Agreement
2332            carbcnt_gcam(r,lu,cvar)        Carbon intensity by land type in 2010 from GCAM (metric ton co2eq per ha & area: million ha)
2333            emisfac_gcam(r,*,cvar)         CO2 emission factor from land use change from Govinda R. Timilsina, Simon Mevel "biofuels and Climate Change Mitigation: A CGE Analysis Incorporating Land-Use Change" from World Bank Policy research Working p
      aper
2334   
2335            chk_ghg2(r,ghg,i)              Check crop ghg intensity
2336   
2337            co2_btu(r,i)                   CO2 emissions intensity by fossil fuel combustion per quad Btu (mmt co2eq per quad btu)
2338            co2_btu0(r,cgo,use,i)          CO2 emissions intensity by ff and sector (mmt co2 eq per quad btu)
2339            co200(r,j,use,i)               CO2 emissions by fossil fuels type by sector (mmt co2eq)
2340            co2tot0(r,i)                   CO2 emissions by fuel type (mmt co2eq)
2341            co2endow0(r)                   Endowment of total co2 emissions from fossil fuel (mmt co2eq) in 2010
2342            co2endow(r)                    Endowment of total co2 emissions from fossil fuel (mmt co2eq)
2343   
2344            ghgtot0(r,ghg)                 Total GHG emissions by type in 2010 (mmt co2eq)
2345            ghgendow0(r)                   Endowment of GHG emissions (mmt co2eq) in 2010
2346            ghgendow(r)                    Endowment of GHG emissions (mmt co2eq)
2347            ghg_btu                        GHG emission factor from fossil fuel production (mmt co2eq per quad btu)
2348            co2eqendow0(r)                 Endowment of all ghg gases excluding emissions from land use change (mmt co2eq)
2349            co2eqendow(r)                  Endowment of all ghg gases excluding emissions from land use change (mmt co2eq);
2350  ;
2351   
2352  * Data were collected from EDGAR, International Energy Statistics, EPA inventory and World resource institue for Land use emissions and other sources
2353  *   edgar: emission database for global atmospheric research: http://edgar.jrc.ec.europa.eu/datasets_list.php?v=42FT2010
2354  *   International Energy Statistics: http://www.eia.gov/cfapps/ipdbproject/IEDIndex3.cfm?tid=90&pid=44&aid=8
2355  *                                    http://www.eia.gov/cfapps/ipdbproject/IEDIndex3.cfm?tid=91&pid=46&aid=31#
2356  *   World resource institute: http://cait2.wri.org/wri/Country GHG Emissions?indicator=Total GHG Emissions Excluding LUCF&indicator=Total GHG Emissions Including LUCF&year=2010
2357  *   Emission factor for land use change: Govinda R. Timilsina, Simon Mevel, "Biofuels and Climate Change Mitigation: A CGE Analysis Incorporating Land-Use Change" Environmental and Resource Economics volume 55, pages119 (2013)
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data4_ghg.gdx
--- LOAD  ghg0_10 = 3:ghg0
--- LOAD  co20_10 = 1:co20
--- LOAD  ghgt0_10 = 4:ghgt
--- LOAD  ghg_lulc0_10 = 5:ghg_lulc
--- LOAD  ghg_target = 6:ghg_target
--- LOAD  carbcnt_gcam = 7:carbcnt_gcam
--- LOAD  emisfac_gcam = 8:emisfac_gcam
2360   
2361  * Turn off co2 emissions from agri, liv and fors as it may include emissions from natural fires
2362      ghgt0_10(r,"co2",agr,"new",t) = 0;
2363      ghg0_10(r,"co2",agr,v)        = 0;
2364      ghgt0_10(r,"co2",agr,v,t)     = 0;
2365   
2366  * Fix regions and sectors where the emissions are too large to cause negative input if ghg is priced, then 0.5 is used to scale emissions down.
2367      ghgt0_10(r,ghg,crp,"new",t)   = 0.5*ghgt0_10(r,ghg,crp,"new",t);
2368   
2369  * Split emissions for electricity generation by technology
2370  * Electricity related non-CO2 ghg emission is only for SF6, which is linked to transmission
2371  * so the split is based on physical quantity of generation
2372      ghgt0_10(r,ghg,i,v,t)$(ghgt0_10(r,ghg,"ele",v,t) and gentype(i) and not conv(i))
2373             = ghgt0_10(r,ghg,"ele",v,t)*elegen0_10(r,i)/sum(ii$(not conv(ii)),elegen0_10(r,ii));
2374      ghgt0_10(r,ghg,"ele",v,t)          = 0;
2375      ghg0_10(r,ghg,i,v)                 = ghgt0_10(r,ghg,i,v,"2010");
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 48
ADAGE Model - Set Definition
C o m p i l a t i o n


2376   
2377  * Split CO2 emissions from energy usage for electricity generation instead of electricity generated.
2378  * Assume 90% of emissions are captured in CCS generation
2379      co20_10(r,e,"fuel",i,v)$(    gentype(i)
2380                               and btu0_10(r,e,"fuel",i,"2010")*eleemisf(e,i)
2381                               and sum(elefuelmap(e,ii)$(not conv(ii)),btu0_10(r,e,"fuel",ii,"2010")*eleemisf(e,i)))
2382             = sum(elefuelmap(e,i), co20_10(r,e,"fuel","conv",v))
2383                                   *btu0_10(r,e,"fuel",i,"2010")*eleemisf(e,i)
2384                                   /sum(elefuelmap(e,ii)$(not conv(ii)),btu0_10(r,e,"fuel",ii,"2010")*eleemisf(e,i));
2385   
2386      co20_10(r,j,use,"conv",v)          = 0;
2387   
2388  * Assign emissions to aggregated sectors
2389      ghgt0_10_(r,ghg,ii,v,t) = sum(mapSector(ii,i), ghgt0_10(r,ghg,i,v,t));
2390      ghg0_10_(r,ghg,ii,v)    = sum(mapSector(ii,i), ghg0_10(r,ghg,i,v));
2391      co20_10_(r,jj,use,ii,v) = sum((mapSector(ii,i),mapGSector(jj,j)),co20_10(r,j,use,i,v));
2392   
2393      ghg0(r,ghg,ii,v)        = ghg0_10_(r,ghg,ii,v)   ;
2394      co20(r,jj,use,ii,v)     = co20_10_(r,jj,use,ii,v);
2395      ghgt0(r,ghg,ii,v,t)     = ghgt0_10_(r,ghg,ii,v,t);
2396   
2397      ghgtott0(r,ghg,t)       = sum(ii,ghgt0(r,ghg,ii,"new",t));
2398      ghgtott0(r,"All",t )    = sum((ghg,ii),ghgt0(r,ghg,ii,"new",t));
2399   
2400      ghg_lulc0_10_(r)        = ghg_lulc0_10(r);
2401      ghg_lulc0(r)            = ghg_lulc0_10(r) ;
2402      ghg_lulctot0            = sum(r, ghg_lulc0(r));
2403   
2404      ghg_target(r,"2010")    = 1;
2405   
2406      chk_ghg2(r,ghg,crp)$q_land0(r,crp)=ghgt0(r,ghg,crp,"new","2010")/q_land0(r,crp);
2407   
2408  display co20_10,ghg0,co20,ghgt0_10,ghg_lulc0, ghgtott0, chk_ghg2;
2409   
2410   
2411   
2412      co200(r,cgo,use,i)  $(not fdst(use)) = co20(r,cgo,use,i,"new");
2413      co2tot0(r,cgo)    = sum((use,i),co20(r,cgo,use,i,"new"));
2414      co2endow0(r)      = sum((cgo,use,i),co20(r,cgo,use,i,"new"));
2415      co2endow(r)       = co2endow0(r);
2416   
2417      co2_btu(r,cgo)$sum((use,i)$(not fdst(use) and not conv(i)), btu0(r,cgo,use,i))
2418          = co2tot0(r,cgo)/ sum((use,i)$(not fdst(use)  and not conv(i)), btu0(r,cgo,use,i)) ;
2419   
2420      co2_btu0(r,cgo,use,i)$(not fdst(use) and btu0(r,cgo,use,i))= co200(r,cgo,use,i)/btu0(r,cgo,use,i);
2421      co2_btu0(r,cgo,use,i)$(sameas(use,"fuel") and advee(i))    = sum(eleemismap(j,i),co2_btu0(r,cgo,use,j)*eleemisf(cgo,i));
2422   
2423      ghgtot0(r,ghg)= sum(i, ghg0(r,ghg,i,"new"));
2424      ghgendow0(r)  = sum(ghg,ghgtot0(r,ghg));
2425      ghgendow(r)   = ghgendow0(r);
2426   
2427      ghg_btu(r,ghg,ff)$prod0_10_(r,ff,"2010") = ghg0(r,ghg,ff,"new")/prod0_10_(r,ff,"2010") ;
2428      co2eqendow0(r) = ghgendow(r) + co2endow(r);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 49
ADAGE Model - Set Definition
C o m p i l a t i o n


2429      co2eqendow(r)  = co2eqendow0(r);
2430   
2431  display co2tot0,co2endow, ghg0, co20,ghgendow, co200,ghgtot0,co2_btu, co2_btu0, ghg_btu;
2432   
2433  parameter   re_ghg0     Report ghg emission by gas in 2010 (mmt co2eq);
2434  * Emissions from lulc is not included here
2435     re_ghg0(r,i,ghg)       = ghg0(r,ghg,i,"new");
2436     re_ghg0(r,i,"co2")     = ghg0(r,"co2",i,"new")+ sum((cgo,use),co200(r,cgo,use,i)) ;
2437     re_ghg0(r,"ele",ghg)   = re_ghg0(r,"ele",ghg) + re_ghg0(r,"conv",ghg);
2438     re_ghg0(r,"conv",ghg)  = 0;
2439     re_ghg0(r,"Total",ghg) = sum(i,re_ghg0(r,i,ghg));
2440  *display re_ghg0;
2441   
2442   
2443  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2444  *                     CO2 emissions from land use change
2445  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2446  parameter  carbcnt_eppa    Carbon intensity from land in EPPA (metric ton co2eq per ha)
2447             chk0_carbcnt    Check carbon intensity from EPPA and GCAM (metric ton co2eq per ha);
2448  * Convert from metric ton c per ha to metric ton co2eq per ha)
2449  * 44/12 is to convert from c to co2; 10 is for the unit conversion from GCAM to ADAGE
2450      carbcnt_eppa(r,lu) = carbcnt(r,lu)*44/12;
****                                 $140
**** LINE   1785 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2451      carbcnt_gcam(r,lu,"vegc") = 10*carbcnt_gcam(r,lu,"vegc");
2452      carbcnt_gcam(r,lu,"soilc")= 10*carbcnt_gcam(r,lu,"soilc");
2453   
2454      chk0_carbcnt(r,lu,"GCAM") = carbcnt_gcam(r,lu,"vegc") + carbcnt_gcam(r,lu,"soilc");
2455      chk0_carbcnt(r,lu,"EPPA") = carbcnt_eppa(r,lu);
2456   
2457      carbcnt(r,lu) = 0;
2458      carbcnt(r,lu) =  carbcnt_gcam(r,lu,"vegc")*emisfac_gcam(r,lu,"vegc")
2459                     + carbcnt_gcam(r,lu,"soilc")*emisfac_gcam(r,lu,"soilc");
2460   
2461  display chk0_carbcnt,carbcnt;
2462  option  carbcnt_gcam:1:1:2,emisfac_gcam:2:1:2
2463  display carbcnt_eppa,carbcnt_gcam, emisfac_gcam,carbcnt;
2464   
2465  parameter  difcarb(r,lu,lu_)         Difference in co2 between two vegetation types (metric ton of co2eq per ha)
2466             debtcarb(r,lu,lu_)        Co2 debt (million metric tons of co2eq per million ha)
2467             credcarb(r,lu,lu_)        Co2 credit (million metric tons of co2eq per million ha)
2468             debtcarb0(r,lu,lu_)       Co2 debt (million metric tons of co2eq per million ha)
2469             credcarb0(r,lu,lu_)       Co2 credit (million metric tons of co2eq per million ha) ;
2470   
2471  * For land abandonment or reforestation/afforestation, consider carbon is accumulated over 20 years to reach the maximum capacity
2472   
2473  * The following settings are for sensitivity anlysis. The default is f_case=2
2474  *   f_case=1: original difcarb to use
2475  *   f_case=2: emission factor is reduced by 30% for non-cropland in order to calculate difcarb
2476  *   f_case=3; emission factor is reduced by 30% for non-cropland type and some regions are further adjusted to calculate difcarb
2477  *   f_case=4: regional emisisons are further adjusted to ensure simulated emission in 2015 close to the luc emission in 2010 in ghg_lulc0 from World resource institue
2478   
2479  *Case 1:
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 50
ADAGE Model - Set Definition
C o m p i l a t i o n


2480  if (f_case=1,
2481      difcarb(r,lu,lu_)$f_luc(r,lu,lu_)   = (carbcnt(r,lu_) - carbcnt(r,lu)); );
2482   
2483  *Case 2:
2484  if (f_case=2,
2485       carbcnt(r,lu)$(not sameas(lu,"crop"))= 0.70* carbcnt(r,lu);
2486       difcarb(r,lu,lu_)$f_luc(r,lu,lu_)    = (carbcnt(r,lu_) - carbcnt(r,lu));  );
2487   
2488  *Case3:
2489  if (f_case=3,
2490        carbcnt(r,lu)$(not sameas(lu,"crop") and not num(r))= 0.70*carbcnt(r,lu);
2491        difcarb(r,lu,lu_)$f_luc(r,lu,lu_)   = (carbcnt(r,lu_) - carbcnt(r,lu));
2492        difcarb(r,lu,lu_)= difcarb(r,lu,lu_)/3;     );
2493   
2494  *Case 4:
2495  * Regional emisisons are further adjusted to ensure simulated emission in 2015 close to the luc emission in 2010 in ghg_lulc0 from World resource institue
2496  if (f_case=4,
2497       carbcnt(r,lu)$(not sameas(lu,"crop"))=0.70* carbcnt(r,lu);
2498       difcarb(r,lu,lu_)$f_luc(r,lu,lu_)   = (carbcnt(r,lu_) - carbcnt(r,lu));
2499       difcarb(r,lu,lu_)$(sameas(r,"EUR") or sameas(r,"ROW") or sameas(r,"BRA")  or sameas(r,"XAS"))= difcarb(r,lu,lu_)/12;
2500       difcarb(r,lu,lu_)$(sameas(r,"XLM") )= difcarb(r,lu,lu_)/15;
2501       difcarb(r,lu,lu_)$(sameas(r,"USA") or sameas(r,"AFR") or sameas(r,"CHN") )= difcarb(r,lu,lu_)/8;
2502      );
2503   
2504       debtcarb(r,lu,lu_)$(difcarb(r,lu,lu_) gt 0)   =   difcarb(r,lu,lu_);
2505       credcarb(r,lu,lu_)$(difcarb(r,lu,lu_) lt 0)   =  -difcarb(r,lu,lu_);
2506   
2507  parameter chk0_lucghg(r,lu,lu_,*)     Land conversion block comparison;
2508     chk0_lucghg(r,lu,lu_,"rent")$f_luc(r,lu,lu_)     =  rent_r0(r,lu,lu_) ;
2509     chk0_lucghg(r,lu,lu_,"debtcarb")$f_luc(r,lu,lu_) =  debtcarb(r,lu,lu_)/1000;
2510     chk0_lucghg(r,lu,lu_,"credcarb")$f_luc(r,lu,lu_) =  credcarb(r,lu,lu_)/1000;
2511  option  chk0_lucghg:3:3:1
2512  *display chk0_lucghg;
2513   
2514  Table gaselas(*,ghg)        Elasticities of substitution from forward-looking ADAGE
2515                 CO2        CH4         N2O        HFC        PFC         SF6
2516        RES        0        0.21
2517        COL        0        0.40
2518        ELE        0        0.11                              0.16
2519        GAS        0        0.13
2520        OIL        0        0.10
2521        AGR        0        0.05        0.07
2522        EIM        0        0.11        0.70        0.4       0.12        0.60
2523        MAN        0        0.11                    0.4       0.14
2524        SRV        0
2525  ;
2526      gaselas(agr,ghg)  = gaselas("AGR",ghg);
2527      gaselas("hh",ghg) = gaselas("res",ghg);
2528      gaselas(i,ghg)    = gaselas(i,ghg) ;
2529   
2530  parameter    chk0_elas   Check sectors with ghg emissions  ;
2531       chk0_elas(i,ghg)$(sum(r,ghg0(r,ghg,i,"new"))) =1;
2532   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 51
ADAGE Model - Set Definition
C o m p i l a t i o n


2533  parameter
2534          CO2_elas       CO2 elasticity
2535          CH4_elas       Methane elasticity
2536          N2O_elas       N2O elasticity
2537          HFC_elas       HFC elasticity
2538          PFC_elas       PFC elasticity
2539          SF6_elas       SF6 elasticity ;
2540   
2541      CO2_elas(r,i)    = gaselas(i,"CO2");
2542      CH4_elas(r,i)    = gaselas(i,"CH4");
2543      N2O_elas(r,i)    = gaselas(i,"N2O");
2544      HFC_elas(r,i)    = gaselas(i,"HFC");
2545      PFC_elas(r,i)    = gaselas(i,"PFC");
2546      SF6_elas(r,i)    = gaselas(i,"SF6");
2547      CO2_elas(r,"hh") = gaselas("RES","CO2");
2548      CH4_elas(r,"hh") = gaselas("RES","CH4");
2549      N2O_elas(r,"hh") = gaselas("RES","N2O");
2550   
2551  * Prepare air pollutant emission data for the model
2552  parameter    ap0(r,ap,i)          Air pollutant in edgar in 2010 by sector (1000 metric ton)
2553               aptot0(r,ap)         Total  air pollutant  emissions by type in 2010 (1000 metric ton);
2554   
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data5_pollutant.gdx
--- LOAD  ap0 = 1:ap0
2557   
2558      aptot0(r,ap)=sum(i,  ap0(r,ap,i));
2559   
2560  table       co2capt(*,t)          CO2 emission from electricity generation constraint starting in 2020 (mmt co2e)
2561  * This is the CO2 emission constraint for clean power plan from EPA
2562          2020       2025        2030        2035        2040        2045        2050
2563  ELE    2136.61  1877.68     1618.75     1618.75     1618.75     1618.75     1618.75
2564  ;
2565   
2566  parameter   co2ele(r)             Simulated co2 emission from regulation
2567              f_co2ele(r)           Factor to adjust co2 emission endowment from electricity generation
2568              f_co2eleT(r,t)        Factor to adjust co2 emission endowment from electricity generation over time    ;
2569   
2570  f_co2ele(r)    = 0;
2571  f_co2eleT(r,t) = 0;
2572   
2573  *End of ghg emission data for the model
2574  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2575   
2576   
2577  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2578  *                               Elasticities
2579  **--- Elasticities and Other Parameters taken from forward-looking ADAGE or EPPA ---**
2580  parameter
2581          eva_elas(i)             Elasticity between energy and value added (non-electricity)
2582          enoe_elas(*)            Elasticity between electricity and non-electric energy
2583          en_elas(*)              Elasticity among types of fossil fuels
2584          erva_elas(*)            Elasticity between resource-energy-material bundle and value added (agriculture only)
2585          er_elas(r,*)            Elasticity between resource input and energy-material bundle (agriculture only)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 52
ADAGE Model - Set Definition
C o m p i l a t i o n


2586          ae_elas(*)              Elasticity between materials and energy (agriculture only)
2587   
2588          cog_elas(i)             Elasticity between gas and coal-oil in electricity
2589          co_elas(i)              Elasticity between coal and oil in electricity
2590          mm_elas(i)              Elasticity among import sources
2591          dm_elas(i)              Elasticity between domestic goods and imports
2592   
2593          ele_elas                Elasticity between electricity generated from technology
2594          esub_nr(r,i)            Elasticity between natural resources and other inputs
2595          pref_nr(r,i)            Reference price for natural resources
2596          esub_gen(r,i)           Elasticity between resources and other inputs in electricity generation
2597          pref_gen(r,i)           Reference price for electricity generation resources
2598          esub_bio(r,i)           Elasticity between biofuel resource and other inputs
2599          pref_bio(r,i)           Reference price for biofuel resource
2600   
2601   
2602          shagp(i,t)              Factor to adjust elasticity of energy_value added bundle
2603          eva_elast(i,t)          Elasticity between energy and value added (non-electricity)
2604          esub_flnd               Elasticity of fixed factor of land input in land conversion
2605   
2606          ldv_elas                Elasticity between bioenergy and gasoline in ldv sector
2607          hdv_elas                Elasticity between bioenergy and gasoline in hdv sector ;
2608   
2609      esub_nr(r,ff)      = 0;
2610      pref_nr(r,ff)      = 1;
2611   
2612      esub_bio(r,bio)    = 0;
2613      pref_bio(r,bio)    = 1;
2614   
2615      esub_gen(r,gentype)= 0.1 ;
2616      pref_gen(r,i)      = 1;
2617   
2618      ele_elas           = 1;
2619   
2620      eva_elas("conv")   = 0.4;
2621      eva_elas(s)        = 1.0;
2622      eva_elas(s)$trnv(s)= 0.1;
2623   
2624      ae_elas(s)         = 0.3;
2625      ae_elas(lu)        = 0.3;
2626   
2627      enoe_elas(s)       = 0.5;
2628      enoe_elas(lu)      = 0.5;
2629      enoe_elas(s)$trnv(s)= 0.1;
2630   
2631      en_elas(s)         = 1.0;
2632      en_elas(lu)        = 1.0;
2633      en_elas("auto")    = 0.1;
2634      en_elas(hdv)       = 0.1;
2635   
2636      er_elas(r,lu)      = 0.6;
2637      er_elas(r,s)       = 0.6;
2638      er_elas('bra','gron')   = 0.1;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 53
ADAGE Model - Set Definition
C o m p i l a t i o n


2639      er_elas("usa","wht")    = 0.2;
2640      er_elas("usa","corn")   = 0.6;
2641      er_elas("usa","ocr")    = 0.7;
2642   
2643      erva_elas(s)       = 1.0;
2644      erva_elas(lu)      = 1.0;
2645   
2646      cog_elas(conv)     = 1;
2647      co_elas(conv)      = 0.3;
2648   
2649      mm_elas(i)         = 5;
2650      mm_elas(agr)       = 0.5;
2651      mm_elas("ele")     = 0.5;
2652   
2653      dm_elas(i)         = 4;
2654      dm_elas(agr)       = 0.3;
2655      dm_elas("ele")     = 0.3;
2656   
2657      shagp(i,t)$(not trnv(i))= 0.5* eva_elas(i)/(card(t)-1);
2658      eva_elast(i,t)$(not trnv(i))= eva_elas(i)+ shagp(i,t)*(ord(t)-1);
2659   
2660      esub_flnd('crop')  = 0.26;
2661      esub_flnd('liv')   = 0.30;
2662      esub_flnd('frs')   = 0.15;
2663      esub_flnd(nat)     = 0.15;
2664   
2665      ldv_elas           = 0.25 ;
2666      hdv_elas           = 0.25 ;
2667   
2668  **--- set resource supply elasticities ---**
2669  parameter
2670          eta_nr          Supply elasticity for natural resources
2671          eta_rnw         Supply elasticity for renewable generation
2672          shr_nr          Share of resource in natural resource production
2673          shr_rnw         Share of resource in renewable generation
2674          e_nr            Supply elasticity for natural resources
2675          e_rnw           Supply elasticity for renewable generation
2676          p_nr            Price natural resources
2677          p_rnw           Price elasticity for renewable generation   ;
2678   
2679      eta_nr(r,ff)       = 2;
2680      eta_rnw(r,rnw)     = 1;
2681   
2682   
2683  **----- Add Leisure Time and Balance Incomes -----**
2684  parameter
2685          cl0(r,i)                Total consumption plus leisure time (welfare)
2686          sigma_cl                Elasticity of substitution between consumption and leisure
2687          leis0(r,hh)             Leisure time
2688          lse_comp                Static compensated labor supply elasticity      /0.40/
2689          lse_uncomp              Static uncompensated labor supply elasticity    /0.15/
2690          theta_l                 Share of leisure in utility
2691          bopdef0(r,hh)           Balance of payments deficit in 2010
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 54
ADAGE Model - Set Definition
C o m p i l a t i o n


2692          bopdeft0(r,hh,t)        Balance of payments deficit in 2010~2050    ;
2693   
2694      theta_l(r,hh)     = lse_comp - lse_uncomp;
2695      leis0(r,hh)       = c0(r,hh)   * (theta_l(r,hh)/(1-theta_l(r,hh)));
2696      le0(r,hh)         = le0_10_(r,hh,"2010")   + leis0(r,hh)  ;
2697      sigma_cl(r,hh)    = ( lse_comp/(1-theta_l(r,hh)) ) * ( (le0(r,hh)   - leis0(r,hh)  ) / leis0(r,hh)  );
2698   
2699      c0(r,"hh") =   sum(g$(not trn(g)),cd0(r,"hh",g)*(1+tc(r,g)))
2700                   + sum(trn, cd0(r,"hh",trn))
2701                   + cd0(r,"hh","house");
2702   
2703      cl0(r,hh) = c0(r,hh)   + leis0(r,hh)  ;
2704  display cl0;
2705   
2706  **---- Net Crude Oil Trade ----**
2707  * redefine CRU trade in net terms since it is assumed to be homogeneous good (avoid big trade swings)
2708  * (don't have tariffs/transport costs for CRU at moment)
2709  *  turning off trade adjustments for crude
          x0(r,"CRU","ftrd")      = 0;
          m0(r,"CRU","ftrd")      = 0;
          x0(r,"CRU","ftrd")      =  max( (y0(r,"CRU","new")   -ed0(r,"CRU","feed","OIL","new")  ), 0);
          m0(r,"CRU","ftrd")      = -min( (y0(r,"CRU","new")   -ed0(r,"CRU","feed","OIL","new")  ), 0);
       
          ex0_btu(r,"cru") = 0;
          em0_btu(r,"cru") = 0;
          ex0_btu(r,"cru") =  max( (prod0(r,"CRU")   -sum((use,i),btu0(r,"cru",use,i)) ), 0);
          em0_btu(r,"cru") = -min( (prod0(r,"CRU")   -sum((use,i),btu0(r,"cru",use,i))     ), 0);
2721   
2722  **CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2723  *             ----- Extant / Existing Production -----
2724  parameter
2725          clay(*,*)               Percentage of capital stock that is fixed;
2726   
2727  * Clay portion of putty-clay capital
2728      clay(r,s)$(y0(r,s,"new") and not agr(s))  = 0.5;
2729      clay(r,"ele")           = 0;
2730      clay(r,gentype)         = 5/6;
2731      clay(r,ff)              = 0;
2732      clay(r,hh)              = 0.5;
2733  * For transportation, consider the life of vehicle: ldv: 15 years; RodF and RodP: 30 year
2734      clay(r,"auto")          = 2/3;
2735      clay(r,autoafv)         = 2/3;
2736      clay(r,hdv)$(y0(r,hdv,"new"))  = 5/6;
2737      clay(r,hdvafv)          = 5/6;
2738   
2739      y0(r,i,"extant")$clay(r,i)                    = y0(r,i,"new")  ;
2740      y0(r,"omel","extant")$clay(r,"vol")           = y0(r,"omel","new")  ;
2741      y0(r,"ddgs","extant")$sum(ceth,clay(r,ceth))  = y0(r,"ddgs","new")  ;
2742   
2743      ed0(r,e,use,i,"extant")$clay(r,i)             = ed0(r,e,use,i,"new")  ;
2744      id0(r,j,i,"extant")$clay(r,i)                 = id0(r,j,i,"new")  ;
2745      ld0(r,i,"extant")$clay(r,i)                   = ld0(r,i,"new")  ;
2746      kd0(r,k,i,"extant")$clay(r,i)                 = kd0(r,k,i,"new")  ;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 55
ADAGE Model - Set Definition
C o m p i l a t i o n


2747      rd0(r,i,"extant")$sum(num,clay(num,i))        = rd0(r,i,"new")  ;
2748      hkd0(r,i,"extant")$clay(r,i)                  = hkd0(r,i,"new")  ;
2749      lnd0(r,i,"extant")$clay(r,i)                  = lnd0(r,i,"new")  ;
2750   
2751      ghg0(r,ghg,i,"extant")$clay(r,i)              = ghg0(r,ghg,i,"new");
2752      co20(r,j,use,i,"extant")$clay(r,i)            = co20(r,j,use,i,"new");
2753      ghgt0(r,ghg,i,"extant",t)$clay(r,i)           = ghgt0(r,ghg,i,"new",t);
2754      ghgt0(r,ghg,"ele","extant",t)                 = ghgt0(r,ghg,"ele","new",t);
2755   
2756      house0(r,i,"extant")$clay(r,i)                = house0(r,i,"new")  ;
2757      fuel0(r,"extant")$clay(r,"auto")              = fuel0(r,"new")  ;
2758      oev_valu0(r,s,"extant")                       = oev_valu0(r,s,"new");
2759   
2760      y0_10_(r,i,"extant",'2010')$clay(r,i)                    = y0(r,i,"extant")  ;
2761      y0_10_(r,"omel","extant",'2010')$clay(r,"vol")           = y0(r,"omel","extant")  ;
2762      y0_10_(r,"ddgs","extant",'2010')$sum(ceth,clay(r,ceth))  = y0(r,"ddgs","extant")  ;
2763      ed0_10_(r,e,use,i,"extant",'2010')$clay(r,i)             = ed0(r,e,use,i,"extant")  ;
2764      id0_10_(r,j,i,"extant",'2010')$clay(r,i)                 = id0(r,j,i,"extant")  ;
2765      ld0_10_(r,i,"extant",'2010')$clay(r,i)                   = ld0(r,i,"extant")  ;
2766      kd0_10_(r,k,i,"extant",'2010')$clay(r,i)                 = kd0(r,k,i,"extant")  ;
2767      rd0_10_(r,i,"extant",'2010')$sum(num,clay(num,i))        = rd0(r,i,"extant")  ;
2768      hkd0_10_(r,i,"extant",'2010')$clay(r,i)                  = hkd0(r,i,"extant")  ;
2769      lnd0_10_(r,i,"extant",'2010')$clay(r,i)                  = lnd0(r,i,"extant")  ;
2770      house0_10_(r,i,"extant",'2010')$clay(r,i)                = house0(r,i,"extant")  ;
2771      fuel0_10_(r,"extant",'2010')                             = fuel0(r,"extant")  ;
2772   
2773  display clay,y0,rnw0,kd0_10;
2774   
2775  *CCCCCCCCCCCCCCCCCCCCCCCCC Second part for Electricity generation modification  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2776      kd0(r,"va",i,v)$(y0_10(r,i,v,"2010") and extant(v) and (convrnw(i) or advee(i)) )
2777             = kd0_10(r,"va",i,v,"2010")+ rnw0_10(r,i,"new","2010")/(1+tk(r,"va",i));
2778   
2779      rnw0(r,i,v)$(y0_10(r,i,v,"2010") and new(v) and (convi(i) or rnw(i) or advee(i)))
2780             = 0.01*y0_10(r,i,v,"2010")    ;
2781   
2782      rnw0(r,i,v)$(y0_10(r,i,v,"2010") and extant(v) and (convi(i) or rnw(i) or advee(i)) )
2783             = 0    ;
2784   
2785      kd0(r,"va",i,v)$(y0(r,i,v) and  (convi(i) or rnw(i) or advee(i) ))
2786             =(   y0(r,i,v)* (1-ty(r,i))
2787               - sum(e, ed0(r,e,"fuel",i,v))
2788               - sum(g, id0(r,g,i,v)*(1+ti(r,g,i)))
2789               - ld0(r,i,v)*(1+tl(r,i))
2790               - rnw0(r,i,v))
2791              / (1+tk(r,"va",i));
2792   
2793      chk0_prod(r,i,v,'in')$(y0(r,i,v)   and gentype(i) )
2794          =   sum(e,ed0(r,e,"fuel",i,v))
2795            + sum(g,id0(r,g,i,v)*(1+ti(r,g,i)))
2796            + ld0(r,i,v)*(1+tl(r,i))
2797            + kd0(r,"va",i,v)*(1+tk(r,"va",i))
2798            + rnw0(r,i,v)  ;
2799   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 56
ADAGE Model - Set Definition
C o m p i l a t i o n


2800      chk0_prod(r,i,v,'out')$(y0(r,i,v)   and gentype(i) )
2801           = y0(r,i,v)*(1-ty(r,i));
2802      chk0_prod(r,i,v,'bal') =round((chk0_prod(r,i,v,'out')-chk0_prod(r,i,v,'in')),5);
2803  display chk0_prod;
2804   
2805  parameter afactor(r,*)   Value to make pcl in balance
2806  * this is the marginal value from model runs in pcl
2807  /   USA.HH           33.1254
2808      BRA.HH           -0.9367
2809      CHN.HH           -0.5955
2810      EUR.HH           -0.6720
2811      XLM.HH           -2.2258
2812      XAS.HH           -3.8629
2813      AFR.HH           -4.6590
2814      ROW.HH          -20.1735
2815  / ;
2816   
2817  * Implied income transfers among regions
2818      bopdef0(r,hh)
2819          = cl0(r,hh)
2820          + sum(k, inv0(r,k)  )
2821          + lstax(r,hh)
2822          - le0(r,hh)
2823          - land0(r)
2824          - sum(vnum, rd0(r,"frs",vnum)  )
2825          - sum((s,vnum), hkd0(r,s,vnum)  )
2826          - sum((e,v), rd0(r,e,v)  )
2827          - sum((gentype,v), rnw0(r,gentype,v)  )
2828          - sum((k,i,v)$(not vnum(v)), kd0(r,k,i,v)  *clay(r,i))
2829          - sum((k,i,vnum), kd0(r,k,i,vnum)  *(1-clay(r,i)))
2830          + afactor(r,"hh") ;
2831   
2832   
2833  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2834  **         Conversion Factors between monetary accounts and physical accounts
2835  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2836  parameter
2837          btua_conv       Energy conversion between dollar to btu in Armington (quad btu per billion dollars)
2838          btuprod_conv    Energy conversion between dollar to btu in production side (quad btu per billion dollars)
2839          btu_conv        Quad Btu (10**15 btu) per billion dollars in energy retail market
2840          btuim_conv      Energy conversion between dollar to btu in import side (quad btu per billion dollars)
2841          btuex_conv      Energy conversion between dollar to btu in export side (quad btu per billion dollars)
2842          btuen_conv      Energy conversion between dollar to btu in bilateral trade side (quad btu per billion dollars)
2843    ;
2844   
2845  * Conversion factor for production side
2846      btuprod_conv(r,i)$y0(r,i,"new") = prod0(r,i)/y0(r,i,"new");
2847   
2848  * Conversion factor for cobd is adjusted to calibrate exogenous yield to match EPA assumption
2849      btuprod_conv(r,"cobd")         = btuprod_conv(r,"sybd");
2850   
2851      btuprod_conv(r,advbio)         = btuprod_conv(r,"ceth");
2852      btuprod_conv(r,advbio)$(btuprod_conv(r,advbio)=0)= btuprod_conv(r,"scet");
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 57
ADAGE Model - Set Definition
C o m p i l a t i o n


2853      btuprod_conv(r,advbio)$(btuprod_conv(r,advbio)=0)= btuprod_conv(r,"weth");
2854      btuprod_conv("afr",advbio)$(btuprod_conv("AFR",advbio)=0)= btuprod_conv("USA",advbio);
2855   
2856  * Conversion factor for wholesale side: note here a0 is equal to sum of ewhl0
2857      btua_conv(r,e)$a0_10(r,e,"2010")
2858         = sum((use,i)$(not conv(i)),btu0_10(r,e,use,i,"2010"))/a0_10(r,e,"2010");
2859  ** for cobd, advbio, assume they are equal to producer price
2860      btua_conv(r,e)$(btua_conv(r,e)=0 and btuprod_conv(r,e))= btuprod_conv(r,e);
2861   
2862   
2863  * Conversion factor for retail side: disaggregated sectors such as RODF, RODP
2864      btu_conv(r,e,use,i)$sum(vnum(v), ed0_10(r,e,use,i,v,"2010"))
2865         = btu0_10(r,e,use,i,"2010") / sum(vnum(v), ed0_10(r,e,use,i,v,"2010"));
2866   
2867  * Conversion factor for retail side: aggregated sectors such as OTRN: weighted average from all transportation other than Auto
2868      btu_conv(r,e,use,i)$sum(vnum(v), ed0(r,e,use,i,v))
2869         = btu0(r,e,use,i) / sum(vnum(v), ed0(r,e,use,i,v));
2870   
2871      btu_conv(r,e,use,"house") =  btu_conv(r,e,use,"hh") ;
2872   
2873  * Conversion factor for retail side: electricity generation
2874      btu_conv(r,e,use,gentype)$sum(vnum(v), elegen_edt0(r,e,use,gentype,v,"2010"))
2875         = btu0(r,e,use,gentype) / sum(vnum(v), elegen_edt0(r,e,use,gentype,v,"2010"));
2876      btu_conv(r,e,use,gentype)$(btu_conv(r,e,use,gentype)=0)
2877         = sum(elefuelmap(e,gentype),btu_conv(r,e,use,"conv"));
2878   
2879  * Conversion factor for retail side: energy used in AFV:
2880      btu_conv(r,e,"fuel",Autoi)$(oil(e) or bio(e))  = btu_conv(r,e,"fuel","auto");
2881   
2882  * Allow conversion factors for AFVs same as their conventional technology instead of OTRN or other sectors
2883      btu_conv(r,e,"fuel",hdv)$(btu_conv(r,e,"fuel",hdv)=0 and bio(e))= btu_conv(r,e,"fuel","auto");
2884      btu_conv(r,e,"fuel",rodpi)= btu_conv(r,e,"fuel","RodP");
2885      btu_conv(r,e,"fuel",rodfi)= btu_conv(r,e,"fuel","RodF");
2886   
2887  * Assign Armington energy price to  energy used in transportation which is not available in AFV (note input price is pa(r,e)
2888      btu_conv(r,e,"fuel",Afv)$(ceg(e) )   = btua_conv(r,e);
2889   
2890  * Allow biofuel used in hdvi
2891      btu_conv(r,e,"fuel",i)$((bioe(e) or ad(e)) and (auto(i) or hdvi(i)))= btu_conv(r,e,"fuel","auto");
2892   
2893  * If new energy is added in biofuel production (example: gas in ceth and sybd later shown in corncoprod_cost0 and soybcoprod_cost0)
2894      btu_conv(r,e,"fuel",bio)$(btu_conv(r,e,"fuel",bio)=0)      = btua_conv(r,e);
2895      btu_conv(r,e,"fuel",advbio)$(btu_conv(r,e,"fuel",advbio)=0)= btua_conv(r,e);
2896   
2897      btu_conv(r,advbio,use,i)$(oev(i) or bioafv(i) or trnv(i))  = BTU_conv(r,"ceth",use,"auto");
2898      btu_conv(r,advbio,use,i)$((oev(i) or bioafv(i) or trnv(i)) and btu_conv(r,advbio,use,i)=0) = BTU_conv(r,"scet",use,"auto");
2899      btu_conv(r,advbio,use,i)$((oev(i) or bioafv(i) or trnv(i)) and btu_conv(r,advbio,use,i)=0) = BTU_conv(r,"weth",use,"auto");
2900      btu_conv(r,"Albd",use,i)$(oev(i) or bioafv(i) or trnv(i))   = BTU_conv(r,"sybd",use,"auto");
2901      btu_conv(r,"Albd",use,i)$((oev(i) or bioafv(i) or trnv(i)) and btu_conv(r,"Albd",use,i)=0) = BTU_conv(r,"plbd",use,"auto");
2902      btu_conv("afr",advbio,"fuel",i)$((oev(i) or bioafv(i) or trnv(i)) and btu_conv("afr",advbio,"fuel",i)=0 ) = BTU_conv("afr","oil","fuel","auto");
2903      btu_conv("afr",advbio,"fuel",i)$((oev(i) or bioafv(i) or trnv(i)) and btu_conv("afr",advbio,"fuel",i)=0 ) = sum(maptrn(j,i),BTU_conv("afr","oil","fuel",j));
2904   
2905      btu_conv(r,e,"fuel",i)$(bioe(e) and trni(i))= btu_conv(r,e,"fuel","auto");
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 58
ADAGE Model - Set Definition
C o m p i l a t i o n


2906      btu_conv(r,advbio,"fuel",i)$(trni(i))= btu_conv(r,advbio,"fuel","auto");
2907   
2908      btu_conv(r,"cobd","fuel",trni) = btua_conv(r,"cobd");
2909      btu_conv(r,"cobd","fuel",i)$(oev(i) or bioafv(i))  = btua_conv(r,"cobd");
2910   
2911      btuim_conv(r,e)$m0(r,e,"ftrd") = em0_btu(r,e)/m0(r,e,"ftrd");
2912      btuex_conv(r,e)$x0(r,e,"ftrd") = ex0_btu(r,e)/x0(r,e,"ftrd");
2913      btuen_conv(r,rr,e)$n0(r,rr,e)  = en0_btu(r,rr,e)/n0(r,rr,e);
2914   
2915  option  btu_conv:3:3:1
2916  display btua_conv,btu_conv,btua_conv,btuprod_conv;
2917   
2918   
2919  * CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
2920  parameter frs_shr    Forest production input share;
2921      frs_shr(r,"Y0") = y0(r,"frs","new");
2922      frs_shr(r,"K0")$y0(r,"frs","new") = (sum(k,kd0(r,k,"frs","new"))+hkd0(r,"frs","new"))/ y0(r,"frs","new");
2923      frs_shr(r,"L0")$y0(r,"frs","new") = ld0(r,"frs","new")/y0(r,"frs","new");
2924      frs_shr(r,"id_notrn0")$y0(r,"frs","new") = sum(g$(not trn(g)), id0(r,g,"frs","new"))/ y0(r,"frs","new");
2925      frs_shr(r,"id_trn0")$y0(r,"frs","new")   =  sum(g$(trn(g)), id0(r,g,"frs","new"))/ y0(r,"frs","new");
2926      frs_shr(r,"ed0")$y0(r,"frs","new")       = sum((e,use), ed0(r,e,use,"frs","new"))/ y0(r,"frs","new");
2927      frs_shr(r,"lnd0")$y0(r,"frs","new")      = lnd0(r,"frs","new")/ y0(r,"frs","new");
2928   
2929   
2930  parameter lnd_trend(r,*,t)      Trend of land productivity from GTAP;
2931      lnd_trend(r,lu,t)   = npp_trend(r,lu,t);
****                                    $140
**** LINE   2266 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
2932   
2933  * assume cropland productivity increase by 1% annually instead of 0.5%
2934      lnd_trend(r,"crop",t)$(ord(t)<=1)=1;
2935   
2936  loop(t$(ord(t)>=1),lnd_trend(r,"crop",t+1)$(ord(t)>=1)=lnd_trend(r,"crop",t)*(1+0.01)**5;);
2937   
2938  display lnd_trend;
2939   
2940  parameter bio_convert(r,*)     Biofuel converter (gallon per dry tonne) ;
      ** Based on information provided by EPA OTAQ, the conversion factors are as follows:
      Corn/Grain/Other Ethanol:   =  2.71 gallons per bushel
                                  = 20.66 lbs per gallon
       
      Soy Oil Biodiesel:          = 131.58 gallons per thousand lbs of soy oil
                                  = 7.6 lbs of soybean oil per gallon of biodiesel
       
      Sugarcane Ethanol:          = 153.57 gallons per dry metric tonne of sugar
                                  = 14.36 lbs of sugar (dry) per gallon
       
      Switchgrass Ethanol:        = 81.2 gallons per dry tonne of switchgrass
                                  = 24.63 lbs (dry) per gallon
       
      ** Here is the conversion from bushel to tonne for variety of ag products
      *Source: http://www.grains.org/index.php/buying-selling/conversion-factors
       Conversion Factors
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 59
ADAGE Model - Set Definition
C o m p i l a t i o n


      BARLEY (48 pound per bushel)
      Bushels Metric equivalent
      1 bushel = .024 short ton
      1 bushel = .021772 metric ton
      1 bushel = .021429 long ton
       
      Metric equivalent bushels
      1 short ton = 41.667 bushels
      1 metric ton = 45.9296 bushels
      1 long ton = 46.667 bushels
       
      CORN & SORGHUM (56 pound bushel)
      Bushels Metric equivalent
      1 bushel = .028 short ton
      1 bushel = .0254 metric ton
      1 bushel = .025 long ton
       
      Metric equivalent bushels
      1 short ton = 35.714 bushels
      1 metric ton = 39.368 bushels
      1 long ton = 40.0 bushels
       
      WHEAT & SOYBEANS (60 pound bushel)
      Bushels Metric equivalent
      1 bushel = .03 short ton
      1 bushel = .0272155 metric ton
      1 bushel = .0267857 long ton
       
      Metric equivalent bushels
      1 short ton = 33.333 bushels
      1 metric ton = 36.7437 bushels
      1 long ton = 37.333 bushels
2991  * assume : soybean contains around 19% soy oil by weight
2992  *          sugarcane contains 12%~22% (assume 20%) of sugar by weight
2993  * In Brazil, One hectare of sugar cane yields 4,000 litres of ethanol (1 litre=0.264172 gallon)
2994  ** The following are either from FASOM or consistent with FASOM
2995      bio_convert(r,"ceth") = 2.71 /.0254;
2996      bio_convert(r,"weth") = 2.56 /.0272155;
2997      bio_convert(r,"sybd") = 131.58/(1000/2204.62)*0.19;
2998      bio_convert(r,"scet") = 30.81;
2999      bio_convert(r,"sbet") = 30.81;
3000      bio_convert(r, advbio)= 81.2;
3001   
3002  table  swge_new(t,*)      Switchgrass feedstock yield and conversion cost to biofuel over the time
3003  * provided by Michael Shell from EPA during May 2017
3004         fdskyield         convyield            fdskcost      convcost
3005  *      "dryton fdsk/ha"  "gal/dryton fdsk"    "$/gal swge"  "$/gal swge"
3006  2010   15.00             70.90
3007  2015   15.00             70.90
3008  2020   15.46             70.90                1.0972        0.88
3009  2025   16.24             70.90                1.0972        0.88
3010  2030   17.07             73.78                1.0972        0.83
3011  2035   17.94             76.78                1.0972        0.79
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 60
ADAGE Model - Set Definition
C o m p i l a t i o n


3012  2040   18.86             79.90                1.0972        0.75
3013  2045   19.82             83.15                1.0972        0.72
3014  2050   20.83             86.53                1.0972        0.68
3015  ;
3016   
3017  Table swge_newnew(*,t)    SWGE feedstock yield over time (dry tons per ha)
3018  * Data is provided by Michael Shell from EPA on 2017-08-02. This is the national average switchgrass yield from BTS2016
3019  * Origional file is saved here: F:\Model\ADAGE\ADAGE_8r_agfrsres_tran_Link_20170727_CI_swgesybd\data\BTS2016 National Avg Switchgrass Yields_for ADAGE.xlsx
3020                 2015            2020            2025            2030            2035            2040            2045            2050
3021  fdskyield    12.347          12.977          13.639          14.335          15.066          15.835          16.643          17.491
3022  ;
3023   
3024      swge_newnew("fdskyield","2010") = swge_newnew("fdskyield","2015");
3025      swge_new(t,"fdskyield")         = swge_newnew("fdskyield",t);
3026   
3027      ag_yield0(r,"swge")      = swge_new("2010","fdskyield");
3028      bio_convert(r, advbio)   = swge_new("2010","convyield");
3029  *$/gal swge
3030      swge_new(t,"cost")       = swge_new(t,"fdskcost")+ swge_new(t,"convcost");
3031  *gal/ha
3032      swge_new(t,"yield")      = swge_new(t,"fdskyield")*swge_new(t,"convyield");
3033   
3034  Parameter
3035            bio_yield0(r,*)    Biofuel yield (gallons per ha)
3036            bio_area0(r,*)     Biofuel area in 2010 (mha)
3037            crp_area0(r,*)     Crop area excluding area used for biofuels in 2010;
3038   
3039      ag_yield0(r,crp)$q_land0(r,crp)=ag_tonn0(r,crp)/q_land0(r,crp);
3040   
3041  *                         tonne/ha            gal/tonne
3042      bio_yield0(r,"ceth")= ag_yield0(r,"corn")*bio_convert(r,"ceth");
3043      bio_yield0(r,"weth")= ag_yield0(r,"wht") *bio_convert(r,"weth");
3044      bio_yield0(r,"sybd")= ag_yield0(r,"Soyb")*bio_convert(r,"sybd");
3045   
3046  * Rapeseed yield:
3047  * http://www.esru.strath.ac.uk/EandE/Web_sites/02-03/biofuels/quant_biodiesel.htm
3048  *                       tonne/ha  oil content   conversion rate   density(gal/tonne)
3049      bio_yield0(r,"Rpbd") = 3         *0.4         *0.97             *300.1953;
3050   
3051  * http://en.wikipedia.org/wiki/Biodiesel
3052  *                         gal/acre   acre/ha
3053      bio_yield0(r,"plbd") = 508       *2.47105;
3054   
3055  *                         litres/hectare  gallon/litres
3056      bio_yield0(r,"scet")= 4000            *0.264172 ;
3057      bio_yield0(r,"sbet")= 4000            *0.264172 ;
3058  **                         gal/ton                  ton/ha
3059      bio_yield0(r,"Swge")=  bio_convert(r, "swge") * ag_yield0(r,"swge") ;
3060      bio_yield0(r,"msce")=  bio_convert(r, "msce") * ag_yield0(r,"msce") ;
3061      bio_yield0(r,"frwe")=  bio_convert(r, "frwe") * ag_yield0(r,"frwe") ;
3062   
3063  parameter bio_yldtrd(r,i,t)   Cellulosic energy biofuel yield growth rate by year (1 in 2010);
3064      bio_yldtrd(r,advbio,t) =swge_new(t,"yield")/swge_new("2010","yield");
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 61
ADAGE Model - Set Definition
C o m p i l a t i o n


3065   
3066  parameter
3067          ha_conv         Million hectares per billion dollars of land
3068          ton_conv        Million metric tons of crop per billion dollars of agricultural output
3069          gal_conv        Gallons per dollar of fuel at retail market
3070          gal_btu         Convert gallon to btu
3071          btu_gal         Million btu and gallon conversion (quad btu per billion gallon = million btu per gal)
3072          chk0_gal        Check biofuels used in auto industry (billion gallons);
3073   
3074      ha_conv(r,crp)$p_land0(r,crp)  = 1/p_land0(r,crp);
3075      ha_conv(r,lu)=1/p_land0(r,lu);
3076   
3077  * Some units conv: HHV is used
3078  *  1 barrel = 42 US gallons
3079  *  Gasoline = 5.253 MBtu/Barrel
3080  *  Ethanol  = 3.539 MBtu/Barrel
3081  *  biodiesel= 5.376 MBtu/Barrel
3082  * These lead to Ethanol   =  84,262  btu/ga
3083  *               Biodiesel = 128,000  btu/ga
3084   
3085      gal_conv(r,oil,"fuel",i) = (42 / 5.253) * btu_conv(r,oil,"fuel",i);
3086      gal_conv(r,ethl,"fuel",i)= (42 / 3.539) * btu_conv(r,ethl,"fuel",i) ;
3087      gal_conv(r,biod,"fuel",i)= (42 / 5.376) * btu_conv(r,biod,"fuel",i) ;
3088   
3089  * Some units conv: LHV is used
3090  *  1 barrel = 42 US gallons
3091  *  Gasoline = 5.10 MBtu/Barrel
3092  *  Ethanol  = 3.192 MBtu/Barrel
3093  *  biosiesel= 4.956 MBtu/Barrel
3094  * These lead to Ethanol   =  76,000 btu/ga
3095  *               Biodiesel = 118,000  btu/ga
3096   
3097      gal_conv(r,oil,"fuel",i) = (42 / 5.100) * btu_conv(r,oil,"fuel",i);
3098      gal_conv(r,ethl,"fuel",i)= (42 / 3.192) * btu_conv(r,ethl,"fuel",i) ;
3099      gal_conv(r,biod,"fuel",i)= (42 / 4.956) * btu_conv(r,biod,"fuel",i) ;
3100   
3101      gal_conv(r,advbio,use,i) = sum(ceth, gal_conv(r,ceth,use,i));
3102      gal_conv(r,advbio,use,i)$(gal_conv(r,advbio,use,i)=0) = gal_conv(r,"scet",use,i);
3103      gal_conv(r,advbio,use,i)$(gal_conv(r,advbio,use,i)=0) = gal_conv(r,"scet",use,i);
3104      gal_conv("afr",advbio,use,i) = gal_conv("CHN",advbio,use,i);
3105   
3106  *                           gallons /dollar              ha/gal
3107      ha_conv(r,advl) = gal_conv(r,"ceth","fuel","auto") /bio_yield0(r,advl)*1000;
3108   
3109      ha_conv(r,"Albd")    = ha_conv(r,"msce");
3110      ha_conv('BRA',advbio)= ha_conv('CHN',advbio);
3111      ha_conv('XAS',advbio)= ha_conv('CHN',advbio);
3112      ha_conv('AFR',advbio)= ha_conv('CHN',advbio);
3113      ha_conv('XLM',advbio)= ha_conv('CHN',advbio);
3114      ha_conv('EUR',advbio)= ha_conv('USA',advbio);
3115   
3116      btu_gal(e)$gal_conv('usa',e,"fuel","auto")=   BTU_conv("usa",e,"fuel","auto")/gal_conv('usa',e,"fuel","auto") ;
3117      btu_gal("rpbd") =  btu_gal("sybd") ;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 62
ADAGE Model - Set Definition
C o m p i l a t i o n


3118      btu_gal("Msce") =  btu_gal("ceth") ;
3119      btu_gal("advb") =  btu_gal("ceth") ;
3120   
3121      gal_btu(r,e,use,i)$gal_conv(r,e,use,i)=  btu_conv(r,e,use,i)/ gal_conv(r,e,use,i);
3122   
3123      chk0_gal(r,ethl) = gal_conv(r,ethl,"fuel","auto") * sum(vnum(v), ed0(r,ethl,"fuel","auto",v)  );
3124      chk0_gal(r,biod) = gal_conv(r,biod,"fuel","auto") * sum(vnum(v), ed0(r,biod,"fuel","auto",v)  );
3125   
3126  option gal_conv:3:3:1,btu_gal:5:0:1
3127  display ha_conv, btu_gal,GAL_conv,chk0_gal,gal_btu;
3128   
3129  Table  corncoprod_yield0(t,*)    Corn ethanol co-product yield over time in USA from EPA
3130  * Data is updated by EPA on 7-11-2022 for ceth
3131  *     "gal ceth/dryton corn"  "lb ddgs/gal ceth"      "kg cornoil/GJ ceth"       "lbs cornoil/gal cobd"
3132                ceth                   ddgs                     coil                        cobd
3133      2010                                                      1.13                        7.9
3134      2015      108.26                 5.98                     1.13                        7.9
3135      2020      109.44                 5.89                     1.17                        7.8
3136      2025      110.23                 5.82                     1.21                        7.7
3137      2030      112.30                 5.67                     1.21                        7.7
3138      2035      114.41                 5.53                     1.21                        7.6
3139      2040      116.56                 5.39                     1.20                        7.6
3140      2045      118.75                 5.25                     1.20                        7.6
3141      2050      120.51                 5.14                     1.20                        7.5
3142  ;
3143   
3144       corncoprod_yield0("2010","ceth") =   prod0("USA","ceth")/btu_gal("ceth")
3145                                          /(id0_10_("USA", "corn","ceth","new","2010")/ag_pric0("USA","corn") )
3146                                          *1000;
3147   
3148  *lbs ddgs/gal ceth               = lb/kg  * million tonne              /billion gal
3149      corncoprod_yield0("2010","ddgs") =2.20462 * ag_tonn0("usa","ddgs")  /(prod0("usa","ceth")/btu_gal("ceth") );
3150   
3151  * convert the unit as below:
3152  *   lb cornoil/gal ceth             kg/GJ ceth                 * lb/kg  /   mmbtu/gj  * mmbtu/gal ceth
3153      corncoprod_yield0(t,"coil")   = corncoprod_yield0(t,"coil")*2.20462 /  0.947086   * 0.07600;
3154  *  gal cobd/gal ceth                 lb cornoil/gal ceth           gal cobd/lb cornoil
3155      corncoprod_yield0(t,"cobd")   = corncoprod_yield0(t,"coil")/corncoprod_yield0(t,"cobd");
3156  *    gal of cobd/dryton of corn   =   gal cobd/gal ceth       * gal ceth/dryton of corn
3157      corncoprod_yield0(t,"cobd2")  = corncoprod_yield0(t,"cobd")*corncoprod_yield0(t,"ceth");
3158   
3159  * quad btu cobd/quad btu ceth
3160      corncoprod_yield0(t,"cobd3")  = corncoprod_yield0(t,"cobd")*btu_gal("cobd")/btu_gal("ceth");
3161   
3162  * ton of ddgs/gal ceth; ton of corn oil /gal ceth
3163      corncoprod_yield0(t,"Ddgs")   = corncoprod_yield0(t,"ddgs")/2204.62 ;
3164      corncoprod_yield0(t,"coil")   = corncoprod_yield0(t,"coil")/2204.62 ;
3165   
3166  * ton of ddgs/dry ton of corn; ton of corn oil/dry ton of corn
3167      corncoprod_yield0(t,"Ddgs2")   = corncoprod_yield0(t,"ddgs")*corncoprod_yield0(t,"ceth") ;
3168      corncoprod_yield0(t,"Coil2")   = corncoprod_yield0(t,"coil")*corncoprod_yield0(t,"ceth") ;
3169   
3170  * Final unit:
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 63
ADAGE Model - Set Definition
C o m p i l a t i o n


3171  *          ceth               ddgs                           ddgs2                     coil                     coil2
3172  *  "gal/dryton corn"       "ton of ddgs/gal ceth"         "ton of ddgs/dryton corn"   "ton of coil/gal ceth"   "ton of coil/dryton corn"
3173   
3174  *         cobd                cobd2                          cobd3
3175  *  "gal cobd/gal ceth"    "gal of cobd/dryton of corn"     "quad cobd/quad ceth"
3176   
3177  table soybcoprod_yield0(t,*)   soybean & soybean oil and soybean meal and soybean biodiesel yield over time in USA (from EPA)
3178  * Data is updated by EPA on 7-11-2022 for vol2sybd and sybd
3179  *    "tons soybeanoil/tons soybean" "tons soybeanmeal/tons soybean"  "gal sybd/ton soyboil"              "gal sybd/ton soybean"
3180              vol                            omel                          vol2sybd                               sybd
3181  2010        0.19                           0.80
3182  2015        0.19                           0.80                           286.31                                54.40
3183  2020        0.19                           0.80                           290.08                                55.12
3184  2025        0.19                           0.80                           293.95                                55.85
3185  2030        0.19                           0.80                           295.30                                56.11
3186  2035        0.19                           0.80                           296.66                                56.37
3187  2040        0.19                           0.80                           298.04                                56.63
3188  2045        0.19                           0.80                           299.43                                56.89
3189  2050        0.19                           0.80                           300.83                                57.16
3190  ;
3191  * The implied biofuel convertion rate from underlying GTAP data in 2010 is not consistent with new assumption from EPA.
3192  * For policy analysis, we let biofuel yield adjustment starts in 2015 so we can avoid huge effort to change the baseyear data but still get consistant results after 2010.
3193      soybcoprod_yield0("2010","sybd")     =    prod0("USA","sybd")/btu_gal("sybd")
3194                                             /(  id0_10_("USA", "soyb","sybd","new","2010")/ag_pric0("USA","soyb")
3195                                               + id0_10_("USA", "vol","sybd","new","2010")/ag_pric0("USA","vol")/soybcoprod_yield0("2010","vol") )
3196                                             *1000;
3197   
3198      soybcoprod_yield0(t,"vol2sybd")      = soybcoprod_yield0(t,"sybd")/soybcoprod_yield0(t,"vol");
3199   
3200  parameter bio_convert_trd(r,*,t)    Trend for biofuel conversion rate over time;
3201        bio_convert_trd(r,bio,t)$bio_convert(r,bio) = 1;
3202        bio_convert_trd(r,bio,t)$corncoprod_yield0(t,bio) = corncoprod_yield0(t,bio)/corncoprod_yield0("2010",bio);
3203        bio_convert_trd(r,bio,t)$soybcoprod_yield0(t,bio) = soybcoprod_yield0(t,bio)/soybcoprod_yield0("2010",bio);
3204        bio_convert_trd(r,advbio,t)                       = swge_new(t,"convyield")/swge_new("2010","convyield");
3205   
3206  option  corncoprod_yield0:6:1:1
3207  display bio_convert,bio_convert_trd, bio_yield0,corncoprod_yield0,soybcoprod_yield0;
3208   
3209  set  cs(i)     Goods involved in corn ethanol and soybean biodiesel updates
3210          /corn, soyb, ceth, vol, omel, ddgs/
3211       csbio(i) /ceth, sybd/;
3212   
3213  parameter id_ton(r,i,j)  Intermediate goods demand in metric ton;
3214      id_ton(r,cs,j)$ag_pric0(r,cs) = id0(r,cs,j,"new") / ag_pric0(r,cs);
3215   
3216  parameter yldconv(r,*,*,i)          Check yield and conversion rate for corn and soybean and their products
3217            yldconv1(r,*,*,i)         Check yield and conversion rate for corn and soybean and their products ;
3218   
3219      yldconv(r,"prod","mt",cs)       = ag_tonn0(r,cs);
3220      yldconv(r,"prod","bg",csbio)    = prod0(r,csbio)/btu_gal(csbio) ;
3221      yldconv(r,"Price","$1000/t",cs) = ag_pric0(r,cs);
3222      yldconv(r,"Price","$/gal",csbio)$gal_conv(r,csbio,"fuel","auto") = 1/gal_conv(r,csbio,"fuel","auto");
3223   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 64
ADAGE Model - Set Definition
C o m p i l a t i o n


3224      yldconv(r,"Yield","ton/ha",cs)  = ag_yield0(r,cs);
3225      yldconv(r,"Yield","ton/ton corn","ddgs")$id_ton(r,"corn","ceth")  = ag_tonn0(r,"ddgs")/id_ton(r,"corn","ceth");
3226      yldconv(r,"Yield","gal/ton corn","ceth")$id_ton(r,"corn","ceth")  = 1000*yldconv(r,"prod","bg","ceth") /id_ton(r,"corn","ceth");
3227   
3228   
3229      yldconv(r,"Yield","ton/ton soyb","vol")$(id_ton(r,"soyb","vol")+id_ton(r,"osdn","vol"))
3230           = ag_tonn0(r,"vol")/(id_ton(r,"soyb","vol")+id_ton(r,"osdn","vol"));
3231      yldconv(r,"Yield","ton/ton soyb","omel")$(id_ton(r,"soyb","vol")+id_ton(r,"osdn","vol"))
3232           = ag_tonn0(r,"omel")/(id_ton(r,"soyb","vol")+id_ton(r,"osdn","vol"));
3233      yldconv(r,"Yield","gal/ton soyb","sybd")$(id_ton(r,"soyb","sybd")+id_ton(r,"vol","sybd")/yldconv(r,"Yield","ton/ton soyb","vol"))
3234           = 1000*yldconv(r,"prod","bg","sybd") /(id_ton(r,"soyb","sybd")+id_ton(r,"vol","sybd")/yldconv(r,"Yield","ton/ton soyb","vol"));
3235   
3236      yldconv1(r,"Yield","gal/ton corn","ceth")=yldconv(r,"Yield","gal/ton corn","ceth");
3237      yldconv1(r,"Yield","gal/ton soyb","sybd") =yldconv(r,"Yield","gal/ton soyb","sybd");
3238  option yldconv:2:3:1
3239  display  yldconv;
3240   
3241   
3242  parameter  bau_gal       Initial biofuel consumption target in the bau case (same as in 2010) (billion gallons)
3243             bau_btu       Initial biofuel consumption target in the bau case (same as in 2010) (quad btu) ;
3244  * In the bau case, biofuels keep the level in 2010
3245      bau_gal(r,e,t)= gal_conv(r,e,"fuel","auto") * sum(vnum(v), ed0(r,e,"fuel","auto",v)  );
3246      bau_btu(r,e,t)= BTU_conv(r,e,"fuel","auto") * sum(vnum(v), ed0(r,e,"fuel","auto",v)  );
3247   
3248  display  bau_gal;
3249   
3250  set     biof(i)      Biofuels
3251          fdsk(i)      feedstock for sybd  /vol/
3252          fdskmap(i,j)  /ceth.corn,sybd.soyb,sybd.vol, vol.soyb/;
3253   
3254      biof("ceth")=yes;
3255      biof("sybd")=yes;
3256   
3257  parameter chk0_bioproc      Check biofuel production cost ($ per gallon)
3258            chk0_biofdsk;
3259  *$/gal
3260      chk0_bioproc(r,bio,"biofuel")$(biof(bio) and prod0(r,bio))
3261         = y0(r,bio,"new")*(1-ty(r,bio))
3262          /prod0(r,bio)*btu_gal(bio);
3263   
3264      chk0_bioproc(r,bio,"byprod")$(ceth(bio) and y0(r,bio,"new")*(1-ty(r,bio)))
3265         =  y0(r,"ddgs","new")*(1-ty(r,"ddgs"))
3266          /( y0(r,bio,"new")*(1-ty(r,bio)));
3267      chk0_bioproc(r,bio,g)$(fdskmap(bio,g) and y0(r,bio,"new")*(1-ty(r,bio)))
3268         = id0(r,g,bio,"new")*(1+ti(r,g,bio))
3269          / (y0(r,bio,"new")*(1-ty(r,bio)));
3270   
3271      chk0_bioproc(r,bio,g)$(biof(bio) and y0(r,bio,"new")*(1-ty(r,bio)))
3272         = id0(r,g,bio,"new")*(1+ti(r,g,bio)) / (y0(r,bio,"new")*(1-ty(r,bio)))    ;
3273   
3274      chk0_bioproc(r,bio,e)$(biof(bio) and y0(r,bio,"new")*(1-ty(r,bio)))
3275         = sum(use,ed0(r,e,use,bio,"new"))
3276          /( y0(r,bio,"new")*(1-ty(r,bio)));
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 65
ADAGE Model - Set Definition
C o m p i l a t i o n


3277   
3278      chk0_bioproc(r,bio,"labor")$(biof(bio) and y0(r,bio,"new")*(1-ty(r,bio)))
3279         = ld0(r,bio,"new")*(1+tl(r,bio))
3280          /( y0(r,bio,"new")*(1-ty(r,bio)));
3281   
3282      chk0_bioproc(r,bio,"capital")$(biof(bio) and y0(r,bio,"new")*(1-ty(r,bio)))
3283         =  sum(k,kd0(r,k,bio,"new")*(1+tk(r,k,bio)))
3284          /( y0(r,bio,"new")*(1-ty(r,bio)));
3285   
3286  *  $1000/ton
3287      chk0_biofdsk(r,s,"output")$fdsk(s) = y0(r,s,"new")*(1-ty(r,s))/ag_tonn0(r,s);
3288   
3289      chk0_biofdsk(r,s,"byprod")$(vol(s) and y0(r,s,"new")*(1-ty(r,s)))
3290         =  y0(r,"omel","new")*(1-ty(r,"omel"))
3291          / (y0(r,s,"new")*(1-ty(r,s)));
3292      chk0_biofdsk(r,s,g)$(fdskmap(s,g) and y0(r,s,"new")*(1-ty(r,s)))
3293         = id0(r,g,s,"new")*(1+ti(r,g,s))
3294          / (y0(r,s,"new")*(1-ty(r,s)));
3295   
3296      chk0_biofdsk(r,s,g)$(fdsk(s) and y0(r,s,"new")*(1-ty(r,s)))
3297         =  id0(r,g,s,"new")*(1+ti(r,g,s)) / (y0(r,s,"new")*(1-ty(r,s)));
3298      chk0_biofdsk(r,s,g)=round(chk0_biofdsk(r,s,g),5);
3299   
3300      chk0_biofdsk(r,s,e)$(fdsk(s) and y0(r,s,"new")*(1-ty(r,s)))
3301         =  sum(use,ed0(r,e,use,s,"new"))
3302          / (y0(r,s,"new")*(1-ty(r,s)));
3303      chk0_biofdsk(r,s,"labor")$(fdsk(s) and y0(r,s,"new")*(1-ty(r,s)))
3304         = ld0(r,s,"new")*(1+tl(r,s))
3305          / (y0(r,s,"new")*(1-ty(r,s)));
3306      chk0_biofdsk(r,s,"capital")$(fdsk(s) and y0(r,s,"new")*(1-ty(r,s)))
3307         = sum(k,kd0(r,k,s,"new")*(1+tk(r,k,s)))
3308          /( y0(r,s,"new")*(1-ty(r,s)));
3309   
3310      chk0_biofdsk(r,s,"capital")$(chk0_biofdsk(r,s,"capital")<0)
3311         = - chk0_biofdsk(r,s,"capital") ;
3312   
3313      chk0_biofdsk(r,s,"humancap")$(fdsk(s) and y0(r,s,"new")*(1-ty(r,s)))
3314         = hkd0(r,s,"new")*(1+thk(r,s))
3315          /( y0(r,s,"new")*(1-ty(r,s)));
3316      chk0_biofdsk(r,s,"land")$(fdsk(s) and y0(r,s,"new")*(1-ty(r,s)))
3317         = crp_lnd0(r,s,"new")*(1+tn(r,s))
3318          /( y0(r,s,"new")*(1-ty(r,s)));
3319   
3320  display chk0_bioproc,chk0_biofdsk;
3321   
3322  parameter     bio_shr0          Biofuel production input cost share in 2010 ($ per gal biofuel)
3323                vol_shr0          Vegetable oil and oil meal input cost share in 2010 ($ per ton of vol)
3324                bio_shr00         Biofuel share in 2010 (percentage) and used in report;
3325   
3326      bio_shr0(r,bio,"2010","y0")$(biof(bio) and prod0(r,bio))     =  y0(r,bio,"new")   / prod0(r,bio)*btu_gal(bio);
3327      bio_shr0(r,bio,"2010","ddgs")$(ceth(bio) and prod0(r,bio))   =  y0(r,"ddgs","new")/ prod0(r,bio)*btu_gal(bio);
3328      bio_shr0(r,bio,"2010",e)$(biof(bio) and prod0(r,bio))        =  sum(use,ed0(r,e,use,bio,"new"))/ prod0(r,bio)*btu_gal(bio);
3329      bio_shr0(r,bio,"2010",g)$(biof(bio) and prod0(r,bio))        =  id0(r,g,bio,"new")/ prod0(r,bio)*btu_gal(bio);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 66
ADAGE Model - Set Definition
C o m p i l a t i o n


3330      bio_shr0(r,bio,"2010","ld")$(biof(bio) and prod0(r,bio))     =  ld0(r,bio,"new")  / prod0(r,bio)*btu_gal(bio);
3331      bio_shr0(r,bio,"2010",k)$(biof(bio) and prod0(r,bio))        =  kd0(r,k,bio,"new")/ prod0(r,bio)*btu_gal(bio);
3332      bio_shr0(r,bio,"2010","hk")$(biof(bio) and prod0(r,bio))     =  hkd0(r,bio,"new") / prod0(r,bio)*btu_gal(bio);
3333   
3334      vol_shr0(r,s,"2010","y0")$(vol(s) )                      =  y0(r,s,"new")/ ag_tonn0(r,s);
3335      vol_shr0(r,s,"2010","omel")$(vol(s) and ag_tonn0(r,s))   =  y0(r,"omel","new")/ag_tonn0(r,s);
3336      vol_shr0(r,s,"2010",e)$(vol(s) and ag_tonn0(r,s))        =  sum(use,ed0(r,e,use,s,"new"))/ag_tonn0(r,s);
3337      vol_shr0(r,s,"2010",g)$(vol(s) and ag_tonn0(r,s))        =  id0(r,g,s,"new")/ ag_tonn0(r,s);
3338      vol_shr0(r,s,"2010","ld")$(vol(s) and ag_tonn0(r,s))     =  ld0(r,s,"new")  / ag_tonn0(r,s);
3339      vol_shr0(r,s,"2010",k)$(vol(s) and ag_tonn0(r,s))        =  kd0(r,k,s,"new")/ ag_tonn0(r,s);
3340      vol_shr0(r,s,"2010","hk")$(vol(s) and ag_tonn0(r,s))     =  hkd0(r,s,"new")/ ag_tonn0(r,s);
3341   
3342      bio_shr00(r,bio,i)$y0(r,bio,"new")   = bio_shr0(r,bio,"2010",i);
3343      bio_shr00(r,bio,"y0")$y0(r,bio,"new")= bio_shr0(r,bio,"2010","y0") ;
3344      bio_shr00(r,bio,"ld")$y0(r,bio,"new")= bio_shr0(r,bio,"2010","ld") ;
3345      bio_shr00(r,bio,k)$y0(r,bio,"new")   = bio_shr0(r,bio,"2010",k) ;
3346      bio_shr00(r,bio,"hk")$y0(r,bio,"new")= bio_shr0(r,bio,"2010","hk") ;
3347   
3348   
3349  display bio_shr0,bio_shr00, vol_shr0;
3350   
3351  *execute_unload  '.\data\bio_costshare.gdx', chk_bioproc,chk_biofdsk;
3352  *execute 'gdxxrw.exe .\data\bio_costshare.gdx o=.\data\bio_costshare.xlsx  par=chk_bioproc        rng=bioproc!a7         cdim=1'
3353  *execute 'gdxxrw.exe .\data\bio_costshare.gdx o=.\data\bio_costshare.xlsx  par=chk_biofdsk        rng=biofdsk!a7         cdim=1'
3354   
3355  table soybcoprod_cost0(t,*)    New soybean biodiesel production energy use and other non-energy non-feedstock cost over time in USA from EPA
3356  * Energy use includes energy used for refining and oilseed crushing
3357  *     "quad gas/quad sybd in refine"  "quad ele/quad sybd in refine" "quad gas/quad sybd in crush"  "quad ele/quad sybd in crush"         "$2010/gal sybd"      "$2010/gal sybd"
3358                          gas_ref                      ele_ref                   gas_cru                          ele_cru                         "id+ld"                    va
3359      2010
3360      2015                 0.058                        0.008                      0.123                           0.024                           0.530                     0.120
3361      2020                 0.058                        0.008                      0.123                           0.024                           0.500                     0.120
3362      2025                 0.058                        0.008                      0.123                           0.024                           0.480                     0.120
3363      2030                 0.058                        0.008                      0.123                           0.024                           0.474                     0.120
3364      2035                 0.058                        0.008                      0.123                           0.024                           0.468                     0.120
3365      2040                 0.058                        0.008                      0.123                           0.024                           0.462                     0.120
3366      2045                 0.058                        0.008                      0.123                           0.024                           0.457                     0.120
3367      2050                 0.058                        0.008                      0.123                           0.024                           0.451                     0.120
3368  ;
3369   
3370      soybcoprod_cost0(t,"gas")=   soybcoprod_cost0(t,"gas_ref")+ soybcoprod_cost0(t,"gas_cru");
3371      soybcoprod_cost0(t,"ele")=   soybcoprod_cost0(t,"ele_ref")+ soybcoprod_cost0(t,"ele_cru");
3372   
3373      soybcoprod_cost0(t,e)$btu_conv("usa",e,"fuel","sybd")
3374  *    $/gal                 = "quad ff/quad sybd"   /"quad ff/$billion"              *"quad sybd/billion gal"
3375                             =  soybcoprod_cost0(t,e)/btu_conv("usa",e,"fuel","sybd") * btu_gal("sybd") ;
3376   
3377      soybcoprod_cost0(t,e)$(btu_conv("usa",e,"fuel","sybd")=0 and soybcoprod_cost0(t,e))
3378  *    $/gal                 = "quad ff/quad sybd"   /"quad ff/$billion"              *"quad sybd/billion gal"
3379                             =  soybcoprod_cost0(t,e)/btua_conv("usa",e) * btu_gal("sybd") ;
3380   
3381      bio_shr0("usa","sybd",t,e)$(t.val>2010)  = soybcoprod_cost0(t,e);
3382      bio_shr0("usa","sybd",t,s)$(t.val>2010 and (not sameas(s,"soyb") and not sameas(s,"vol") and  not sameas(s,"vol")))
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 67
ADAGE Model - Set Definition
C o m p i l a t i o n


3383       = soybcoprod_cost0(t,"id+ld")
3384        *bio_shr0("usa","sybd","2010",s)
3385        /(sum(g$(not sameas(g,"soyb") and not sameas(g,"vol") and not sameas(g,"omel")),bio_shr0("usa","sybd","2010",g))+bio_shr0("usa","sybd","2010","ld"));
3386   
3387      bio_shr0("usa","sybd",t,"ld")$(t.val>2010)
3388           = soybcoprod_cost0(t,"id+ld")
3389            *bio_shr0("usa","sybd","2010","ld")
3390            /(sum(g$(not sameas(g,"soyb") and not sameas(g,"vol") and not sameas(g,"omel")),bio_shr0("usa","sybd","2010",g))+bio_shr0("usa","sybd","2010","ld"));
3391   
3392      bio_shr0("usa","sybd",t,"va")$(t.val>2010)
3393           = soybcoprod_cost0(t,"va") ;
3394   
3395      bio_shr0("usa","sybd",t,s)$(t.val>2010 and (sameas(s,"soyb") or sameas(s,"vol")) )
3396           = bio_shr0("usa","sybd","2010",s)*soybcoprod_yield0("2010","sybd")/soybcoprod_yield0(t,"sybd");
3397   
3398      bio_shr0("usa","sybd",t,"y0")$(t.val>2010)
3399           = bio_shr0("usa","sybd","2010","y0");
3400   
3401      bio_shr0("usa","sybd",t,"omel")$(t.val>2010)
3402           =  bio_shr0("usa","sybd",t,"soyb")/ag_pric0("usa","soyb")
3403             *soybcoprod_yield0(t,"omel")*ag_pric0("usa","omel")    ;
3404   
3405      bio_shr0("usa","sybd",t,"output_total")
3406           = bio_shr0("usa","sybd",t,"y0")+bio_shr0("usa","sybd",t,"omel");
3407   
3408      bio_shr0("usa","sybd",t,"input_total")
3409           =  sum(i$(not sameas(i,"omel")),bio_shr0("usa","sybd",t,i))
3410            + bio_shr0("usa","sybd",t,"va")
3411            + bio_shr0("usa","sybd",t,"ld")   ;
3412   
3413  parameter chk0_sybd           Check sybd cost;
3414      chk0_sybd(t) =1000/(   bio_shr0("usa","sybd",t,"soyb")/ag_pric0("usa","soyb")
3415                           + bio_shr0("usa","sybd",t,"vol")/ag_pric0("usa","vol")/0.19 );
3416  *display chk0_sybd;
3417   
3418  Table corncoprod_cost0(t,*)    New corn ethanol production energy use and other non-energy non-feedstock cost over the time in USA from EPA
3419  * Cost includes refining production cost for corn ethanol and corn oil, but not cost from corn oil to corn oil biodiesel
3420  *     "quad gas/quad ceth" "quad ele/quad ceth"    "$2010/gal ceth"      "$2010/gal ceth"
3421                gas              ele                  "id+ld"                 va
3422  2010
3423  2015         0.318            0.026                 0.340                  0.250
3424  2020         0.318            0.026                 0.330                  0.250
3425  2025         0.318            0.026                 0.310                  0.250
3426  2030         0.318            0.026                 0.306                  0.250
3427  2035         0.318            0.026                 0.302                  0.250
3428  2040         0.318            0.026                 0.299                  0.250
3429  2045         0.318            0.026                 0.295                  0.250
3430  2050         0.318            0.026                 0.291                  0.250
3431  ;
3432  * Energy cost is converted to $/gal of ceth
3433      corncoprod_cost0(t,e)$btu_conv("usa",e,"fuel","ceth")
3434  *    $/gal                 = "quad ff/quad ceth"  /"quad ff/$billion"              *"quad ceth/billion gal"
3435                             = corncoprod_cost0(t,e)/btu_conv("usa",e,"fuel","ceth") * btu_gal("ceth") ;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 68
ADAGE Model - Set Definition
C o m p i l a t i o n


3436   
3437      corncoprod_cost0(t,e)$(btu_conv("usa",e,"fuel","ceth")=0 and corncoprod_cost0(t,e))
3438  *    $/gal                 = "quad ff/quad ceth"  /"quad ff/$billion" *"quad ceth/billion gal"
3439                             = corncoprod_cost0(t,e)/btua_conv("usa",e) * btu_gal("ceth") ;
3440   
3441      bio_shr0("usa","ceth",t,e)$(t.val>2010)= corncoprod_cost0(t,e);
3442      bio_shr0("usa","ceth",t,s)$(t.val>2010 and (not sameas(s,"corn") and not sameas(s,"ddgs")))
3443           = corncoprod_cost0(t,"id+ld")
3444            *bio_shr0("usa","ceth","2010",s)
3445            /(sum(g$(not sameas(g,"corn") and not sameas(g,"ddgs")),bio_shr0("usa","ceth","2010",g))+bio_shr0("usa","ceth","2010","ld"));
3446   
3447      bio_shr0("usa","ceth",t,"ld")$(t.val>2010)
3448           = corncoprod_cost0(t,"id+ld")
3449            *bio_shr0("usa","ceth","2010","ld")
3450            /(sum(g$(not sameas(g,"corn") and not sameas(g,"ddgs")),bio_shr0("usa","ceth","2010",g))+bio_shr0("usa","ceth","2010","ld"));
3451   
3452      bio_shr0("usa","ceth",t,"va")$(t.val>2010)
3453       = corncoprod_cost0(t,"va") ;
3454   
3455      bio_shr0("usa","ceth",t,"corn")$(t.val>2010)
3456           = bio_shr0("usa","ceth","2010","corn")* corncoprod_yield0("2010","ceth")/corncoprod_yield0(t,"ceth");
3457   
3458      bio_shr0("usa","ceth",t,"ddgs")$(t.val>2010)
3459           = bio_shr0("usa","ceth","2010","ddgs")* corncoprod_yield0(t,"ddgs")/corncoprod_yield0("2010","ddgs");
3460   
3461      bio_shr0("usa","ceth",t,"y0")$(t.val>2010)
3462           = bio_shr0("usa","ceth","2010","y0");
3463   
3464  * Assume cobd cost structure is same as sybd  and should be added to each of the input items above.
3465      bio_shr0("usa","ceth",t,"cobd")$(t.val>2010)
3466           =    bio_shr0("USA","sybd","2010","y0")*corncoprod_yield0(t,"cobd");
3467   
3468      bio_shr0("usa","ceth",t,e)$(t.val>2010)
3469           =  bio_shr0("usa","ceth",t,e)
3470             +bio_shr0("USA","sybd",t,e)*corncoprod_yield0(t,"cobd");
3471   
3472      bio_shr0("usa","ceth",t,s)$(t.val>2010 and (not sameas(s,"corn") and not sameas(s,"vol") and not sameas(s,"soyb")))
3473           =  bio_shr0("usa","ceth",t,s)
3474             +bio_shr0("USA","sybd",t,s)*corncoprod_yield0(t,"cobd");
3475   
3476      bio_shr0("usa","ceth",t,"ld")$(t.val>2010)
3477           =  bio_shr0("usa","ceth",t,"ld")
3478             +bio_shr0("USA","sybd",t,"ld")*corncoprod_yield0(t,"cobd");
3479   
3480      bio_shr0("usa","ceth",t,"va")$(t.val>2010)
3481           =  bio_shr0("usa","ceth",t,"va")
3482             +bio_shr0("USA","sybd",t,"va")*corncoprod_yield0(t,"cobd");
3483   
3484      bio_shr0("usa","ceth",t,"output_total")
3485           = bio_shr0("usa","ceth",t,"y0")+bio_shr0("usa","ceth",t,"ddgs")+bio_shr0("usa","ceth",t,"cobd");
3486   
3487      bio_shr0("usa","ceth",t,"input_total")
3488           =  sum(i$(not sameas(i,"ddgs") and not sameas(i,"cobd")),bio_shr0("usa","ceth",t,i))
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 69
ADAGE Model - Set Definition
C o m p i l a t i o n


3489            + bio_shr0("usa","ceth",t,"va")
3490            + bio_shr0("usa","ceth",t,"ld")   ;
3491   
3492  display corncoprod_cost0,bio_shr0;
3493   
3494   
3495  parameter f_bio         Flag to activate the change of input and output cost data in USA for ceth & sybd & swge
3496            chg_bio       Difference of input and output in ceth and sybd in USA
3497            chg_biot      Difference of input and output in ceth and sybd in USA over time;
3498      f_bio(r,bio)         = 0;
3499      chg_bio(r,bio,i,v)   = 0;
3500      chg_bio(r,bio,k,v)   = 0;
3501      chg_bio(r,bio,"ld",v)= 0;
3502      chg_bio(r,bio,"hk",v)= 0;
3503      chg_bio(r,bio,"y0",v)= 0;
3504   
3505      chg_biot(r,bio,t,"y0")$csbio(bio)=  prod0(r,bio)/btu_gal(bio)*( bio_shr0(r,bio,t,"y0")- bio_shr0(r,bio,"2010","y0"));
3506      chg_biot(r,bio,t,i)$csbio(bio)   =  prod0(r,bio)/btu_gal(bio)*( bio_shr0(r,bio,t,i)   - bio_shr0(r,bio,"2010",i));
3507      chg_biot(r,bio,t,e)$csbio(bio)   =  prod0(r,bio)/btu_gal(bio)*( bio_shr0(r,bio,t,e)   - bio_shr0(r,bio,"2010",e)) ;
3508   
3509      chg_biot(r,bio,t,k)$csbio(bio)   =  prod0(r,bio)/btu_gal(bio)*( bio_shr0(r,bio,t,k)   - bio_shr0(r,bio,"2010",k));
3510      chg_biot(r,bio,t,"ld")$csbio(bio)=  prod0(r,bio)/btu_gal(bio)*( bio_shr0(r,bio,t,"ld")- bio_shr0(r,bio,"2010","ld"));
3511      chg_biot(r,bio,t,"hk")$csbio(bio)=  prod0(r,bio)/btu_gal(bio)*( bio_shr0(r,bio,t,"hk")- bio_shr0(r,bio,"2010","hk"));
3512   
3513  display prod0,btu_gal,y0,chg_biot;
3514   
3515  set             cornddg(i)       /corn, ddgs/;
3516   
3517  parameter       ddgs4corn        Lbs of corn displaced by one lb of DDGS for livestock feed  /1.125/ ;
3518  parameter       alfa0(r,i,t)     Factor used to reflect yield growth rate especially DDGS (used in the loop)
3519                  alfa(r,i)        Factor used to reflect yield growth rate especially DDGS (used in the loop)
3520                  idt_val(r,*,t)   Corn and DDGS demand in feedstock of livestock sector ($billion) (used in the loop)
3521                  idt_ton(r,*,t)   Corn and DDGS demand in feedstock of livestock sector (million tonne) (used in the loop);
3522   
3523  parameter
3524          feed0
3525          advswtch                Switch on advanced biofuels
3526          advbiomkup              Cost markup on advanced biofuels
3527          advbiocoy0              Coproduct in advanced biofuels
3528          advbiolnd0              Land inputs to advanced biofuels
3529          advbiold0               Labor inputs to advanced biofuels
3530          advbiokd0               Capital inputs to advanced biofuels
3531          advbioid0               Intermediate inputs to advanced biofuels
3532          advbioed0               Energy inputs to advanced biofuels
3533          advbio_t                Total inputs
3534  ;
3535   
3536      feed0(r,liv,v)
3537         =  sum(crp, id0(r,crp,liv,v)  *pid0(r,crp,liv))
3538          + sum(byprod, id0(r,byprod,liv,v)  )
3539          + sum(ofd, id0(r,ofd,liv,v)  *pid0(r,ofd,liv));
3540   
3541      advswtch(r,i,v)                 = no;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 70
ADAGE Model - Set Definition
C o m p i l a t i o n


3542      advbiomkup(r,i)                 = 1;
3543   
3544  * Miscathus: adapted from Purdue paper
3545      advbiolnd0(r,"msce")            = 0.045;
3546      advbiold0(r,"msce")             = 0.143;
3547      advbiokd0(r,"va","msce")        = 0.532;
3548      advbioid0(r,"eim","msce")       = 0.078;
3549      advbioid0(r,"rodf","msce")      = 0.073;
3550      advbioid0(r,"srv","msce")       = 0.061;
3551      advbioed0(r,"ele","msce")       = 0.034;
3552      advbioed0(r,"gas","msce")       = 0.034;
3553   
3554  * Algae advanced biodiesel
3555  *  Updated in 1-21-2016
3556  *  Source: http://www.biofuelsdigest.com/bdigest/2014/10/13/where-are-we-with-algae-biofuels/
3557      advbiolnd0(r,"Albd")            = 0.057;
3558      advbiold0(r,"Albd")             = 0.080;
3559      advbiokd0(r,"va","Albd")        = 0.655;
3560      advbioid0(r,"eim","Albd")       = 0.129;
3561      advbioid0(r,"rodf","Albd")      = 0.031;
3562      advbioid0(r,"srv","Albd")       = 0.002;
3563      advbioed0(r,"ele","Albd")       = 0.001;
3564      advbioed0(r,"gas","Albd")       = 0.045;
3565   
      * Cassava ethanol in Thailand and China:
        Cost of cassava production per ha
                                                           Unit        Thailand      China
      Yield                                                ton/ha       23.4         20
      Price                                                $/ton        17.73        26.03
      Revenue                                              $/ha        414.882      520.6
      labor cost                                           $/ha        167.18       167.4
      other production cost:
      fertilizer, chemical, cutting, transportation        $/ha        198.73       260.22
      capital cost                                         $/ha         48.89        94.94
      Total cost                                           $/ha         414.8       522.56
       
      Aggregated production cost from cassava production and ethanol production ($/ha)
                     Thailand       China
      Land               187        125
      Labor              215        182
      Capital            301        185
      ele                 92        18
      gas                 92        18
      service             54        40
      Transportation     100        95
      Chemical           255        608
      Total Cost        1296        1271
       
      * Cost of cassava ethanol: $1.703/gal
          advbiolnd0(r,"cave")            = 0.0983;
          advbiold0(r,"cave")             = 0.1428;
          advbiokd0(r,"va","cave")        = 0.1458;
          advbioid0(r,"eim","cave")       = 0.4783;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 71
ADAGE Model - Set Definition
C o m p i l a t i o n


          advbioid0(r,"rodf","cave")      = 0.0747;
          advbioid0(r,"srv","cave")       = 0.0311;
          advbioed0(r,"ele","cave")       = 0.0144;
          advbioed0(r,"gas","cave")       = 0.0144;
       
      * Cost of sweet sorghum ethanol: $1.896/gal
          advbiolnd0(r,"sghe")            = 0.0278;
          advbiold0(r,"sghe")             = 0.1633;
          advbiokd0(r,"va","sghe")        = 0.4671;
          advbioid0(r,"eim","sghe")       = 0.2194;
          advbioid0(r,"rodf","sghe")     = 0.0305;
          advbioid0(r,"srv","sghe")       = 0.0435;
          advbioed0(r,"ele","sghe")       = 0.0310;
          advbioed0(r,"oil","sghe")       = 0.0174;
3611   
3612  * Corn stover
3613  *  Cost: $0.73/gal from  http://www.nrel.gov/docs/fy02osti/32438.pdf
3614  *  Cost: $3.51/gal from FASOM and subsidies around $0.15/gal varying by state
3615  *  Cost is averaged from these two sources:(0.73+3.51)/2 = $2.12/gal
3616      advbiold0(r,"ArsE")             = 0.0802;
3617      advbiokd0(r,"va","ArsE")        = 0.4048;
3618      advbioid0(r,"eim","ArsE")       = 0.3330-0.0311;
3619      advbioid0(r,"rodf","ArsE")      = 0.1549;
3620      advbioid0(r,"srv","ArsE")       = 0.0311;
3621      advbioed0(r,"ele","ArsE")       = 0.0271/2;
3622      advbioed0(r,"gas","ArsE")       = 0.0271/2;
3623   
3624  *Forest residue
3625  * Cost: $5.38/gal oil equivalent from FASOM
3626      advbiold0(r,"FrsE")             = 0.0882;
3627      advbiokd0(r,"va","FrsE")        = 0.4450;
3628      advbioid0(r,"eim","FrsE")       = 0.3660-0.0435;
3629      advbioid0(r,"rodf","FrsE")      = 0.0711;
3630      advbioid0(r,"srv","FrsE")       = 0.0435;
3631      advbioed0(r,"ele","FrsE")       = 0.0297/2;
3632      advbioed0(r,"oil","FrsE")       = 0.0297/2;
3633   
3634  * Forest pulpwood
3635  *  Cost: $5.48/gal oil equivalent from FASOM
3636  *  Assumption to calculate the land as below:
3637  *  Pulpwood yield:  http://www.sfrc.ufl.edu/Extension/FFSnl/ffsnl34e.htm
3638  *                  harvested at age 20-25, yield  30 cords per acre
3639  *  Pulpwood volume-weight conversion: table 1 in http://msucares.com/pubs/publications/p2244.pdf
3640  *                  pulpwood: 2.6 tons/cord
3641  *  Unit conversion from wet ton to dry ton:
3642  *                  average wood: 0.5
3643  *  Pulpwood ethanol yield in FASOM: 79.1 gal ethnaol / dry ton
3644  *  Unit conversion from acre to hecter: 0.404686 ha/acre ;
3645  *                  from 1 gal ethanol to gallon of oil equivalent: 76000/115400 =0.65858
3646  *  Thus the ethanol yield from pulpwood = 30*2.6*0.5*79.1 gal ethnaol/acre = 3084.9 ethanol gal /acre
3647  *                                      = 30*2.6*0.5*79.1 *0.65858 /0.404686 gal oil eqvi /ha = 5020.32 gal oil eqvi /ha
3648  *  Land cost: land value per ha / ethanol yield in USA: = 0.024*1000/5020.32 $/gal = 0.00478 $/gal
3649  *  Land cost share in USA:  0.00478*25 years /5.48 = 25*0.00087
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 72
ADAGE Model - Set Definition
C o m p i l a t i o n


3650   
3651      advbiolnd0(r,"FrwE")            = 1000*p_land0("USA","frs")/5020.32/5.48*25;
3652      advbiold0(r,"FrwE")             = 0.0865;
3653      advbiokd0(r,"va","FrwE")        = 0.4363-advbiolnd0(r,"FrwE");
3654      advbioid0(r,"eim","FrwE")       = 0.3589-0.0435;
3655      advbioid0(r,"rodf","FrwE")      = 0.0891;
3656      advbioid0(r,"srv","FrwE")       = 0.0435;
3657      advbioed0(r,"ele","FrwE")       = 0.0292/2;
3658      advbioed0(r,"oil","FrwE")       = 0.0292/2;
3659   
3660      tn(r,advbio)            = tn(r,"ocr");
3661      tl(r,advbio)            = tl(r,"ocr");
3662      tk(r,"va",advbio)       = tk(r,"va","ocr");
3663   
3664      plnd0(r,advbio)         = 1 + tn(r,advbio);
3665      pld0(r,advbio)          = 1 + tl(r,advbio);
3666      pkd0(r,"va",advbio)     = 1 + tk(r,"va",advbio);
3667   
3668  * Check input share = 1
3669      advbio_t(r,advbio)=   advbiolnd0(r,advbio)+advbiold0(r,advbio)+advbiokd0(r,"va",advbio)
3670                          + advbioid0(r,'eim',advbio)+ advbioid0(r,'rodf',advbio)+ advbioid0(r,'srv',advbio)
3671                          + sum(e,advbioed0(r,e,advbio));
3672  option    advbio_t:6:1:1
3673  display  "before", advbiolnd0,  advbiold0,advbiokd0,advbioid0,advbioed0,advbio_t;
3674   
3675   
3676  set   advb_initem     Input items in advb /land, va, ld, eim, rodf,otrn,  srv, ele, gas, oil /;
3677   
3678  Table shr_feedstock   Proportion of input cost in feedstock production in terms to the overall input cost in 2010
3679  * the 1- shr_feedstock will be the proportion for biofuel production cost share
3680  * the data is come from "cassava%sweet soyghum & agfors residue ethanol production.xlsx"
3681               Swge          MscE          ArsE          FrsE          FrwE
3682  land       1.0000        1.0000        0.0000        0.0000        1.0000
3683  va         0.3929        0.3929        0.5149        0.5149        0.5149
3684  ld         0.6855        0.6855        0.3878        0.3878        0.3878
3685  eim        0.8645        0.8645        0.1584        0.1584        0.1584
3686  RodF       0.8826        0.8826        1.0000        1.0000        1.0000
3687  Srv        0.5979        0.5979        0.3746        0.3746        0.3746
3688  ele        0.0357        0.0255        0.0000        0.0000        0.0000
3689  gas        0.0357        0.0255        0.0000        0.0000        0.0000
3690  Oil        0.0000        0.0000        0.0000        0.0000        0.0000
3691  ;
3692   
3693  * The following data for swge is updated by Michael Shell from EPA
3694  Table shr_feedstock_sw  Proportion of input cost in swtichgrass feedstock production in terms to the overall input cost in 2010
3695             Swge
3696  land      1.0000
3697  va        0.5686
3698  ld        0.7589
3699  eim       0.1519
3700  RodF      1.0000
3701  Srv       0.0792
3702  ele       0.0000
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 73
ADAGE Model - Set Definition
C o m p i l a t i o n


3703  ;
3704   
3705      shr_feedstock(advb_initem,"swge") = shr_feedstock_sw(advb_initem,"swge");
3706  * swge: production of switch grass feedstock cost:$1.097/gal ;
3707  *       conversion cost from feedstock to biofuel: $0.878/gal
3708  *       electricity credit from biofuel production: $0.112/gal
3709  *       total combined biofuel cost: 1.10+0.88-0.11 = $1.863/gal;
3710  * here biofuel production cost is normalized to 1, so electricity coproduct credit share = 0.112/1.863 =0.06005
3711   
3712      advbiocoY0(r,"swge")            = 0.06005 ;
3713      advbiolnd0(r,"swge")            = 0.18256 ;
3714      advbiold0(r,"swge")             = 0.17848 ;
3715      advbiokd0(r,"va","swge")        = 0.30036 ;
3716      advbioid0(r,"eim","swge")       = 0.27134 ;
3717      advbioid0(r,"rodf","swge")      = 0.05300 ;
3718      advbioid0(r,"srv","swge")       = 0.07432 ;
3719   
3721   
3722  parameter
3723          fdsklnd0              Land inputs to advanced biofuel feedstock production
3724          fdskld0               Labor inputs to advanced biofuel feedstock production
3725          fdskkd0               Capital inputs to advanced biofuel feedstock production
3726          fdskid0               Intermediate inputs to advanced biofuel feedstock production
3727          fdsked0               Energy inputs to advanced biofuel feedstock production  ;
3728   
3729      fdsklnd0(r,advbio)  = advbiolnd0(r,advbio)  *shr_feedstock("land",advbio);
3730      fdskld0(r,advbio)   = advbiold0(r,advbio)   *shr_feedstock("ld",advbio);
3731      fdskkd0(r,k,advbio) = advbiokd0(r,k,advbio) *shr_feedstock(k,advbio);
3732      fdskid0(r,s,advbio) = advbioid0(r,s,advbio) *shr_feedstock(s,advbio);
3733      fdsked0(r,e,advbio) = advbioed0(r,e,advbio) *shr_feedstock(e,advbio);
3734  display fdsklnd0,fdskld0,fdskkd0,fdskid0,fdsked0;
3735   
3736  Table advfdCost(*,*)        Advanced biomass feedstock cost in 2015 in advanced biofuel production (cost is in $ per gal oil equivalent)
3737            cost     share
3738  * Swge    1.159    0.29231
3739   Swge     1.097    0.58890
3740   Msce     1.009    0.34906
3741   ArsE     0.744    0.15493
3742   FrsE     0.427    0.07109
3743   FrwE     0.562    0.08914
3744   Albd     7.230    0.68143
3745  ;
3746   
3747  * Only new swge cost is in $/gal of ethanol so it is converted to $/gal oil equivalent)
3748      advfdCost("swge","cost") = advfdCost("swge","cost")*(5.253/3.192);
3749   
3750   
3751  table advbioCost          Advanced biofuel cost over time ($ per gal oil equivalent)
3752  * The data is taken from Winchester, Reilly, 2015, "The Feasibility, Costs, and Environmental Implications of Large-scale Biomass Energy",
3753  *  MIT Joint Program report, Figure 4.
3754  *  The original data is from cost estimates to 2015 based on a production cost survey by Bloomberg New Energy Finance (2013).
3755  *  Due to the lead time between technology availability and plant operations, cost estimates in this survey are lagged by two years.
3756  *  ethanol costs fall by 81% between 2010 and 2015 due to assumed decreases in enzyme costs and learning effects.
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 74
ADAGE Model - Set Definition
C o m p i l a t i o n


3757  *  From 2015 to 2040, reflecting the scope for development of new technologies, we assume that ethanol costs fall an additional 2.5% per year. and flatten out after 2040
3758  * Oil price in 2010 = $2.747/gal
3759  *  Albd source is from:http://www.biofuelsdigest.com/bdigest/2014/10/13/where-are-we-with-algae-biofuels/
3760  *  For future research, the cost trend should be updated.
3761               2010        2015        2020        2025        2030        2035        2040        2045        2050
3762  Albd        18.22       10.61       4.785       3.078       2.927       2.783       2.647        2.647      2.647
3763  ArsE         8.20        4.80        4.23        3.73        3.28        2.89        2.55        2.55       2.55
3764  FrsE        10.40        6.00        5.29        4.66        4.10        3.62        3.19        2.819      2.819
3765  *FrWE       10.40        6.00        5.29        4.66        4.10        3.62        3.19        3.19        3.19
3766  ;
3767   
3768      advbioCost("FrWe" ,t)=1.05*advbioCost("Frse",t);
3769   
3770  * Yield of ethanol : msce:  2960 gal/ha; swge: 1480 gal/ha; frwe: 1812.384 gal/ha
3771  * Yield of equivalent of gasoline: msce  2960/(5.253/3.192)=1798.65 gal/ha; swge: 1480/(5.253/3.192)=899.33 gal/ha; frwe: 1812.384/(5.253/3.192)=1101.3 gal/ha
3772      advbioCost("Msce" ,"2015")=p_land0("USA","crop")*1000/(bio_yield0("USA","msce")/(5.253/3.192)) /advbiolnd0("USA","msce");
3773      advbioCost("Msce" ,"2010")=advbioCost("msce","2015")/0.6;
3774      advbioCost("Msce" ,t)$(t.val>2015)= advbioCost("msce" ,"2015")*(1-0.01)**(t.val-2015);
3775      advbioCost("Msce" ,t)$(t.val>2015 and advbioCost("Msce" ,t)<2.747)= 2.747;
3776   
3777      advbioCost("Swge" ,t)$(t.val>2015)= swge_new(t,"cost")*5.253/3.192;
3778      advbioCost("swge" ,"2010")= advbioCost("swge" ,"2020")*1.30;
3779      advbioCost("swge" ,"2015")= advbioCost("swge" ,"2020")*1.15 ;
3780   
3781      advbioCost("Albd" ,t)=advbioCost("Arse",t);
3782  * Make cost flatter after 2030 except swge.
3783      advbioCost(advbio,t)$(t.val>2030 and not swge(advbio))= advbioCost(advbio ,"2030");
3784   
3785   
3786  parameter   advbiomkupt          Cost markup on advanced biofuels over time ;
3787      advbiomkupt(i,t)$advbioCost(i,t) =advbioCost(i,t)/2.747;
3788  display advbiomkupt,advbioCost,advbiolnd0;
3789   
3790  parameter  advblndshr(i,t)       New land share cost in the cellulosic biofuel production
3791             advbkdshr(i,t)        New capital share cost in the cellulosic biofuel production;
3792   
3793      advblndshr("frwe","2010") = p_land0("USA","frs")*1000/(bio_yield0("usa","frwe")/(5.253/3.192))/advbioCost("frwe" ,"2010");
3794      advblndshr("swge","2010") = p_land0("USA","crop")*1000/(bio_yield0("usa","swge")/(5.253/3.192))/advbioCost("swge" ,"2010");
3795      advblndshr("msce","2010") = p_land0("USA","crop")*1000/(bio_yield0("usa","msce")/(5.253/3.192))/advbioCost("msce" ,"2010");
3796   
3797  * This share is to calibrate to its ethanol yield assumption as below (gallon of ethanol per ha):
3798  *                   2015        2020        2025        2030        2035        2040        2045        2050
3799  *Swge5B.Swge    1483.323    1520.065    1557.786    1596.522    1636.315    1677.175    1719.114    1762.186
3800  *Msce5B.Msce    2947.907    3020.968    3096.017    3173.044    3252.135    3333.331    3416.669    3502.252
3801  *FrwE5B.FrwE    1812.420    1812.420    1812.420    1812.420    1812.420    1812.420    1812.420    1812.420
3802  * advblndshr("swge","2010") = 0.0373 is used to reach swge yield in 2010 as 1483.323 gal/ha
3803  * advblndshr("swge","2010") = 0.0373 *2.180621 is to reach yield 15 ton/ha and feedstock and 70.9 gal/ton = 1063.6 gal/ha
3804  * advblndshr("swge","2010") = 0.0373 *1.8127029 is to match yield 12.347 ton/ha and feedstock and 70.9 gal/ton = 875.402 gal/ha
3805   
3806      advblndshr("swge","2010") = 0.0373 *1.8127029 ;
3807      advblndshr("msce","2010") = 0.02574 ;
3808      advblndshr("frwe","2010") = 0.001744 ;
3809   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 75
ADAGE Model - Set Definition
C o m p i l a t i o n


3810      advblndshr(advl,t)$(ord(t)>1) = advblndshr(advl,"2010")/advbioCost(advl,t)*advbioCost(advl,"2010");
3811      advbkdshr(advl,"2010")        = advbiokd0("USA","va",advl)+ advbiolnd0("USA",advl)- advblndshr(advl,"2010") ;
3812   
3813      advblndshr(advl,t)$(ord(t)>1) = advblndshr(advl,"2010")/bio_yldtrd("usa",advl,t)*lnd_trend("usa","crop",t)
3814                                     /advbioCost(advl,t)*advbioCost(advl,"2010");
3815   
3816      advbio_t(r,advbio)=   advbiolnd0(r,advbio)+advbiold0(r,advbio)+advbiokd0(r,"va",advbio)
3817                          + advbioid0(r,'eim',advbio)+ advbioid0(r,'rodf',advbio)+ advbioid0(r,'srv',advbio)
3818                          + sum(e,advbioed0(r,e,advbio));
3819   
3820  display  "after", advbiolnd0,  advbiold0,advbiokd0,advbioid0,advbioed0,advbio_t;
3821   
3822  parameter advbioshr    Advanced biofuel input share;
3823      advbioshr("Land",advbio) = advbiolnd0("USA",advbio);
3824      advbioshr("va",advbio)   = advbiokd0("USA","va",advbio);
3825      advbioshr("ld",advbio)   = advbiold0("USA",advbio);
3826   
3827      advbioshr(i,advbio)$advbioid0("USA",i,advbio)      = advbioid0("USA",i,advbio);
3828      advbioshr(e,advbio)$advbioed0("USA",e,advbio)      = advbioed0("USA",e,advbio);
3829      advbioshr("total",advbio) =  advbioshr("Land",advbio)+ advbioshr("va",advbio)
3830                               + advbioshr("ld",advbio)+ sum(i,advbioshr(i,advbio));
3831  option advbioshr:5:1:1;
3832  display advbioshr;
3833   
3834  * Account for tax/credit
3835      advbiolnd0(r,advbio)      = advbiolnd0(r,advbio)  / plnd0(r,advbio);
3836      advbiold0(r,advbio)       = advbiold0(r,advbio)   / pld0(r,advbio);
3837      advbiokd0(r,"va",advbio)  = advbiokd0(r,"va",advbio)   / pkd0(r,"va",advbio);
3838   
3839   
3840  Table resfactor(*,*)      Residue related parameters
3841  * source: Gregg, J.S. and S.J. Smith, 2010: Global and regional potential for bioenergy from agricultural and forestry residues. Mitigation and Adaptation Strategies for Global Change, 15(3):241-262.
3842  *   Qmax: Maximum Residue Biomass Energy Available per ha = ( Residue Ratio *Yield - Residue Retention ) * Residue Energy Content
3843  *   drywetRatio: Residue ratio (dry residue mass/wet crop mass)
3844  *   Retenrate:   Residue retention (metric ton/ha)
3845  *   Engcont:     Residue Energy Content (mmbtu/metric ton)
3846  *   b       :    Curve exponent b
3847  *   Midprice:    Middle price to supply 50% of residue available ($2010/mmbtu)
3848  *   Maxprice:    Maximum price to supply 100% of residue available ($2010/mmbtu)
3849  *   ag_yield0:   ton/ha
3850   
3851           drywetRatio   Retenrate    Engcont     b     Midprice    Maxprice
3852  Wht         1.49        2.81        15.36    10.83     2.43        4.09
3853  Rice        0.99        0.94        12.83    10.83     2.43        4.09
3854  Corn        0.74        2.20        15.97    10.83     2.43        4.09
3855  Gron        1.02        1.09        14.40    10.83     2.43        4.09
3856  Osdn        1.28        1.26        12.56    10.83     2.43        4.09
3857  Srcn        0.28        1.24        14.41    10.83     2.43        4.09
3858  Ocr         0.38        0.38         7.74    10.83     2.43        4.09
3859  *timber     0.33        20.00       17.93     7.02     2.90        5.84
3860  frs         0.33        0.00        17.93     7.02     2.90        5.84
3861  Mill        0.30        0.00        18.94     1.46     1.71        6.43
3862  Soyb        1.28        1.26        12.56    10.83     2.43        4.09
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 76
ADAGE Model - Set Definition
C o m p i l a t i o n


3863  Srbt        0.28        1.24        14.41    10.83     2.43        4.09
3864  ;
3865   
3866  parameter residueE0_btu(r,*,t)   AG and forest residue endowment (quad btu)
3867            residueE0_val(r,*,t)   Ag and forest residue endowment ($billion) ;
3868   
3869       q_land0(r,"ocr") = q_land0(r,"ocr")- rice0(r,"area");
3870       residueE0_btu(r,i,"2010") =   (resfactor(i,"drywetRatio")*ag_yield0(r,i)- resfactor(i,"Retenrate") )
3871                                 * resfactor(i,"Engcont")
3872                                 * q_land0(r,i)
3873                                 / 1000;
3874   
3875       residueE0_btu(r,"rice","2010") =  (resfactor("rice","drywetRatio")*rice0(r,"yield")- resfactor("rice","Retenrate") )
3876                                      * resfactor("rice","Engcont")
3877                                      * rice0(r,"area")
3878                                     /  1000;
3879   
3880       residueE0_btu(r,"mill","2010") = (resfactor("mill","drywetRatio")*ag_yield0(r,"frs")- resfactor("mill","Retenrate") )
3881                                       * resfactor("mill","Engcont")
3882                                       * q_land0(r,"frs")
3883                                       / 1000;
3884   
3885       residueE0_btu(r,i,"2010")$(residueE0_btu(r,i,"2010")<0)=0;
3886       residueE0_btu(r,"rice","2010")$(residueE0_btu(r,"rice","2010")<0)=0;
3887   
3888       residueE0_btu(r,"arsE","2010") =  sum(crp, residueE0_btu(r,crp,"2010"))+ residueE0_btu(r,"rice","2010");
3889       residueE0_val(r,"arsE","2010") =  sum(crp, residueE0_btu(r,crp,"2010")*resfactor(crp,"Midprice"))  + residueE0_btu(r,"rice","2010")*resfactor("rice","Midprice") ;
3890   
3891       residueE0_btu(r,"frsE","2010") = residueE0_btu(r,"frs","2010")+residueE0_btu(r,"mill","2010") ;
3892       residueE0_val(r,"frsE","2010") = residueE0_btu(r,"frsE","2010")*resfactor("frs","Midprice")+residueE0_btu(r,"mill","2010")*resfactor("mill","Midprice");
3893   
3894       residueE0_btu(r,crp,"2010")   = 0;
3895       residueE0_btu(r,"rice","2010")= 0;
3896       residueE0_btu(r,"frs","2010") = 0;
3897       residueE0_btu(r,"mill","2010")= 0;
3898  display  residueE0_btu,residueE0_val,q_land0;
3899   
3900   
3901  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
3902  *            Introduce Physical data in transportation sector
3903  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
3904  * Data is from GCAM and AEO2015
3905  parameter
3906  * Data are from GCAM
3907         tran_pricT0_10      Price (2010$ per ton-mile for freight and 2010$ per passenger-mile for passenger) from 2010 to 2050
3908         tran_loadf0_10      Average load factor in transportation sector (persons per vehicle for passenger and ton per vehicle for freight) from 2010 to 2050
3909         tran_pvmtT0_10      Price of miles traveled by transportation sector by vehicle ($ per vmt for passenger or $ per ton for freight) from 2010 to 2050
3910         tran_vmt0_10        Vehicle miles traveled by transportation sectors (billion miles) in 2010
3911         tran_mpge0_10       Miles per gallon of gasoline equivalent in 2010
3912   
3913         auto_pricT0         Price (2010$ per pass-mile for passenger) from 2010 to 2050
3914         auto_loadf0         Average load factor (which differs by type then assumed to be same as gasoline car later)
3915         auto_loadfT0        Load factor over the time (which differs by type and time then assumed to be same as gasoline car later)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 77
ADAGE Model - Set Definition
C o m p i l a t i o n


3916         auto_mpgeT0         Auto mpge from 2010 to 2050 (mile traveled per gallon of gasoline equivalent) (For USA GCAM data is replaced by AEO2015 data where LDV is EPA-rated fuel efficiency)
3917         auto_enpricT0       Auto energy price ($ per mmbtu) from 2010 to 2050
3918         auto_vmtT0          Vehicle miles traveled by auto sectors (billion miles) from 2010 to 2050
3919   
3920  * Data are from AEO2015
3921         USA_auto_price0     New car sales price in USA from AEO2015 ($ thousand)
3922         USA_auto_enmix0     Enegy mix share in AFV in USA from AEO2015
3923         USA_auto_stock0     USA auto stock from 2010 to 2050 from AEO2015 (million) (includes both new and used vehicles)
3924         USA_auto_vmtV0      USA average auto vehicle mile traveled per vehicle (thousand miles per vehicle)
3925   
3926         afv_markupt0          Alternative fuel vehicle markup relative to conventional gasoline vehicle
3927  ;
3928   
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data6_tran.gdx
--- LOAD  tran_pricT0_10 = 1:tran_pricT0
--- LOAD  tran_loadf0_10 = 2:tran_loadf0
--- LOAD  tran_pvmtT0_10 = 3:tran_pvmtT0
--- LOAD  tran_vmt0_10 = 4:tran_vmt0
--- LOAD  tran_mpge0_10 = 5:tran_mpge0
--- LOAD  auto_pricT0 = 6:auto_pricT0
--- LOAD  auto_loadfT0 = 8:auto_loadfT0
--- LOAD  auto_loadf0 = 7:auto_loadf0
--- LOAD  auto_mpgeT0 = 9:auto_mpgeT0
--- LOAD  auto_enpricT0 = 10:auto_enpricT0
--- LOAD  auto_vmtT0 = 11:auto_vmtT0
--- LOAD  USA_auto_price0 = 12:USA_auto_price0
--- LOAD  USA_auto_enmix0 = 13:USA_auto_enmix0
--- LOAD  USA_auto_stock0 = 14:USA_auto_stock0
3933   
3934  * Heavy duty and light-duty bus transportation in tran_vmt0 for XAS and CHN are not accounted, now we need to add it back using GCAM data
3935  parameter Fvmt_RodP_10(r,i) factor used to adjust vmt in the bus transportation ;
3936      Fvmt_rodP_10(r,trnall) = 1;
3937      Fvmt_rodP_10("CHN","rodP")     = 64.96935324;
3938      Fvmt_rodP_10("XAS","rodP")     = 1.036754452;
3939      Fvmt_rodP_10("CHN","rodP_OEV") = Fvmt_rodP_10("CHN","rodP");
3940      Fvmt_rodP_10("XAS","rodP_OEV") = Fvmt_rodP_10("XAS","rodP");
3941   
3942  * In case transportation sectors are aggregated
3943  parameter  tran_vmt0_10_(r,i)          Vehicle miles traveled by transportation sectors (billion miles) in 2010
3944             tran_mpge0_10_(r,i)         Miles per gallon of gasoline equivalent in 2010
3945             tran_pricT0_10_(r,i,t)      Price (2010$ per ton-mile for freight and 2010$ per pass-mile for passenger) from 2010 to 2050
3946             tran_loadf0_10_(r,i)        Average load factor in transportation sector (persons per vehicle for passenger and ton per vehicle for freight) from 2010 to 2050
3947             tran_pvmtT0_10_(r,i,t)      Price of miles traveled by transportation sector by vehicle ($ per vmt for passenger or $ per ton for freight) from 2010 to 2050
3948             Fvmt_RodP_10_(r,i)          Weighted factor to adjust the vmt due to adjustment in bus transportation
3949   
3950             tran_vmt0(r,i)              Vehicle miles traveled by transportation sectors (billion miles) in 2010
3951             tran_mpge0(r,i)             Miles per gallon of gasoline equivalent in 2010
3952             tran_pricT0(r,i,t)          Price (2010$ per ton-mile for freight and 2010$ per pass-mile for passenger) from 2010 to 2050
3953             tran_loadf0(r,i)            Average load factor in transportation sector (persons per vehicle for passenger and ton per vehicle for freight) from 2010 to 2050
3954             tran_pvmtT0(r,i,t)          Price of miles traveled by transportation sector by vehicle ($ per vmt for passenger or $ per ton for freight) from 2010 to 2050
3955             Fvmt_RodP0(r,i)             Weighted factor to adjust the vmt due to adjustment in bus transportation;
3956   
3957      tran_vmt0_10_(r,ii)  = sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i));
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 78
ADAGE Model - Set Definition
C o m p i l a t i o n


3958   
3959      tran_mpge0_10_(r,ii)$sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i))
3960         = sum(mapsector(ii,i)$trni(i),tran_mpge0_10(r,i)*tran_vmt0_10(r,i))
3961          /sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i));
3962   
3963      tran_pricT0_10_(r,ii,t)$sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i))
3964         =  sum(mapsector(ii,i)$trni(i),tran_pricT0_10(r,i,t)*tran_vmt0_10(r,i)*tran_loadf0_10(r,i))
3965           /sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i)*tran_loadf0_10(r,i));
3966   
3967      tran_loadf0_10_(r,ii)$sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i))
3968        =  sum(mapsector(ii,i)$trni(i),tran_loadf0_10(r,i)*tran_vmt0_10(r,i))
3969          /sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i));
3970   
3971      tran_pvmtT0_10_(r,ii,t)$sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i))
3972        =  sum(mapsector(ii,i)$trni(i),tran_pvmtT0_10(r,i,t)*tran_vmt0_10(r,i))
3973          /sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i));
3974   
3975      Fvmt_RodP_10_(r,ii)$sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i))
3976        = sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i)*Fvmt_RodP_10(r,i))
3977         /sum(mapsector(ii,i)$trni(i),tran_vmt0_10(r,i));
3978   
3979   
3980      tran_vmt0(r,ii)       = tran_vmt0_10_(r,ii)    ;
3981      tran_mpge0(r,ii)      = tran_mpge0_10_(r,ii)   ;
3982      tran_pricT0(r,ii,t)   = tran_pricT0_10_(r,ii,t);
3983      tran_loadf0(r,ii)     = tran_loadf0_10_(r,ii)  ;
3984      tran_pvmtT0(r,ii,t)   = tran_pvmtT0_10_(r,ii,t);
3985      Fvmt_RodP0(r,ii)      = Fvmt_RodP_10_(r,ii);
3986   
3987  scalar onroadeff      Onroad efficiency rate (ratio respect to EPA-rated fuel efficiecy)  /0.8/;
3988   
3989  Table   USA_auto_mpge(*,t)    New vehicle mpge in USA in auto_OEV over time in AEO2019 (actual fuel efficiency)
3990  * This is copied from auto_FEdata_20190531.xlsx
3991  * Data is from AEO2015 for 2010 and 2015 and AEO2019 from 2020~2050
3992                    2010          2015          2020          2025          2030          2035          2040          2045        2050
3993  Auto_OEV        24.828        25.474        28.132        35.341        35.537        35.451        35.192        34.950        34.546
3994  Auto_BEV        76.523        78.513        86.706        94.119        94.274        94.997        95.302        95.262        94.976
3995  Auto_GasV       23.605        24.134        26.937        34.504        34.810        34.924        34.788        34.656        34.322
3996  Auto_HEV        41.013        42.240        46.548        56.167        56.240        55.970        55.553        54.960        54.205
3997  Auto_FCEV       36.120        36.120        39.502        42.984        42.887        43.145        43.390        43.653        43.706
3998  ;
3999   
4000  $include .\data\data7a_US_aeo2019_data.dat
****                                           $282
**** LINE   3345 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
4001  * It is renamed from US_aeo2019_data.dat generated from read_auto_aeo2019.gms in tran_data
4002  * parameter usa_mpget0          AEO2019: new AFV vehicles mpge in USA for auto_AFV and RodF_AFV(Auto_AFV is EPA_Rated but RodF_AFV is actual) (mile per gallon of oile)
4003  *           usa_vmtt0           AEO2019: new AFV vehicles mile-traveled (billion vmt traveled)
4004  * RodP_AFV is not available in AEO2019
4005   
4006  * Convert  usa_mpget0 in aeo2019 to actual fuel economy
4007     usa_mpget0("auto_OEV",t) = USA_auto_mpge("auto_OEV",t);
****              $140
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 79
ADAGE Model - Set Definition
C o m p i l a t i o n


**** LINE   3352 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
4008     usa_mpget0(autoafv,t)    = USA_auto_mpge(autoafv,t);
4009   
4010  * For USA, mpge in USA in Auto_OEV is actual fuel economy from GCAM
4011  * For all other regions, mpge for all technology is already the onroad fuel efficiency
4012  * Auto_FCEV in USA in AEO is small so it is replaced with GCAM projections
4013      auto_mpgeT0("USA","auto_OEV",t)     = USA_auto_mpge("Auto_OEV",t) ;
4014      auto_mpgeT0("USA",autoafv,t)$(not sameas(autoafv,"auto_FCEV"))  = USA_auto_mpge(autoafv,t);
4015  display  usa_mpget0,usa_vmtt0 ,tran_vmt0,tran_loadf0, auto_mpgeT0;
****                              $140
**** LINE   3360 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
4016   
4017  * Fill up missing value in 2010 and 2015 for modeling purpose
4018      auto_mpgeT0(r,Autoafv,"2005") = 0 ;
4019      auto_mpgeT0(r,Autoafv,"2015")$(auto_mpgeT0(r,Autoafv,"2015")=0)
4020         = auto_mpgeT0(r,Autoafv,"2020")*auto_mpgeT0(r,Autoafv,"2020")/auto_mpgeT0(r,Autoafv,"2025");
4021      auto_mpgeT0(r,Autoafv,"2010")$(auto_mpgeT0(r,Autoafv,"2010")=0)
4022         = auto_mpgeT0(r,Autoafv,"2015")*auto_mpgeT0(r,Autoafv,"2015")/auto_mpgeT0(r,Autoafv,"2020");
4023   
4024  display  auto_mpgeT0;
4025   
4026  * Afr and xas in auto_gasV and auto_HEV: mpge is much smaller in 2010 and much larger in 2015 than in later years, so 2010 and 2015 are linearly interpolated using later years data.
4027      auto_mpgeT0(r,"Auto_gasv","2015")$(sameas(r,"afr") or sameas (r,"xas"))   = auto_mpgeT0(r,"Auto_gasv","2020")*auto_mpgeT0(r,"Auto_gasv","2020")/auto_mpgeT0(r,"Auto_gasv","2025");
4028      auto_mpgeT0(r,"Auto_gasv" ,"2010")$(sameas(r,"afr") or sameas (r,"xas"))  = auto_mpgeT0(r,"Auto_gasv" ,"2015")*auto_mpgeT0(r,"Auto_gasv" ,"2015")/auto_mpgeT0(r,"Auto_gasv" ,"2020");
4029      auto_mpgeT0(r,"Auto_HEV","2015")$sameas(r,"afr")   = auto_mpgeT0(r,"Auto_HEV","2020")*auto_mpgeT0(r,"Auto_HEV","2020")/auto_mpgeT0(r,"Auto_HEV","2025");
4030      auto_mpgeT0(r,"Auto_HEV" ,"2010")$sameas(r,"afr")  = auto_mpgeT0(r,"Auto_HEV" ,"2015")*auto_mpgeT0(r,"Auto_HEV" ,"2015")/auto_mpgeT0(r,"Auto_HEV" ,"2020");
4031   
4032  * Load factor in GCAM is weighted average from class size and different over time
4033      auto_loadfT0(r,autoafv,"2015")$(auto_loadfT0(r,autoafv,"2015")=0)
4034         = auto_loadfT0(r,autoafv,"2020")*auto_loadfT0(r,autoafv,"2020")/auto_loadfT0(r,autoafv,"2025");
4035      auto_loadfT0(r,autoafv,"2010")$(auto_loadfT0(r,autoafv,"2010")=0)
4036         = auto_loadfT0(r,autoafv,"2015")*auto_loadfT0(r,autoafv,"2015")/auto_loadfT0(r,autoafv,"2020");
4037   
4038  * Load factor is assumed to be same as OEV to simplify the problem
4039      auto_loadfT0(r,autoafv,t)= tran_loadf0(r,"auto");
4040      auto_loadf0(r,autoafv)   = tran_loadf0(r,"auto");
4041   
4042  * Fill in the missing data
4043      auto_enpricT0(r,Autoafv,"2015")$(auto_enpricT0(r,Autoafv,"2015")=0)
4044         = auto_enpricT0(r,autoafv,"2020")*auto_enpricT0(r,autoafv,"2020")/auto_enpricT0(r,autoafv,"2025");
4045      auto_enpricT0(r,autoafv,"2010")$(auto_enpricT0(r,autoafv,"2010")=0)
4046         = auto_enpricT0(r,autoafv,"2015")*auto_enpricT0(r,autoafv,"2015")/auto_enpricT0(r,autoafv,"2020");
4047   
4048  Table AutoTrgt_mpge(*,t)   Auto (LDV) mpge target in USA for new vehicles only (both OEV and AFV) (miles per gallon of gasoline equivalent)
4049  * Include only new auto_OEV and AFVs
4050  * Received from EPA on 2019-04-09: "2019.04.8 LDVR  HDVR Assumptions for ADAGE.xlsx"
4051           2010     2015     2020      2025      2030      2035     2040    2045      2050
4052  Auto   21.948   27.931   33.913    42.434    42.434    42.434   42.434  42.434    42.434
4053  ;
4054   
4055  AutoTrgt_mpge("auto","2010")  = auto_mpgeT0("USA","auto_OEV","2010");
4056  AutoTrgt_mpge("auto","2015")  = 0.5* auto_mpgeT0("USA","auto_OEV","2010")+ 0.5*AutoTrgt_mpge("auto","2020");
4057   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 80
ADAGE Model - Set Definition
C o m p i l a t i o n


4058  Table usa_hdv_mpge(*,t)    Fuel economy for conventional new HDV vehicles in USA  (mile per gallon oil)
4059  *Rodf_OEV: 2010 and 2015 values are from the fuel economy target in HDVtargt_mpge, 2020~2050 from AEO2019
4060  *Rodp_OEV: 2010 and 2015 values from FHWA, 2020-2030 assume FE growth similar to Phase II HD vehicle rule; assume 1% growth/year after that
4061                   2010    2015   2020    2025     2030    2035    2040     2045    2050
4062  Rodf_OEV        8.366   8.993  8.166   9.032   10.061  10.342  10.467   10.595  10.743
4063  RodP_OEV        6.500   6.669  7.469   8.003    8.270   8.691   9.135    9.601  10.090
4064  ;
4065   
4066  * As 2020~2025 in rodf_OEV is below the value in 2015, so linear interpolation is used for 2020 and 2025
4067  usa_hdv_mpge("rodf_OEV","2020")= 2/3*usa_hdv_mpge("rodf_OEV","2015")+1/3*usa_hdv_mpge("rodf_OEV","2030");
4068  usa_hdv_mpge("rodf_OEV","2025")= 1/3*usa_hdv_mpge("rodf_OEV","2015")+2/3*usa_hdv_mpge("rodf_OEV","2030");
4069   
4070  * Make the data set consistent in many places
4071  usa_mpget0("rodf_OEV",t)       = usa_hdv_mpge("rodf_OEV",t);
4072   
4073   
4074  Table HDVtrgt_mpge(trn,t)  Heavy duty vehicles target for new vehicles only (both OEV and AFV) (mile per gallon of gasoline equivalent)
4075  * Received from EPA in 2019-04-09: "2019.04.8 LDVR  HDVR Assumptions for ADAGE.xlsx"
4076           2010   2015    2020     2025     2030     2035     2040     2045     2050
4077  RodF    8.366   8.993   9.891   10.791   10.791   10.791   10.791   10.791   10.791
4078  RodP    6.074   6.669   7.788    8.534    8.534    8.534    8.534    8.534    8.534
4079  ;
4080   
4081  parameter targt_mpgeT(r,*,t)        mpge target for USA for onroad new vehicle
4082            targt_mpge(r,*)           mpge target for USA for onroad new vehicle ;
4083      targt_mpgeT("USA",trn,t)      = HDVtrgt_mpge(trn,t);
4084      targt_mpgeT("USA","auto",t)   = AutoTrgt_mpge("auto",t);
4085      targt_mpge("USA",trnv)        = targt_mpgeT("USA",trnv,"2010");
4086   
4087  parameter pmt_mpge(i,t)            Price of fuel economy permit for new vehicle
4088            pmt(i)                   Price of fuel economy permit for new vehicle;
4089  * initial permit price is set to compensate the onroad fuel economy, RodP_AFV has higher cost than OEV so permit price is set higher to promote faster penetration of AFV
4090  * so it can meet the fuel economy target
4091  pmt(trnv)=1;
4092  pmt_mpge(trnv,t) =1;
4093  pmt_mpge("rodp",t)$(t.val<2020) = 3;
4094  pmt_mpge("rodp",t)$(t.val=2020) = 9;
4095  pmt_mpge("rodp",t)$(t.val>2020) = 6;
4096   
4098   
4099  display  targt_mpgeT,targt_mpge;
4100   
4101  * Data from GCAM and adjusted by EPA assumption on battery cost
4102  $include .\data\data7b_afv_EPA.dat       !updated 03-12-2020
****                                   $282
**** LINE   3452 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
4103  *parameter auto_noencost       nonenergy cost
4104  *               kd0            Total capital cost ($/passenger-mile-traveled or ton-mile-traveled)
4105  *               kd0_purc       Capital cost_vehicle purchasing cost ($/passenger-mile-traveled or ton-mile-traveled)
4106  *               kd0_infr       Capital cost_vehicle infrastructure cost ($/passenger-mile-traveled or ton-mile-traveled)
4107  *               kd0_othr       Capital cost_other capital cost ($/passenger-mile-traveled or ton-mile-traveled)
4108  *               id0            Material input cost($/passenger-mile-traveled or ton-mile-traveled)
4109  *               mant           Material cost_specially assigned to service cost in ADAGE ($/passenger-mile-traveled or ton-mile-traveled)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 81
ADAGE Model - Set Definition
C o m p i l a t i o n


4110  *               noen           Total non-energy cost (sum of kd0+id0) ($/passenger-mile-traveled or ton-mile-traveled)
4111   
4112  *parameter afv_mpge0                    AFV fuel economy
4113  *parameter afv_kc_coef(r,afv,t)         AFV capital cost ratio (no infrastructure cost) relative to refined oil transportation
4114  *          afv_mpge_coef(r,afv,t)       AFV fuel efficiency ratio relative to refined oil transportation
4115  *          afv_mant_coef(r,afv)         AFV maintenance cost ratio relative to refined oil transportation  (similar as service in LDV)
4116  *          afv_mant_coef2(r,afv)        AFV maintenance cost share in the overall "id0" cost in refined oil transportation  (similar as service in LDV)
4117   
4118  * fill up missing value in 2010 and 2015 for modeling purpose
4119      afv_kc_coef(r,hdvi,"2015")= afv_kc_coef(r,hdvi,"2020")*afv_kc_coef(r,hdvi,"2020")/afv_kc_coef(r,hdvi,"2025");
****                $140
**** LINE   3469 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
4120      afv_kc_coef(r,hdvi,"2010")= afv_kc_coef(r,hdvi,"2015")*afv_kc_coef(r,hdvi,"2015")/afv_kc_coef(r,hdvi,"2020");
4121   
4122  set  r3   3 regions without capital cost adjustment  /AFR, CHN, XAS/;
4123  parameter afv_kc_coef1 ;
4124      afv_kc_coef1(r,i,t)$(oev(i) ) = 1 ;
4125      afv_kc_coef1(r,i,t)$(autoafv(i)) = afv_kc_coef(r,i,t);
4126      afv_kc_coef1(r,i,t)$(gasv(i) and hdvafv(i)) = afv_kc_coef(r,"auto_GasV",t);
4127      afv_kc_coef1(r,i,t)$(t.val<=2025 and hev(i) and hdvafv(i)) = afv_kc_coef(r,i,t);
4128      afv_kc_coef1(r,i,t)$(t.val>2025  and hev(i) and hdvafv(i)) = afv_kc_coef(r,"auto_hev",t-2);
4129      afv_kc_coef1(r,i,t)$(t.val<=2025 and bev(i) and hdvafv(i)) = afv_kc_coef(r,i,t);
4130      afv_kc_coef1(r,i,t)$(t.val>2025  and bev(i) and hdvafv(i)) = afv_kc_coef(r,"auto_bev",t-2);
4131      afv_kc_coef1(r,i,t)$(t.val<=2025 and fcev(i) and hdvafv(i))= afv_kc_coef(r,i,t);
4132      afv_kc_coef1(r,i,t)$(t.val>2025  and fcev(i) and hdvafv(i))= afv_kc_coef(r,"auto_fcev",t-2);
4133      afv_kc_coef1(r3,i,t)$(hev(i) or bev(i) or fcev(i))         =  afv_kc_coef(r3,i,t);
4134  display  afv_kc_coef,afv_kc_coef1;
4135   
4136      afv_mpge_coef(r,hdvafv,"2010")$(afv_mpge_coef(r,hdvafv,"2010")=0 and afv_mpge_coef(r,hdvafv,"2015"))
****                  $140
**** LINE   3486 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
4137         = afv_mpge_coef(r,hdvafv,"2015");
4138   
4139  * Update gasv fuel economy ratio based on EPA assumption. It is same for other AFVs.
4140      afv_mpge_coef(r,"rodf_gasv",t)= 0.9;
4141      afv_mpge_coef(r,"rodp_gasv",t)= 0.9;
4142   
4143  parameter afv_kc_coef_infras         Infrastructure cost relative to capital cost excluding infrastructure cost in non-gasv ;
4144  * Infrastructure cost is included in Auto_BEV and Auto_FCEV in GCAM and ADAGE, but not in Auto_GASV, now updated auto_noencost includes infrastructure cost for auto_gasv now
4145  * We continue to expand the assumption to HDV_AFV using same ratio from LDV_AFV
4146      afv_kc_coef_infras(r,gasv,t) =    auto_noencost(r, "auto_GASV","kd0_infr",t)
****                                                    $140                      $116
**** LINE   3496 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
4147                                     /( auto_noencost(r, "auto_GASV","kd0_purc",t)+ auto_noencost(r, "auto_GASV","kd0_othr",t));
****                                                                              $116                                        $116
**** LINE   3497 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
4148      afv_kc_coef_infras(r,bev,t)  =    auto_noencost(r, "auto_bev","kd0_infr",t)
4149                                     /( auto_noencost(r, "auto_bev","kd0_purc",t) + auto_noencost(r, "auto_bev","kd0_othr",t));
4150      afv_kc_coef_infras(r,fcev,t) =    auto_noencost(r, "auto_fcev","kd0_infr",t)
4151                                     /( auto_noencost(r, "auto_fcev","kd0_purc",t)+ auto_noencost(r, "auto_fcev","kd0_othr",t));
4152   
4153  display afv_kc_coef_infras;
4154   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 82
ADAGE Model - Set Definition
C o m p i l a t i o n


4155  parameter          chk0_kc           compare capital cost markup excluding infrastructure cost
4156                     chk0_kct          compare capital cost markup including infrastructure cost   ;
4157   
4158      chk0_kc(r,i,"old",t) =  afv_kc_coef(r,i,t) ;
4159      chk0_kc(r,i,"new",t) =  afv_kc_coef1(r,i,t);
4160   
4161      chk0_kct(r,i,"old",t)$autoi(i) =  afv_kc_coef(r,i,t)*(1+afv_kc_coef_infras(r,i,t)) ;
4162      chk0_kct(r,i,"old",t)$hdvi(i)  =  afv_kc_coef(r,i,t) ;
4163      chk0_kct(r,i,"new",t)          =  afv_kc_coef1(r,i,t)*(1+afv_kc_coef_infras(r,i,t));
4164  display chk0_kc, chk0_kct;
4165   
4166  set  mapafv(j,i)
4167             /Auto_OEV  .(  RodF_OEV  ,  RodP_OEV  )
4168              Auto_gasV .(  RodF_GasV ,  RodP_GasV )
4169              Auto_BEV  .(  RodF_BEV  ,  RodP_BEV  )
4170              Auto_HEV  .(  RodF_HEV  ,  RodP_HEV  )
4171              Auto_FCEV .(  RodF_FCEV ,  RodP_FCEV )
4172            /
4173   
4174   
4175  parameter afv_enmix0(i,*)    AFV energy mix ratio
4176            afv_ensup0(i,*)    FCEV additional input cost (produce & supply FCEV) relative to energy cost
4177            afv_mpge0(r,i)     AFV mpge (mile per gallon) starting in 2010 for LDV and 2020 for HDV
4178            afv_mpgeT0(r,i,t)  AFV mpge (mile per gallon) from 2010 to 2050 ;
4179   
4180  * Assume energy mix share is the same in AFVs in auto and hdv
4181      afv_enmix0(afv,e)$autoi(afv)  = USA_auto_enmix0(afv,e)/sum(ee,USA_auto_enmix0(afv,ee));
4182      afv_enmix0(afv,e)$hdvi(afv)   = sum(mapafv(autoi,afv), afv_enmix0(autoi,e));
4183      afv_enmix0("RodF_gasV","gas") = 1;
4184      afv_enmix0("RodF_gasV","oil") = 0;
4185      afv_enmix0("RodP_gasV","gas") = 1;
4186      afv_enmix0("RodP_gasV","oil") = 0;
4187   
4188      afv_ensup0(afv,"ld0")$autoi(afv) = USA_auto_enmix0(afv,"ld0")/sum(ee,USA_auto_enmix0(afv,ee));
4189      afv_ensup0(afv,"kd0")$autoi(afv) = USA_auto_enmix0(afv,"kd0")/sum(ee,USA_auto_enmix0(afv,ee));
4190      afv_ensup0(afv,"ld0")$hdvi(afv)  = sum(mapafv(autoi,afv), afv_ensup0(autoi,"ld0")) ;
4191      afv_ensup0(afv,"kd0")$hdvi(afv)  = sum(mapafv(autoi,afv), afv_ensup0(autoi,"kd0"))*0.75 ;
4192      afv_ensup0(afv,"hkd0")$hdvi(afv) = sum(mapafv(autoi,afv), afv_ensup0(autoi,"kd0"))*0.25 ;
4193   
4194      afv_mpge0(r,autoi)     =  auto_mpgeT0(r,autoi,"2010");
4195      afv_mpgeT0(r,autoi,t)  =  auto_mpgeT0(r,autoi,t);
4196      afv_mpge_coef(r,autoi,t)= auto_mpgeT0(r,autoi,t)/auto_mpgeT0(r,"auto_OEV",t);
4197   
4198  * Assume mpge in OEV in LDV and HDV grow at same rate
4199      afv_mpgeT0(r,"RodF_OEV",t)$(not num(r)) = tran_mpge0_10(r,"RodF")* auto_mpgeT0(r,"Auto_OEV",t)/auto_mpgeT0(r,"Auto_OEV","2010");
4200      afv_mpgeT0(r,"RodP_OEV",t)$(not num(r)) = tran_mpge0_10(r,"RodP")* auto_mpgeT0(r,"Auto_OEV",t)/auto_mpgeT0(r,"Auto_OEV","2010");
4201      afv_mpgeT0(r,rodfafv,t)$(not num(r))    = afv_mpgeT0(r,"RodF_OEV",t)*afv_mpge_coef(r,rodfafv,t);
4202      afv_mpgeT0(r,rodpafv,t)$(not num(r))    = afv_mpgeT0(r,"RodP_OEV",t)*afv_mpge_coef(r,rodpafv,t);
4203   
4204      afv_mpgeT0(r,"RodF_OEV",t)$num(r)      = usa_hdv_mpge("RodF_OEV",t);
4205      afv_mpgeT0(r,"RodP_OEV",t)$num(r)      = usa_hdv_mpge("RodP_OEV",t);
4206      afv_mpgeT0(r,rodfafv,t)$num(r)          = afv_mpgeT0(r,"RodF_OEV",t)*afv_mpge_coef(r,rodfafv,t)  ;
4207      afv_mpgeT0(r,rodpafv,t)$num(r)          = afv_mpgeT0(r,"RodP_OEV",t)*afv_mpge_coef(r,rodpafv,t);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 83
ADAGE Model - Set Definition
C o m p i l a t i o n


4208   
4209      afv_mpge0(r,hdvi)      = afv_mpgeT0(r,hdvi,"2010");
4210  display afv_mpge_coef,afv_kc_coef,afv_mpget0,afv_mpge0;
4211   
4212  * GTAP data shows no tax for auto_OEV but + tax for rodF_OEV and RodP_OEV.
4213  * Assuming the tax rate for afvs is same as its conventional technology
4214  * In addition, assume 15% tax subsidies included for AFVs
4215      ty(r,oev) =  sum(mapoev(oev,i), ty(r,i));
4216      ty(r,i)$(autoafv(i) or hdvafv(i))  =  -0.15 ;
4217      tl(r,i)$(autoi(i) or hdvi(i))  =  sum(maptrn(j,i),tl(r,j))  ;
4218      tk(r,k,i)$(autoi(i) or hdvi(i))=  sum(maptrn(j,i),tk(r,k,j));
4219      ti(r,g,i)$(autoi(i) or hdvi(i))=  sum(maptrn(j,i),ti(r,g,j));
4220      thk(r,i)$(autoi(i) or hdvi(i)) =  sum(maptrn(j,i),thk(r,j)) ;
4221   
4222      pld0(r,i)  = 1+ tl(r,i)  ;
4223      pkd0(r,k,i)= 1+ tk(r,k,i);
4224      pid0(r,g,i)= 1+ ti(r,g,i);
4225      phkd0(r,i) = 1+ thk(r,i);
4226   
4227  parameter tran_cost0              Input cost in transportation sector in OEV (2010$ per passenger-mile for passenger) in 2010 (including tax)
4228            afv_costT0(r,i,*,t)     AFV service cost over the time ($2010 per passenger-mile-traveled or ton-mile-traveled) (including tax)
4229   
4230            afv_yt0                 AFV total cost relative to corresponding OEV over the time
4231            afv_ldt0                AFV labor cost share relative to corresponding OEV over the time
4232            afv_idt0                AFV intermediate goods cost share relative to corresponding OEV  over the time
4233            afv_edt0                AFV energy cost share relative to corresponding OEV over the time
4234            afv_kdt0                AFV capital cost share relative to corresponding OEV over the time
4235            afv_hkdt0               AFV human capital cost share relative to corresponding OEV over the time
4236            afv_fft0                AFV fixed factor share relative to corresponding OEV over the time
4237            afv_edtrdt0             AFV energy efficiency trend (1 in 2010)
4238   
4239            afv_y0                  AFV total cost in 2010
4240            afv_ld0                 AFV labor cost share in 2010
4241            afv_id0                 AFV intermediate goods cost share in 2010
4242            afv_ed0                 AFV energy cost share in 2010
4243            afv_kd0                 AFV capital cost share in 2010
4244            afv_hkd0                AFV human capital cost share in 2010
4245            afv_ff0                 AFV fixed factor ($billion)
4246            afv_edtrd0              AFV energy efficiency trend (1 in 2010)
4247   
4248            afv_vmtT0(r,afv,v,t)    AFV Vehicle-mile-traveled pathway (billion miles)
4249            afv_yent0(r,afv,v,t)    AFV service production pathway ($billion)
4250            afv_ffen0(r,afv,v)      AFV fixed factor endowment pathway (billion $)
4251   
4252            afv_t0(r,afv,v,t)       Year where AFV is available into the market
4253            afvmarkup(r,afv,v)      Markup for alternative fuel vehicle
4254   
4255            chk0_afvt0              Check AFVs input share
4256  ;
4257   
4258      tran_cost0(r,trnv,"y0")  = y0_10(r,trnv,"new","2010")*(1-ty_10(r,trnv))/(tran_vmt0_10(r,trnv)*tran_loadf0_10(r,trnv));
4259      tran_cost0(r,trnv,"id0") = sum(g,id0_10(r,g,trnv,"new","2010")*(1+ti_10(r,g,trnv)))/(tran_vmt0_10(r,trnv)*tran_loadf0_10(r,trnv));
4260      tran_cost0(r,trnv,g)     = id0_10(r,g,trnv,"new","2010")*(1+ti_10(r,g,trnv))/(tran_vmt0_10(r,trnv)*tran_loadf0_10(r,trnv));
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 84
ADAGE Model - Set Definition
C o m p i l a t i o n


4261   
4262      tran_cost0(r,trnv,"kd0") = sum(k,kd0_10(r,k,trnv,"new","2010")*(1+tk_10(r,k,trnv)))/(tran_vmt0_10(r,trnv)*tran_loadf0_10(r,trnv));
4263      tran_cost0(r,trnv,"hkd0")= hkd0_10(r,trnv,"new","2010")*(1+thk_10(r,trnv))/(tran_vmt0_10(r,trnv)*tran_loadf0_10(r,trnv));
4264      tran_cost0(r,trnv,"ld0") = ld0_10(r,trnv,"new","2010")*(1+tl_10(r,trnv))/(tran_vmt0_10(r,trnv)*tran_loadf0_10(r,trnv));
4265      tran_cost0(r,trnv,"ed0") = sum(e,ed0_10(r,e,"fuel",trnv,"new","2010"))/(tran_vmt0_10(r,trnv)*tran_loadf0_10(r,trnv));
4266      tran_cost0(r,trnv,e)     = ed0_10(r,e,"fuel",trnv,"new","2010")/(tran_vmt0_10(r,trnv)*tran_loadf0_10(r,trnv));
4267   
4268      tran_cost0(r,trnv,"bal")= round((  tran_cost0(r,trnv,"y0")
4269                                       - tran_cost0(r,trnv,"id0")
4270                                       - tran_cost0(r,trnv,"kd0")
4271                                       - tran_cost0(r,trnv,"hkd0")
4272                                       - tran_cost0(r,trnv,"ld0")
4273                                       - tran_cost0(r,trnv,"ed0")     ),7);
4274   
4275  * Energy input cost in AFV
4276      afv_costT0(r,hdvi,e,t)$(afv_mpgeT0(r,hdvi,t) and afv_enmix0(hdvi,e))
4277           = 1/afv_mpgeT0(r,hdvi,t)
4278            *btu_gal("oil")* afv_enmix0(hdvi,e)
4279            /btu_conv(r,e,"fuel",hdvi)
4280            /sum(maptrn(hdv,hdvi),tran_loadf0_10(r,hdv)) ;
4281   
4282      afv_costT0(r,autoi,e,t)$(afv_mpgeT0(r,autoi,t) and afv_enmix0(autoi,e))
4283           = 1/afv_mpgeT0(r,autoi,t)
4284            *btu_gal("oil")* afv_enmix0(autoi,e)
4285            /btu_conv(r,e,"fuel",autoi)
4286            /tran_loadf0_10(r,"auto") ;
4287   
4288  display  afv_enmix0,afv_mpgeT0,tran_cost0;
4289   
4290      afv_costT0(r,autoi,e,t)$(not AFV(autoi)) = sum(maptrn(auto,autoi),tran_cost0(r,auto,e))
4291                                               *afv_mpgeT0(r,autoi,"2010")/afv_mpgeT0(r,autoi,t);
4292      afv_costT0(r,autoi,"ed0",t)              = sum(e,afv_costT0(r,autoi,e,t));
4293   
4294      afv_costT0(r,hdvi,e,t)$(not AFV(hdvi))  = sum(maptrn(hdv,hdvi),tran_cost0(r,hdv,e))
4295                                              *afv_mpgeT0(r,hdvi,"2010")/afv_mpgeT0(r,hdvi,t);
4296      afv_costT0(r,hdvi,"ed0",t)              = sum(e,afv_costT0(r,hdvi,e,t));
4297   
4298      afv_costT0(r,i,e,"2010")$((autoi(i) or hdvi(i)) and afv_costT0(r,i,e,"2010")=0 and  afv_costT0(r,i,e,"2015"))
4299         = afv_costT0(r,i,e,"2015");
4300   
4301      afv_costT0(r,i,"ed0","2010")$((autoi(i) or hdvi(i)) and afv_costT0(r,i,"ed0","2010")=0 and  afv_costT0(r,i,"ed0","2015"))
4302         = afv_costT0(r,i,"ed0","2015");
4303   
4304   
4305      afv_costT0(r,autoi,"ld0",t)$auto_noencost(r,"auto_oev","ld0","2010")
4306          =     sum(maptrn(auto,autoi),  tran_cost0(r,auto,"ld0"))
4307              * auto_noencost(r,autoi,"ld0",t)/auto_noencost(r,"auto_oev","ld0","2010");
4308   
4309      afv_costT0(r,autoi,"ld0",t)=     afv_costT0(r,autoi,"ld0",t)
4310                                   +  afv_costT0(r,autoi,"ed0",t) *afv_ensup0(autoi,"ld0");
4311   
4312      afv_costT0(r,hdvi,"ld0",t) =  sum(maptrn(hdv,hdvi),tran_cost0(r,hdv,"ld0"))
4313                                    + afv_costT0(r,hdvi,"ed0",t) *afv_ensup0(hdvi,"ld0");
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 85
ADAGE Model - Set Definition
C o m p i l a t i o n


4314      afv_costT0(r,i,"ld0","2010")$((autoi(i) or hdvi(i)) and afv_costT0(r,i,"ld0","2010")=0 and  afv_costT0(r,i,"ld0","2015"))
4315         = afv_costT0(r,i,"ld0","2015");
4316   
4317      afv_costT0(r,autoi,"kd0",t)=     sum(maptrn(auto,autoi),  tran_cost0(r,auto,"kd0"))
4318   
4319  * Difference between Auto and HDV is no need to add afv_kc_coef_infras in auto_afv as kd0 already include kd0_infr
4320                                     * auto_noencost(r,autoi,"kd0",t)/auto_noencost(r,"auto_oev","kd0","2010")
4321                                    +  afv_costT0(r,autoi,"ed0",t) *afv_ensup0(autoi,"kd0");
4322   
4323      afv_costT0(r,hdvi,"kd0",t) =  sum(maptrn(hdv,hdvi),tran_cost0(r,hdv,"kd0") *afv_kc_coef1(r,hdvi,t)*(1+afv_kc_coef_infras(r,hdvi,t)) )
4324                                     + afv_costT0(r,hdvi,"ed0",t) *afv_ensup0(hdvi,"kd0");
4325   
4326      afv_costT0(r,i,"kd0","2010")$((autoi(i) or hdvi(i)) and afv_costT0(r,i,"kd0","2010")=0 and  afv_costT0(r,i,"kd0","2015"))
4327         = afv_costT0(r,i,"kd0","2015");
4328   
4329   
4330      afv_costT0(r,autoi,"hkd0",t)=     sum(maptrn(auto,autoi),  tran_cost0(r,auto,"hkd0"))
4331                                    * auto_noencost(r,autoi,"kd0",t)/auto_noencost(r,"auto_oev","kd0","2010")
4332                                   +  afv_costT0(r,autoi,"ed0",t) *afv_ensup0(autoi,"hkd0");
4333   
4334      afv_costT0(r,hdvi,"hkd0",t) =   sum(maptrn(hdv,hdvi),tran_cost0(r,hdv,"hkd0")*afv_kc_coef1(r,hdvi,t)*(1+afv_kc_coef_infras(r,hdvi,t)) )
4335                                     + afv_costT0(r,hdvi,"ed0",t) *afv_ensup0(hdvi,"hkd0");
4336      afv_costT0(r,i,"hkd0","2010")$((autoi(i) or hdvi(i)) and afv_costT0(r,i,"hkd0","2010")=0 and  afv_costT0(r,i,"hkd0","2015"))
4337         = afv_costT0(r,i,"hkd0","2015");
4338   
4339      afv_costT0(r,autoi,g,t)     = sum(maptrn(auto,autoi),tran_cost0(r,auto,g));
4340      afv_costT0(r,autoi,"srv",t) = sum(maptrn(auto,autoi),tran_cost0(r,auto,"srv")
4341                                                          *(   afv_mant_coef2(r,auto)*afv_mant_coef(r,autoi)
****                                                                            $140                  $140
**** LINE   3691 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
4342                                                            + (1- afv_mant_coef2(r,auto)) ) );
4343      afv_costT0(r,hdvi,g,t)     = sum(maptrn(hdv,hdvi),tran_cost0(r,hdv,g));
4344      afv_costT0(r,hdvi,"srv",t) = sum(maptrn(hdv,hdvi),tran_cost0(r,hdv,"srv")
4345                                                          *(   afv_mant_coef2(r,hdv)*afv_mant_coef(r,hdvi)
4346                                                            + (1 - afv_mant_coef2(r,hdv)) ) );
4347   
4348      afv_costT0(r,autoi,"id0",t) = sum(g,afv_costT0(r,autoi,g,t));
4349      afv_costT0(r,hdvi,"id0",t)  = sum(g,afv_costT0(r,hdvi,g,t));
4350   
4351      afv_costT0(r,i,g,"2010")$((autoi(i) or hdvi(i)) and afv_costT0(r,i,g,"2010")=0 and  afv_costT0(r,i,g,"2015"))
4352         = afv_costT0(r,i,g,"2015");
4353      afv_costT0(r,i,"id0","2010")$((autoi(i) or hdvi(i)) and afv_costT0(r,i,"id0","2010")=0 and  afv_costT0(r,i,"id0","2015"))
4354         = afv_costT0(r,i,"id0","2015");
4355   
4356   
4357      afv_costT0(r,afv,"ff0",t)= 0.001* sum(maptrn3(OEV,afv),afv_costT0(r,OEV,"y0","2010"));
4358   
4359      afv_costT0(r,i,"y0",t)$(hdvi(i) or autoi(i))
4360                    =   afv_costT0(r,i,"kd0",t)
4361                      + afv_costT0(r,i,"hkd0",t)
4362                      + afv_costT0(r,i,"ld0",t)
4363                      + afv_costT0(r,i,"ed0",t)
4364                      + afv_costT0(r,i,"id0",t)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 86
ADAGE Model - Set Definition
C o m p i l a t i o n


4365                      + afv_costT0(r,i,"ff0",t) ;
4366   
4367  * Input share index relative to corresponding OEV in 2010  (it is excluded from tax)
4368      afv_ldt0(r,afv,v,t)$new(v)      =   afv_costT0(r,afv,"ld0",t)/(1+tl(r,afv))
4369                                        / sum(maptrn3(OEV,afv),afv_costT0(r,OEV,"y0","2010"));
4370      afv_idt0(r,afv,g,v,t)$new(v)    =   afv_costT0(r,afv,g,t)/(1+ti(r,g,afv))
4371                                        / sum(maptrn3(OEV,afv),afv_costT0(r,OEV,"y0","2010"));
4372   
4373  * Remove some tiny shares that are less than 1e-5 to other sectors
4374  parameter chk_afvidt;
4375      chk_afvidt(r,afv,g,v,t)$(new(v) and round(afv_idt0(r,afv,g,v,t),5)=0)=afv_idt0(r,afv,g,v,t);
4376  option chk_afvidt:4:4:1;
4377   
4378      afv_idt0(r,afv,"man",v,t)$(new(v)   and not autoafv(afv))
4379           = ( afv_costT0(r,afv,"man",t)  + sum(g$(not trn(g) and chk_afvidt(r,afv,g,v,t)),afv_costT0(r,afv,g,t)))
4380            /(1+ti(r,"man",afv))
4381            /sum(maptrn3(OEV,afv),afv_costT0(r,OEV,"y0","2010"));
4382   
4383      afv_idt0(r,afv,"rodf",v,t)$(new(v)  and not autoafv(afv))
4384           =  ( afv_costT0(r,afv,"rodf",t) + sum(g$(trn(g) and chk_afvidt(r,afv,g,v,t)),afv_costT0(r,afv,g,t)))
4385             /(1+ti(r,"rodf",afv))
4386             /sum(maptrn3(OEV,afv),afv_costT0(r,OEV,"y0","2010"));
4387   
4388      afv_idt0(r,afv,g,v,t)$(new(v)   and not autoafv(afv) and chk_afvidt(r,afv,g,v,t))  = 0;
4389      afv_idt0(r,afv,g,v,t)$(new(v)   and not autoafv(afv) and chk_afvidt(r,afv,g,v,t))  = 0;
4390   
4391      afv_edt0(r,afv,e,v,t)$(new(v)     and afv_costT0(r,afv,"y0",t))
4392          =  afv_costT0(r,afv,e,t) /sum(maptrn3(OEV,afv),afv_costT0(r,OEV,"y0","2010"));
4393      afv_hkdt0(r,afv,v,t)$(new(v)      and afv_costT0(r,afv,"y0",t))
4394          =  afv_costT0(r,afv,"hkd0",t)/(1+thk(r,afv))
4395            /sum(maptrn3(OEV,afv),afv_costT0(r,OEV,"y0","2010"));
4396   
4397      afv_kdt0(r,afv,"va",v,t)$(new(v)  and hdvi(afv) and afv_costT0(r,afv,"y0",t))
4398          =   afv_costT0(r,afv,"kd0",t)/(1+tk(r,"va",afv))
4399            / sum(maptrn3(OEV,afv),afv_costT0(r,OEV,"y0","2010"));
4400      afv_kdt0(r,afv,"ldv",v,t)$(new(v) and autoi(afv) and afv_costT0(r,afv,"y0",t))
4401         =  afv_costT0(r,afv,"kd0",t)/(1+tk(r,"ldv",afv))
4402            /sum(maptrn3(OEV,afv),afv_costT0(r,OEV,"y0","2010"));
4403   
4404      afv_fft0(r,afv,"ff0",v,t)$new(v)= 0.001;
4405      afv_kdt0(r,afv,k,v,t)$afv_kdt0(r,afv,k,v,t)  = afv_kdt0(r,afv,k,v,t)- afv_fft0(r,afv,"ff0",v,t);
4406   
4407      afv_yt0(r,afv,v,t)$(new(v)    and afv_costT0(r,afv,"y0",t))
4408         =  afv_costT0(r,afv,"y0",t)/(1-ty(r,afv))
4409           /sum(maptrn3(OEV,afv),afv_costT0(r,OEV,"y0","2010"));
4410   
4411      afv_markupt0(r,afv,v,t)$(new(v) and afv_costT0(r,afv,"y0",t))
4412         = afv_costT0(r,afv,"y0",t)/sum(maptrn3(OEV,afv),afv_costT0(r,OEV,"y0","2010"));
4413      afv_markupt0(r,i,v,t)$(new(v)   and afv_costT0(r,i,"y0",t) and (autoi(i) or hdvi(i)) )
4414         = afv_costT0(r,i,"y0",t)/sum(maptrn3(OEV,i),afv_costT0(r,OEV,"y0","2010"));
4415   
4416      chk_afvidt(r,afv,g,v,t)=0;
4417      chk_afvidt(r,afv,g,v,t)$(new(v) and round(afv_idt0(r,afv,g,v,t),5)=0)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 87
ADAGE Model - Set Definition
C o m p i l a t i o n


4418         = afv_idt0(r,afv,g,v,t);
4419   
4420  option chk_afvidt:4:4:1;
4421  option afv_idt0:3:4:1;
4422  display chk_afvidt,afv_idt0;
4423   
4424  display afv_costT0,afv_markupt0, afv_idt0,afv_edt0,afv_kdt0, afv_hkdt0,afv_ldt0;
4425   
4426  * Make adjustment and redo autoafvs cost share
4427  parameter AFV_pricT0      Price (2010$ per pass-mile for passenger)from 2010 to 2050
4428            AFV_loadf0      Average load factor (which differ by type then assumed to be same as gasoline car later) ;
4429   
4430      auto_pricT0(r,"Auto_OEV",t)    =  tran_cost0(r, "auto","y0")* auto_pricT0(r,"Auto_OEV",t)/auto_pricT0(r,"Auto_OEV","2010");
4431      auto_pricT0(r,autoafv,t)       =  afv_markupt0(r,autoafv,"new",t)* auto_pricT0(r,"Auto_OEV","2010");
4432   
4433  * Assume load factor for alternative fuel vehicles are same as gasoline car
4434      AFV_loadf0(r,hdvafv)  = sum(maptrn(i,hdvafv),tran_loadf0_10(r,i));
4435      AFV_loadf0(r,AutoAfv) = auto_loadf0(r,autoafv);
4436      AFV_loadf0(r,oev)     = sum(mapoev(oev,i),tran_loadf0(r,i));
4437   
4438      AFV_pricT0(r,hdvafv,v,t)$new(v)= sum(maptrn(i,hdvafv),afv_markupt0(r,hdvafv,v,t)*tran_pricT0_10(r,i,"2010"));
4439      AFV_pricT0(r,autoafv,v,t)$new(v)= auto_pricT0(r,autoafv,t);
4440   
4441  option AFV_loadf0:2:0:2
4442  display AFV_loadf0,AFV_pricT0;
4443   
4444  display tran_cost0,afv_costT0,auto_pricT0,AFV_pricT0,afv_markupt0;
4445   
4446      chk0_afvt0(r,afv,v,"y0",t)  = afv_yt0(r,afv,v,t)*(1-ty(r,afv))             ;
4447      chk0_afvt0(r,afv,v,"ld0",t) = afv_ldt0(r,afv,v,t)*(1+tl(r,afv))            ;
4448      chk0_afvt0(r,afv,v,"id0",t) = sum(g,afv_idt0(r,afv,g,v,t)*(1+ti(r,g,afv))) ;
4449      chk0_afvt0(r,afv,v,"ed0",t) = sum(e,afv_edt0(r,afv,e,v,t) ) ;
4450      chk0_afvt0(r,afv,v,"kd0",t) = sum(k,afv_kdt0(r,afv,k,v,t)*(1+tk(r,k,afv))) ;
4451      chk0_afvt0(r,afv,v,"hkd0",t)= afv_hkdt0(r,afv, v,t)*(1+thk(r,afv))         ;
4452      chk0_afvt0(r,afv,v,"ff0",t) = afv_fft0(r,afv,"ff0", v,t)                   ;
4453   
4454      chk0_afvt0(r,afv,v,"bal",t) = round((   chk0_afvt0(r,afv,v,"y0",t)
4455                                            - chk0_afvt0(r,afv,v,"ld0",t)
4456                                            - chk0_afvt0(r,afv,v,"id0",t)
4457                                            - chk0_afvt0(r,afv,v,"ed0",t)
4458                                            - chk0_afvt0(r,afv,v,"kd0",t)
4459                                            - chk0_afvt0(r,afv,v,"hkd0",t)
4460                                            - chk0_afvt0(r,afv,v,"ff0",t)), 6) ;
4461   
4462   
4463  display "before",afv_edt0,afv_ldt0,afv_idt0,afv_kdt0,afv_hkdt0,chk0_afvt0;
4464   
4466   
4467  * Auto_EFF: Ethanol-Flex Fuel ICE. Here it is aggregated to auto_OEV catergory.
4468      USA_auto_vmtV0("Auto_OEV") = tran_vmt0("USA","auto")/(USA_auto_stock0("Auto_OEV","2010")+USA_auto_stock0("Auto_EFF","2010"));
4469   
4470      afv_vmtT0(r,afv,v,t)$(new(v) and autoafv(afv) and sameas(r,"USA"))    = usa_vmtt0(afv,t);
4471      afv_vmtT0(r,afv,v,t)$(new(v) and autoafv(afv)and not sameas(r,"USA")) = auto_vmtT0(r,afv,t);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 88
ADAGE Model - Set Definition
C o m p i l a t i o n


4472  * EUR for HEV in 2010 is a little higher than USA.
4473      afv_vmtT0(r,"Auto_HEV",v,t)$(new(v) and sameas(r,"EUR"))      = afv_vmtT0(r,"Auto_HEV",v,t)/5;
4474      afv_vmtT0(r,"Auto_HEV",v,"2010")$(new(v) and sameas(r,"XAS")) = afv_vmtT0("USA","Auto_HEV",v,"2010")/2;
4475   
4476  * Model has two options for AFV growth: exogenous assumption as shown below or endogenously simulated based on cost over the time
4477      afv_vmtT0(r,afv,v,t)$(new(v) and rodfafv(afv) and sameas(r,"USA"))      =  usa_vmtt0(afv,t);
4478      afv_vmtT0(r,afv,v,t)$(new(v) and rodfafv(afv) and not sameas(r,"USA"))
4479            =  sum(maptrn(i,afv),tran_vmt0_10(r,i)* usa_vmtt0(afv,t)/tran_vmt0_10("USA","rodf")* tran_vmt0_10(r,i));
4480   
4481      afv_vmtT0(r,"rodp_gasv",v,t)$(new(v))  =  tran_vmt0_10(r,"rodp")*usa_vmtt0("rodf_gasv",t)/tran_vmt0_10("USA","rodf");
4482      afv_vmtT0(r,"rodp_hev ",v,t)$(new(v))  =  tran_vmt0_10(r,"rodp")*usa_vmtt0("rodf_hev ",t)/tran_vmt0_10("USA","rodf");
4483      afv_vmtT0(r,"rodp_bev ",v,t)$(new(v))  =  tran_vmt0_10(r,"rodp")*usa_vmtt0("rodf_bev ",t)/tran_vmt0_10("USA","rodf");
4484      afv_vmtT0(r,"rodp_fcev",v,t)$(new(v))  =  tran_vmt0_10(r,"rodp")*usa_vmtt0("rodf_fcev",t)/tran_vmt0_10("USA","rodf");
4485   
4486      afv_vmtT0(r,afv,v,t)$(t.val<2020 and hdvafv(afv)) = 0;
4487   
4488  *   Endowment use annual: allow larger expansion in the first 10 years
4489      afv_yent0(r,afv,v,t)$(new(v))  = afv_vmtT0(r,afv,v,t)*afv_loadf0(r,afv)*afv_pricT0(r,afv,v,t);
4490   
4491      afv_ff0(r,afv,v)$(new(v) and afv_yent0(r,afv,v,"2010"))   = 0.001;
4492      afv_ffen0(r,afv,v)$(new(v) and afv_yent0(r,afv,v,"2010")) = 0.001*afv_yent0(r,afv,v,"2010");
4493   
4494      afv_edtrdt0(r,afv,v,t)$new(v)   = afv_mpgeT0(r,afv,"2010")/afv_mpgeT0(r,afv,t);
4495   
4496      afv_t0(r,afv,v,t)$(new(v) and autoafv(afv) and afv_vmtT0(r,afv,v,t)) = 1;
4497      afv_t0(r,afv,v,t)$(new(v) and hdvafv(afv)  and ord(t)>=3)            = 1;
4498   
4499  display afv_mpgeT0,afv_vmtT0,afv_yent0;
4500   
4501  Set  age          Technology age (30 years lifetime)
4502  * Applies to onroad transportaiton and electricity generation
4503            / 0   age 0~4
4504              1   age 5~9
4505              2   age 10~14
4506              3   age 15~19
4507              4   age 20~24
4508              5   age 24~29
4509            /
4510        mapage(age,i)  Technology age age mapping
4511  * Applies to onroad transportaiton and electricity generation
4512            /  0            . new
4513              (1,2,3,4,5)   . extant /
4514   ;
4515   
4516  Table vmthis(age,*)    New vehicles's historical average annual sales or pvmt&tvmt data in USA from 1985 to 2010
4517  * Date: 10/11/2019
4518  * Age 0: 2010~2014; age 1: 2005~2009; age 2: 2000~2004; age 3: 1995~1999; age 4: 1990~1995; age 5: 1985~1989
4519  * Auto_sales (thousand sales): Table 3.5 in https://tedb.ornl.gov/wp-content/uploads/2019/03/TEDB_37-2.pdf#page=82
4520  * Auto_pvmt  (million pvmt): Table 3.5 in https://tedb.ornl.gov/wp-content/uploads/2019/03/TEDB_37-2.pdf#page=82
4521  * RodF (thousand sales): Table 3.5 in https://tedb.ornl.gov/wp-content/uploads/2019/03/TEDB_37-2.pdf#page=82
4522  * RodP (thousand sales): table 1-12 in https://www.bts.gov/content/us-sales-or-deliveries-new-aircraft-vehicles-vessels-and-other-conveyances
4523  * Raw data is saved in the tab "final_sales" in the file "Vintage Structure in ADAGE_data and example.xlsx"
4524       Auto_sale     auto_pvmt      RodF        RodP
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 89
ADAGE Model - Set Definition
C o m p i l a t i o n


4525  0    13925.400     341.113       544.800    390.623
4526  1    14445.600     354.268       527.800    424.310
4527  2    16804.000     412.823       478.200    490.448
4528  3    15356.000     371.699       487.200    393.500
4529  4    13578.200     322.335       306.400    331.730
4530  5    15038.400     351.717       310.400    301.943
4531  ;
4532   
4533  Table mpgehis(age,*)    New vehicles's historical average fuel economy (pvmt or TVMT per gallon of oil equivalent) in USA from 1985 to 2010
4534  * Date: 10/11/2019
4535  * Age 0: 2010~2014; age 1: 2005~2009; age 2: 2000~2004; age 3: 1995~1999; age 4: 1990~1995; age 5: 1985~1989
4536  * Auto and RodP: pvmt per gallon; RodF: tvmt per gallon. Load factor will be needed if convert to vmt per gallon
4537  * Source: moves model provided by EPA: https://nepis.epa.gov/Exe/ZyPDF.cgi?Dockey=P100NNUQ.pdf#page=24
4538  * Raw file: "fuel economy 1980~2010.xlsx"
4539             Auto          RodF        RodP
4540  0          35.11        17.20        123.66
4541  1          33.83        18.61        125.19
4542  2          33.18        17.62        123.87
4543  3          34.78        19.43        125.64
4544  4          35.47        20.10        126.11
4545  5          32.45        19.58        124.54
4546  ;
4547   
4548  parameter vmthis_trd(age,i)    New vehicles's historical VMT  trend (1 in 1985~1989 or age 5)
4549            mpgehis_trd(age,i)   New vehicles's historical mpge trend (1 in 1985~1989 or age 5);
4550  * Age 0: 2010~2014; age 1: 2005~2009; age 2: 2000~2004; age 3: 1995~1999; age 4: 1990~1995; age 5: 1985~1989
4551  * Use sales data as approximitation
4552     vmthis_trd(age,i)$vmthis("5",i)  = vmthis(age,i)/vmthis("5",i);
4553     vmthis_trd(age,"auto")$vmthis("5","auto_pvmt") = vmthis(age,"auto_pvmt")/vmthis("5","auto_pvmt");
4554   
4555     mpgehis_trd(age,i)$mpgehis("5",i)= mpgehis(age,i)/mpgehis("5",i);
4556   
4557   
4558  * 9-9-2019: VMT Schedule index and vehicle survival rate are obtained from EPA and saved in .\rawdata\VMT schedule and survival rate.xlsx
4559  *           Data comes from MOVES2014a (https://19january2017snapshot.epa.gov/moves/moves2014a-latest-version-motor-vehicle-emission-simulator-moves_.html)
4560  *   and aggregated using aeo sales data in 2010 as the weight. load factor is considered when aggregated from size class.
4561  table vmtschedule(age,i)  Onroad transportation vehicle VMT Schedule index (1 for new vehicle represented by age 0)
4562                    Auto           RodP          RodF
4563          0        1.0000        1.0000        1.0000
4564          1        0.8665        0.9728        0.8103
4565          2        0.7189        0.9497        0.5626
4566          3        0.5793        0.9300        0.3495
4567          4        0.4728        0.9133        0.2409
4568          5        0.4213        0.8991        0.1443
4569  ;
4570   
4571  table surrate(age,i)     Onroad transportation vehicle survival rate by age (1 for new vehicle represented by age 0)
4572                     Auto          RodP          RodF
4573          0        0.9870        1.0000        1.0000
4574          1        0.9092        0.9456        0.9456
4575          2        0.7267        0.7964        0.7964
4576          3        0.3865        0.6047        0.6047
4577          4        0.1648        0.4086        0.4086
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 90
ADAGE Model - Set Definition
C o m p i l a t i o n


4578          5        0.0726        0.2514        0.2514
4579  ;
4580   
4581  * Now introduce the vintage structure of AFV
4582  parameter vmtbyage           Vehicle weighted average VMT Schedule index when they age (1 for new vehicle) for new vehicles in 2010 and beyond
4583            vmtbyage_his5yl    Vehicle VMT Schedule index for vehicles in 1985-2009 considering the growth trend five years later
4584            vmtbyage_histot    Total VehicleVMT Schedule index for vehicles in 1985-2009 considering the growth trend
4585            vmtbyage_his       Vehicle weighted average VMT Schedule index for vehicles in 1985-2009 considering the growth trend relative to vmt schedule in used vehicles in 2010  ;
4586  * Incorporate VMT schedule and survival rate by vehicle age
4587      vmtbyage(age,i)                        = vmtschedule(age,i)*surrate(age,i);
4588   
4589      vmtbyage_his5yl("1",age,i)$(age.val>0) = vmthis_trd(age,i)*vmtbyage(age,i);
4590      vmtbyage_his5yl("2",age,i)$(age.val>1) = vmthis_trd(age-1,i)*vmtbyage(age,i);
4591      vmtbyage_his5yl("3",age,i)$(age.val>2) = vmthis_trd(age-2,i)*vmtbyage(age,i);
4592      vmtbyage_his5yl("4",age,i)$(age.val>3) = vmthis_trd(age-3,i)*vmtbyage(age,i);
4593      vmtbyage_his5yl("5",age,i)$(age.val>4) = vmthis_trd(age-4,i)*vmtbyage(age,i);
4594   
4595      vmtbyage_histot("1",i) = sum(age$(age.val>0), vmthis_trd(age,i)  *vmtbyage(age,i));
4596      vmtbyage_histot("2",i) = sum(age$(age.val>1), vmthis_trd(age-1,i)*vmtbyage(age,i));
4597      vmtbyage_histot("3",i) = sum(age$(age.val>2), vmthis_trd(age-2,i)*vmtbyage(age,i));
4598      vmtbyage_histot("4",i) = sum(age$(age.val>3), vmthis_trd(age-3,i)*vmtbyage(age,i));
4599      vmtbyage_histot("5",i) = sum(age$(age.val>4), vmthis_trd(age-4,i)*vmtbyage(age,i));
4600   
4601      vmtbyage_his(age,i)$(vmtbyage_histot("1",i)) = vmtbyage_histot(age,i)/vmtbyage_histot("1",i);
4602      vmtbyage_his(age,j)$(not afv(j))  = sum(maptrn2(i,j),vmtbyage_his(age,i)) ;
4603   
4604      vmtbyage(age,j)                   = sum(maptrn2(i,j),vmtbyage(age,i));
4605   
4606  parameter new_mpgeT(r,*,t)      Fuel economy for new conventional vehicles over time
4607            old_mpgeT(r,*,t)      Fuel economy for used conventional vehicles over time taking into consideration stock turnover
4608   
4609            mk(r,i,label,v)       Markup factor for mpge for conventional vehicles
4610            mkt(r,i,label,v,t)    Markup factor for mpge for conventional vehicles over time;
4611   
4612      new_mpgeT(r,trnv,t)      = sum( mapoev(oev,trnv),afv_mpgeT0(r,oev,t));
4613      old_mpgeT(r,trnv,"2010") = tran_mpge0(r,trnv);
4614   
4615  * Update mpge for old vehicle in OEV required by EPA. This is the presumed assumption based on presumed stock turnover rate
4616  * Later in loop file, it should be updated using simulated results from previous periods
4617  * Assuming 30 years lifetime for HDV
4618      old_mpgeT(r,trn,"2010")$trnv(trn) = 6/6*tran_mpge0(r,trn);
4619      old_mpgeT(r,trn,"2015")$trnv(trn) = 5/6*old_mpgeT(r,trn,"2010")+ 1/6*new_mpgeT(r,trn,"2010");
4620      old_mpgeT(r,trn,"2020")$trnv(trn) = 4/6*old_mpgeT(r,trn,"2010")+ 1/6*new_mpgeT(r,trn,"2010")+ 1/6*new_mpgeT(r,trn,"2015");
4621      old_mpgeT(r,trn,"2025")$trnv(trn) = 3/6*old_mpgeT(r,trn,"2010")+ 1/6*new_mpgeT(r,trn,"2010")+ 1/6*new_mpgeT(r,trn,"2015")
4622                                        +1/6*new_mpgeT(r,trn,"2020") ;
4623      old_mpgeT(r,trn,"2030")$trnv(trn) = 2/6*old_mpgeT(r,trn,"2010")+ 1/6*new_mpgeT(r,trn,"2010")+ 1/6*new_mpgeT(r,trn,"2015")
4624                                        + 1/6*new_mpgeT(r,trn,"2020")+ 1/6*new_mpgeT(r,trn,"2025") ;
4625   
4626      old_mpgeT(r,trn,"2035")$trnv(trn) = 1/6*old_mpgeT(r,trn,"2010")+ 1/6*new_mpgeT(r,trn,"2010")+ 1/6*new_mpgeT(r,trn,"2015")
4627                                        + 1/6*new_mpgeT(r,trn,"2020")+ 1/6*new_mpgeT(r,trn,"2025")+ 1/6*new_mpgeT(r,trn,"2030") ;
4628      loop(t$(ord(t)>6),
4629          old_mpgeT(r,trn,t)$trnv(trn)  = 1/6*(  new_mpgeT(r,trn,t-6) + new_mpgeT(r,trn,t-5) + new_mpgeT(r,trn,t-4)
4630                                               + new_mpgeT(r,trn,t-3) + new_mpgeT(r,trn,t-2) + new_mpgeT(r,trn,t-1)) ;);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 91
ADAGE Model - Set Definition
C o m p i l a t i o n


4631   
4632      mkt(r,trn,label,v,t) = 1;
4633      mkt(r,trn,"ed0",v,t)$(new(v) and new_mpgeT(r,trn,t) and num(r))     = tran_mpge0(r,trn)/new_mpgeT(r,trn,t);
4634      mkt(r,trn,"ed0",v,t)$(extant(v) and old_mpgeT(r,trn,t) and num(r))  = tran_mpge0(r,trn)/old_mpgeT(r,trn,t);
4635   
4636      mkt(r,trn,label,v,t)$(not num(r)) =1;
4637      mkt(r,trn,"ed0",v,t)$(new(v)    and new_mpgeT(r,trn,t) and not num(r))   = tran_mpge0(r,trn)/new_mpgeT(r,trn,t);
4638      mkt(r,trn,"ed0",v,t)$(extant(v) and old_mpgeT(r,trn,t) and not num(r))   = tran_mpge0(r,trn)/old_mpgeT(r,trn,t);
4639   
4640      mk(r,trnv,label,v)= 1;
4641  display  old_mpgeT,new_mpgeT,mkt;
4642   
4643  * Presumed vehicle turnover based on vehicle age. This could become dynamic for used vehicles in the loop.gms
4644      afv_yt0(r,afv,"extant",t)$(t.val=2010)       = afv_yt0(r,afv,"new",t)    ;
4645      afv_ldt0(r,afv,  "extant",t)$(t.val=2010)    = afv_ldt0(r,afv,"new",t)   ;
4646      afv_idt0(r,afv,g,"extant",t)$(t.val=2010)    = afv_idt0(r,afv,g,"new",t) ;
4647      afv_edt0(r,afv,e,"extant",t)$(t.val=2010)    = afv_edt0(r,afv,e,"new",t) ;
4648      afv_kdt0(r,afv,k,"extant",t)$(t.val=2010)    = afv_kdt0(r,afv,k,"new",t) ;
4649      afv_hkdt0(r,afv,"extant",t)$(t.val=2010 )    = afv_hkdt0(r,afv,"new",t)  ;
4650      afv_edtrdt0(r,afv,"extant",t)$(t.val=2010 )  = afv_edtrdt0(r,afv,"new",t);
4651      afv_markupt0(r,afv,"extant",t)$(t.val=2010)  = afv_markupt0(r,afv,"new",t);
4652      afv_fft0(r,afv,"ff0", "extant",t)            = 0  ;
4653   
4654      afv_yt0(r,afv,   "extant",t)$(t.val=2015)    = afv_yt0(r,afv,"new",t-1)    ;
4655      afv_ldt0(r,afv,  "extant",t)$(t.val=2015)    = afv_ldt0(r,afv,"new",t-1)   ;
4656      afv_idt0(r,afv,g,"extant",t)$(t.val=2015)    = afv_idt0(r,afv,g,"new",t-1) ;
4657      afv_edt0(r,afv,e,"extant",t)$(t.val=2015)    = afv_edt0(r,afv,e,"new",t-1) ;
4658      afv_kdt0(r,afv,k,"extant",t)$(t.val=2015)    = afv_kdt0(r,afv,k,"new",t-1) ;
4659      afv_hkdt0(r,afv, "extant",t)$(t.val=2015)    = afv_hkdt0(r,afv,"new",t-1)  ;
4660      afv_edtrdt0(r,afv,"extant",t)$(t.val=2015 )  = afv_edtrdt0(r,afv,"new",t-1);
4661      afv_markupt0(r,afv,"extant",t)$(t.val=2015)  = afv_markupt0(r,afv,"new",t-1);
4662   
4663      afv_yt0(r,afv,  "extant",t)$(t.val=2020   )  = 5/6* afv_yt0(r,afv,"new",t-2)     + 1/6* afv_yt0(r,afv,"new",t-1)    ;
4664      afv_ldt0(r,afv,  "extant",t)$(t.val=2020  )  = 5/6* afv_ldt0(r,afv,"new",t-2)    + 1/6* afv_ldt0(r,afv,"new",t-1)   ;
4665      afv_idt0(r,afv,g,"extant",t)$(t.val=2020  )  = 5/6* afv_idt0(r,afv,g,"new",t-2)  + 1/6* afv_idt0(r,afv,g,"new",t-1) ;
4666      afv_edt0(r,afv,e,"extant",t)$(t.val=2020  )  = 5/6* afv_edt0(r,afv,e,"new",t-2)  + 1/6* afv_edt0(r,afv,e,"new",t-1) ;
4667      afv_kdt0(r,afv,k,"extant",t)$(t.val=2020  )  = 5/6* afv_kdt0(r,afv,k,"new",t-2)  + 1/6* afv_kdt0(r,afv,k,"new",t-1) ;
4668      afv_hkdt0(r,afv, "extant",t)$(t.val=2020  )  = 5/6* afv_hkdt0(r,afv,"new",t-2)   + 1/6* afv_hkdt0(r,afv,"new",t-1)  ;
4669      afv_edtrdt0(r,afv,"extant",t)$(t.val=2020 )  = 5/6* afv_edtrdt0(r,afv,"new",t-2) + 1/6* afv_edtrdt0(r,afv,"new",t-1);
4670      afv_markupt0(r,afv,"extant",t)$(t.val=2020)  = 5/6* afv_markupt0(r,afv,"new",t-2)+ 1/6* afv_markupt0(r,afv,"new",t-1);
4671   
4672      afv_yt0(r,afv,  "extant",t)$(t.val=2025   )  = 4/6* afv_yt0(r,afv,"new",t-3)     + 1/6* afv_yt0(r,afv,"new",t-2)     + 1/6* afv_yt0(r,afv,"new",t-1)    ;
4673      afv_ldt0(r,afv,  "extant",t)$(t.val=2025  )  = 4/6* afv_ldt0(r,afv,"new",t-3)    + 1/6* afv_ldt0(r,afv,"new",t-2)    + 1/6* afv_ldt0(r,afv,"new",t-1)   ;
4674      afv_idt0(r,afv,g,"extant",t)$(t.val=2025  )  = 4/6* afv_idt0(r,afv,g,"new",t-3)  + 1/6* afv_idt0(r,afv,g,"new",t-2)  + 1/6* afv_idt0(r,afv,g,"new",t-1) ;
4675      afv_edt0(r,afv,e,"extant",t)$(t.val=2025  )  = 4/6* afv_edt0(r,afv,e,"new",t-3)  + 1/6* afv_edt0(r,afv,e,"new",t-2)  + 1/6* afv_edt0(r,afv,e,"new",t-1) ;
4676      afv_kdt0(r,afv,k,"extant",t)$(t.val=2025  )  = 4/6* afv_kdt0(r,afv,k,"new",t-3)  + 1/6* afv_kdt0(r,afv,k,"new",t-2)  + 1/6* afv_kdt0(r,afv,k,"new",t-1) ;
4677      afv_hkdt0(r,afv, "extant",t)$(t.val=2025  )  = 4/6* afv_hkdt0(r,afv,"new",t-3)   + 1/6* afv_hkdt0(r,afv,"new",t-2)   + 1/6* afv_hkdt0(r,afv,"new",t-1)  ;
4678      afv_edtrdt0(r,afv,"extant",t)$(t.val=2025 )  = 4/6* afv_edtrdt0(r,afv,"new",t-3) + 1/6* afv_edtrdt0(r,afv,"new",t-2) + 1/6* afv_edtrdt0(r,afv,"new",t-1);
4679      afv_markupt0(r,afv,"extant",t)$(t.val=2025)  = 4/6* afv_markupt0(r,afv,"new",t-3)+ 1/6* afv_markupt0(r,afv,"new",t-2)+ 1/6* afv_markupt0(r,afv,"new",t-1);
4680   
4681      afv_yt0(r,afv,   "extant",t)$(t.val=2030  )  = 3/6* afv_yt0(r,afv,"new",t-4)     + 1/6* afv_yt0(r,afv,"new",t-3)     + 1/6* afv_yt0(r,afv,"new",t-2)     + 1/6* afv_yt0(r,afv,"new",t-1)    ;
4682      afv_ldt0(r,afv,  "extant",t)$(t.val=2030  )  = 3/6* afv_ldt0(r,afv,"new",t-4)    + 1/6* afv_ldt0(r,afv,"new",t-3)    + 1/6* afv_ldt0(r,afv,"new",t-2)    + 1/6* afv_ldt0(r,afv,"new",t-1)   ;
4683      afv_idt0(r,afv,g,"extant",t)$(t.val=2030  )  = 3/6* afv_idt0(r,afv,g,"new",t-4)  + 1/6* afv_idt0(r,afv,g,"new",t-3)  + 1/6* afv_idt0(r,afv,g,"new",t-2)  + 1/6* afv_idt0(r,afv,g,"new",t-1) ;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 92
ADAGE Model - Set Definition
C o m p i l a t i o n


4684      afv_edt0(r,afv,e,"extant",t)$(t.val=2030  )  = 3/6* afv_edt0(r,afv,e,"new",t-4)  + 1/6* afv_edt0(r,afv,e,"new",t-3)  + 1/6* afv_edt0(r,afv,e,"new",t-2)  + 1/6* afv_edt0(r,afv,e,"new",t-1) ;
4685      afv_kdt0(r,afv,k,"extant",t)$(t.val=2030  )  = 3/6* afv_kdt0(r,afv,k,"new",t-4)  + 1/6* afv_kdt0(r,afv,k,"new",t-3)  + 1/6* afv_kdt0(r,afv,k,"new",t-2)  + 1/6* afv_kdt0(r,afv,k,"new",t-1) ;
4686      afv_hkdt0(r,afv, "extant",t)$(t.val=2030  )  = 3/6* afv_hkdt0(r,afv,"new",t-4)   + 1/6* afv_hkdt0(r,afv,"new",t-3)   + 1/6* afv_hkdt0(r,afv,"new",t-2)   + 1/6* afv_hkdt0(r,afv,"new",t-1)  ;
4687      afv_edtrdt0(r,afv,"extant",t)$(t.val=2030 )  = 3/6* afv_edtrdt0(r,afv,"new",t-4) + 1/6* afv_edtrdt0(r,afv,"new",t-3) + 1/6* afv_edtrdt0(r,afv,"new",t-2) + 1/6* afv_edtrdt0(r,afv,"new",t-1);
4688      afv_markupt0(r,afv,"extant",t)$(t.val=2030)  = 3/6* afv_markupt0(r,afv,"new",t-4)+ 1/6* afv_markupt0(r,afv,"new",t-3)+ 1/6* afv_markupt0(r,afv,"new",t-2)+ 1/6* afv_markupt0(r,afv,"new",t-1);
4689   
4690      afv_yt0(r,afv,   "extant",t)$(t.val=2035  )  = 2/6* afv_yt0(r,afv,"new",t-5)     + 1/6* afv_yt0(r,afv,"new",t-4)     + 1/6* afv_yt0(r,afv,"new",t-3)     + 1/6* afv_yt0(r,afv,"new",t-2)     + 1/6* afv_yt0(r,afv,"new",t-1)    ;
4691      afv_ldt0(r,afv,  "extant",t)$(t.val=2035  )  = 2/6* afv_ldt0(r,afv,"new",t-5)    + 1/6* afv_ldt0(r,afv,"new",t-4)    + 1/6* afv_ldt0(r,afv,"new",t-3)    + 1/6* afv_ldt0(r,afv,"new",t-2)    + 1/6* afv_ldt0(r,afv,"new",t-1)   ;
4692      afv_idt0(r,afv,g,"extant",t)$(t.val=2035  )  = 2/6* afv_idt0(r,afv,g,"new",t-5)  + 1/6* afv_idt0(r,afv,g,"new",t-4)  + 1/6* afv_idt0(r,afv,g,"new",t-3)  + 1/6* afv_idt0(r,afv,g,"new",t-2)  + 1/6* afv_idt0(r,afv,g,"new",t-1) ;
4693      afv_edt0(r,afv,e,"extant",t)$(t.val=2035  )  = 2/6* afv_edt0(r,afv,e,"new",t-5)  + 1/6* afv_edt0(r,afv,e,"new",t-4)  + 1/6* afv_edt0(r,afv,e,"new",t-3)  + 1/6* afv_edt0(r,afv,e,"new",t-2)  + 1/6* afv_edt0(r,afv,e,"new",t-1) ;
4694      afv_kdt0(r,afv,k,"extant",t)$(t.val=2035  )  = 2/6* afv_kdt0(r,afv,k,"new",t-5)  + 1/6* afv_kdt0(r,afv,k,"new",t-4)  + 1/6* afv_kdt0(r,afv,k,"new",t-3)  + 1/6* afv_kdt0(r,afv,k,"new",t-2)  + 1/6* afv_kdt0(r,afv,k,"new",t-1) ;
4695      afv_hkdt0(r,afv, "extant",t)$(t.val=2035  )  = 2/6* afv_hkdt0(r,afv,"new",t-5)   + 1/6* afv_hkdt0(r,afv,"new",t-4)   + 1/6* afv_hkdt0(r,afv,"new",t-3)   + 1/6* afv_hkdt0(r,afv,"new",t-2)   + 1/6* afv_hkdt0(r,afv,"new",t-1)  ;
4696      afv_edtrdt0(r,afv,"extant",t)$(t.val=2035 )  = 2/6* afv_edtrdt0(r,afv,"new",t-5) + 1/6* afv_edtrdt0(r,afv,"new",t-4) + 1/6* afv_edtrdt0(r,afv,"new",t-3) + 1/6* afv_edtrdt0(r,afv,"new",t-2) + 1/6* afv_edtrdt0(r,afv,"new",t-1);
4697      afv_markupt0(r,afv,"extant",t)$(t.val=2035 ) = 2/6* afv_markupt0(r,afv,"new",t-5)+ 1/6* afv_markupt0(r,afv,"new",t-4)+ 1/6* afv_markupt0(r,afv,"new",t-3)+ 1/6* afv_markupt0(r,afv,"new",t-2)+ 1/6* afv_markupt0(r,afv,"new",t-1);
4698   
4699    loop(t$(ord(t)>6),
4700      afv_yt0(r,afv,   "extant",t)   = 1/6* afv_yt0(r,afv,"new",t-6)     + 1/6* afv_yt0(r,afv,"new",t-5)     + 1/6* afv_yt0(r,afv,"new",t-4)     + 1/6* afv_yt0(r,afv,"new",t-3)     + 1/6* afv_yt0(r,afv,"new",t-2)     + 1/6* afv_yt0(r,afv,"new",t-1)   
       ;
4701      afv_ldt0(r,afv,  "extant",t)   = 1/6* afv_ldt0(r,afv,"new",t-6)    + 1/6* afv_ldt0(r,afv,"new",t-5)    + 1/6* afv_ldt0(r,afv,"new",t-4)    + 1/6* afv_ldt0(r,afv,"new",t-3)    + 1/6* afv_ldt0(r,afv,"new",t-2)    + 1/6* afv_ldt0(r,afv,"new",t-1)  
       ;
4702      afv_idt0(r,afv,g,"extant",t)   = 1/6* afv_idt0(r,afv,g,"new",t-6)  + 1/6* afv_idt0(r,afv,g,"new",t-5)  + 1/6* afv_idt0(r,afv,g,"new",t-4)  + 1/6* afv_idt0(r,afv,g,"new",t-3)  + 1/6* afv_idt0(r,afv,g,"new",t-2)  + 1/6* afv_idt0(r,afv,g,"new",t-1)
       ;
4703      afv_edt0(r,afv,e,"extant",t)   = 1/6* afv_edt0(r,afv,e,"new",t-6)  + 1/6* afv_edt0(r,afv,e,"new",t-5)  + 1/6* afv_edt0(r,afv,e,"new",t-4)  + 1/6* afv_edt0(r,afv,e,"new",t-3)  + 1/6* afv_edt0(r,afv,e,"new",t-2)  + 1/6* afv_edt0(r,afv,e,"new",t-1)
       ;
4704      afv_kdt0(r,afv,k,"extant",t)   = 1/6* afv_kdt0(r,afv,k,"new",t-6)  + 1/6* afv_kdt0(r,afv,k,"new",t-5)  + 1/6* afv_kdt0(r,afv,k,"new",t-4)  + 1/6* afv_kdt0(r,afv,k,"new",t-3)  + 1/6* afv_kdt0(r,afv,k,"new",t-2)  + 1/6* afv_kdt0(r,afv,k,"new",t-1)
       ;
4705      afv_hkdt0(r,afv, "extant",t)   = 1/6* afv_hkdt0(r,afv,"new",t-6)   + 1/6* afv_hkdt0(r,afv,"new",t-5)   + 1/6* afv_hkdt0(r,afv,"new",t-4)   + 1/6* afv_hkdt0(r,afv,"new",t-3)   + 1/6* afv_hkdt0(r,afv,"new",t-2)   + 1/6* afv_hkdt0(r,afv,"new",t-1) 
       ;
4706      afv_edtrdt0(r,afv,"extant",t)  = 1/6* afv_edtrdt0(r,afv,"new",t-6) + 1/6* afv_edtrdt0(r,afv,"new",t-5) + 1/6* afv_edtrdt0(r,afv,"new",t-4) + 1/6* afv_edtrdt0(r,afv,"new",t-3) + 1/6* afv_edtrdt0(r,afv,"new",t-2) + 1/6* afv_edtrdt0(r,afv,"new",t-1
      );
4707      afv_markupt0(r,afv,"extant",t) = 1/6* afv_markupt0(r,afv,"new",t-6)+ 1/6* afv_markupt0(r,afv,"new",t-5)+ 1/6* afv_markupt0(r,afv,"new",t-4)+ 1/6* afv_markupt0(r,afv,"new",t-3)+ 1/6* afv_markupt0(r,afv,"new",t-2)+ 1/6* afv_markupt0(r,afv,"new",t-
      1);
4708       );
4709   
4710  * Add fixed factor endowment in new vehicles to capital in used vehicles
4711      afv_kdt0(r,afv,k,"extant",t)$ afv_kdt0(r,afv,k,"extant",t) =  afv_kdt0(r,afv,k,"extant",t) + 0.001;
4712   
4713      afv_t0(r,afv,v,t)$(new(v) and autoafv(afv) and afv_vmtT0(r,afv,v,t)) = 1;
4714      afv_t0(r,afv,v,t)$(new(v) and hdvafv(afv)  and ord(t)>=3)            = 1;
4715   
4716      afv_t0(r,afv,"extant",t)$(autoafv(afv) and afv_vmtT0(r,afv,"new",t-1))= 1;
4717      afv_t0(r,afv,"extant",t)$(hdvafv(afv)  and ord(t)>=4)                 = 1;
4718   
4719      chk0_afvt0(r,afv,v,"y0",t)   = afv_yt0(r,afv,v,t)*(1-ty(r,afv));
4720      chk0_afvt0(r,afv,v,"ld0",t)  = afv_ldt0(r,afv,v,t)*(1+tl(r,afv))    ;
4721      chk0_afvt0(r,afv,v,"id0",t)  = sum(g,afv_idt0(r,afv,g,v,t)*(1+ti(r,g,afv) ) );
4722      chk0_afvt0(r,afv,v,"ed0",t)  = sum(e,afv_edt0(r,afv,e,v,t) ) ;
4723      chk0_afvt0(r,afv,v,"kd0",t)  = sum(k,afv_kdt0(r,afv,k,v,t)*(1+tk(r,k,afv) )) ;
4724      chk0_afvt0(r,afv,v,"hkd0",t) = afv_hkdt0(r,afv, v,t)*(1+ thk(r,afv))  ;
4725      chk0_afvt0(r,afv,v,"ff0",t)  = afv_fft0(r,afv,"ff0", v,t);
4726   
4727      chk0_afvt0(r,afv,v,"bal",t)  = round((  chk0_afvt0(r,afv,v,"y0",t)
4728                                            - chk0_afvt0(r,afv,v,"ld0",t)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 93
ADAGE Model - Set Definition
C o m p i l a t i o n


4729                                            - chk0_afvt0(r,afv,v,"id0",t)
4730                                            - chk0_afvt0(r,afv,v,"ed0",t)
4731                                            - chk0_afvt0(r,afv,v,"kd0",t)
4732                                            - chk0_afvt0(r,afv,v,"hkd0",t)
4733                                            - chk0_afvt0(r,afv,v,"ff0",t)), 6) ;
4734   
4735  display chk0_afvt0,afv_idt0,afv_kdt0, afv_hkdt0,afv_yt0,afv_edt0;
4736   
4737      afv_ld0(r,afv,v)     = afv_ldt0(r,afv,v,"2010")   ;
4738      afv_id0(r,afv,g,v)   = afv_idt0(r,afv,g,v,"2010") ;
4739      afv_ed0(r,afv,e,v)   = afv_edt0(r,afv,e,v,"2010") ;
4740      afv_kd0(r,afv,k,v)   = afv_kdt0(r,afv,k,v,"2010") ;
4741      afv_hkd0(r,afv,v)    = afv_hkdt0(r,afv,v,"2010")  ;
4742      afv_edtrd0(r,afv,v)  = afv_edtrdt0(r,afv,v,"2010");
4743      afvmarkup(r,afv,v)   = afv_markupt0(r,afv,v,"2010");
4744   
4745   
4746  display afv_vmtT0,tran_loadf0,auto_loadf0,auto_loadfT0,tran_vmt0,afv_markupt0,afv_pricT0,afv_edtrdt0,afv_mpgeT0,afv_ff0,tran_cost0,afv_kdt0,afv_edt0,chk0_afvt0,afv_t0,afv_yent0,tl,tk;
4747   
4748  * Dynamic input cost approach for used AFVs in the loop.gms
4749  parameter  afv_ldt00
4750             afv_idt00
4751             afv_kdt00
4752             afv_hkdt00
4753             afv_edt00
4754             afv_edtrdt00  ;
4755   
4756  parameter         afv_elas(i)      fixed factor elasticity for AFV
4757  * Based on econometric estimation from Wards auto data
4758    /
4759  *    Auto_OEV   0.132
4760       Auto_HEV   0.631
4761       Auto_GASV  0.492
4762       Auto_BEV   0.631
4763       Auto_FCEV  0.631
4764     /;
4765   
4766  * Based on MIT EPPA model
4767      afv_elas(autoafv) =  0.20 ;
4768      afv_elas(hdvafv)  =  0.20 ;
4769      afv_elas(afv)$(gasv(afv)) = 0.10;
4770      afv_elas(afv)$(fcev(afv)) = 0.10;
4771      afv_elas(trnv)            = 0.10 ;
4772   
4773  parameter trn_ffen0(r,i,v)     Fixed factor endowment in conventional transportation
4774            trn_ffent0(r,i,t)    Fixed factor endowment in conventional transportation in new;
4775      trn_ffen0(r,i,v)$(new(v) and trnv(i)) = 0.001*y0(r,i,v);
4776   
4777   
4778  parameter kdcost(r,trn)        Capital cost in OEV transportation ($ per mile)
4779            ldcost(r,trn)        Capital cost in OEV transportation ($ per mile)
4780            edcost(r,trn)        Energy cost in OEV transportation ($ per mile) ;
4781   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 94
ADAGE Model - Set Definition
C o m p i l a t i o n


4782   
4783      kdcost(r,trn)$tran_vmt0(r,trn) = sum(k,kd0(r,k,trn,"new"))/ tran_vmt0(r,trn);
4784      ldcost(r,trn)$tran_vmt0(r,trn) = ld0(r,trn,"new")/ tran_vmt0(r,trn);
4785      edcost(r,trn)$tran_vmt0(r,trn) = sum(e,ed0(r,e,"fuel",trn,"new"))/ tran_vmt0(r,trn);
4786   
4787  display USA_auto_stock0, USA_auto_vmtV0, kdcost,ldcost,edcost,mapoev;
4788   
4789  *End of transportation sector
4790  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
4791   
4792   
4793   
4794  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
4795  *          Check some production and consumption function and supply-demand balance
4796  *             due to introduction of additional modeling features
4797  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
4798   
4799  parameter pctax         Carbon tax ($ per ton of CO2e)       /28/;
4800  * Given a small carbon tax assumption and check the carbon tax input cost relative to other inputs in the production block
4801   
4802  parameter chk0_ag       Check balance on agricultural production
4803            chk0_shr      Check share of armington goods in production
4804            chk0_agp      Check agriculture price to see if input price=1+tax
4805            chk0_lnd      Check balance on land conversion
4806            chk0_lrent    Check the land rent
4807            chk0_x        Check the balance of export
4808            chk0_a        Check the balance of intermediate good production
4809            chk0_exy      Check ag & industry production (extant)
4810            chk0_l        Check labor balance
4811            chk0_lndp     Check the reference price of land
4812            chk0_ff       Check fossil fuel balance
4813            chk0_trnP     Check transportation production balance
4814            chk0_trnM     Check transportation market balance
4815            chk0_auto     Check auto energy supply-demand balance
4816            chk0_rnweleP  Check production balance in renewable electricity generation
4817            chk0_en       Check energy supply-demand balance
4818            chk0_m        Check import balance
4819            chk0_trd      Check trade balance
4820            pmxt0         Trade margin including import export tax and transportation cost margin
4821   
4822            chk0_c        Check household consumption
4823            chk0_w        Check Welfare
4824            chk0_py       Check production and domestic consumption
4825            chk0_emkt     Check transportation energy market structure and margin ;
4826   
4827   
4828      chk0_en(r,e,use,i,"ed0")   = ed0(r,e,use,i,"new");
4829      chk0_en(r,e,use,i,"ert0")  = ertl0(r,e,use,i);
4830      chk0_en(r,e,use,i,"ed0-ert0")=  chk0_en(r,e,use,i,"ed0")
4831                                    - chk0_en(r,e,use,i,"ert0");
4832   
4833      chk0_auto(r,e,'retail')   =  gal_conv(r,e,"fuel","auto")* ertl0(r,e,"fuel",'auto');
4834      chk0_auto(r,e,'demand')   =  gal_conv(r,e,"fuel","auto")* sum(vnum(v), ed0(r,e,"fuel","auto",v)  );
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 95
ADAGE Model - Set Definition
C o m p i l a t i o n


4835   
4836   
4837      chk0_trnP(r,trn,"y0") =  y0(r,trn,"new")*(1-ty(r,trn));
4838      chk0_trnP(r,trn,"id0") = sum(g,id0(r,g,trn,"new")*(1+ti(r,g,trn)));
4839      chk0_trnP(r,trn,"kd0") = sum(k,kd0(r,k,trn,"new")*(1+tk(r,k,trn)));
4840      chk0_trnP(r,trn,"hkd0")= hkd0(r,trn,"new")*(1+thk(r,trn));
4841      chk0_trnP(r,trn,"ld0") = ld0(r,trn,"new")*(1+tl(r,trn));
4842      chk0_trnP(r,trn,"ed0") = sum(e,ed0(r,e,"fuel",trn,"new"));
4843      chk0_trnP(r,trn,"ed0")$auto(trn)= fuel0(r,"new");
4844      chk0_trnP(r,trn,"bal")= round((chk0_trnP(r,trn,"y0")
4845                                   - chk0_trnP(r,trn,"id0")
4846                                   - chk0_trnP(r,trn,"kd0")
4847                                   - chk0_trnP(r,trn,"hkd0")
4848                                   - chk0_trnP(r,trn,"ld0")
4849                                   - chk0_trnP(r,trn,"ed0") ),5);
4850   
4851      chk0_trnM(r,trn,"y0")  = y0(r,trn,"new");
4852      chk0_trnM(r,trn,"x0")  = sum(trd, x0(r,trn,trd));
4853      chk0_trnM(r,trn,"m0")  = sum(trd, m0(r,trn,trd));
4854      chk0_trnM(r,trn,"id0") = sum(g,id0(r,trn,g,"new"));
4855      chk0_trnM(r,trn,"cd0") = cd0(r,"hh",trn);
4856      chk0_trnM(r,trn,"i0") =  sum(k, i0(r,k,trn));
4857      chk0_trnM(r,trn,"g0") =  g0(r,trn);
4858   
4859      chk0_trnM(r,trn,"bal")=round((   chk0_trnM(r,trn,"y0")
4860                                      +  chk0_trnM(r,trn,"m0")
4861                                      -  chk0_trnM(r,trn,"x0")
4862                                      -  chk0_trnM(r,trn,"id0")
4863                                      -  chk0_trnM(r,trn,"cd0")
4864                                      -  chk0_trnM(r,trn,"i0")
4865                                      -  chk0_trnM(r,trn,"g0")),5);
4866   
4867      chk0_mrkt(r,s,mrkt)  = 0;
4868      chk0_mrkt(r,s,"y0")  = y0(r,s,"new");
4869      chk0_mrkt(r,s,"m0")  = sum(trd, m0(r,s,trd));
4870      chk0_mrkt(r,s,"x0")  = sum(trd, x0(r,s,trd));
4871      chk0_mrkt(r,s,"id0") = sum(jj,id0(r,s,jj,"new"));
4872      chk0_mrkt(r,s,"cd0") = cd0(r,"hh",s);
4873      chk0_mrkt(r,s,"i0") =  sum(k, i0(r,k,s));
4874      chk0_mrkt(r,s,"g0") =  g0(r,s);
4875   
4876      chk0_mrkt(r,s,"bal")=round((       chk0_mrkt(r,s,"y0")
4877                                      +  chk0_mrkt(r,s,"m0")
4878                                      -  chk0_mrkt(r,s,"x0")
4879                                      -  chk0_mrkt(r,s,"id0")
4880                                      -  chk0_mrkt(r,s,"cd0")
4881                                      -  chk0_mrkt(r,s,"i0")
4882                                      -  chk0_mrkt(r,s,"g0")),5);
4883   
4884  option chk0_en:3:4:1;
4885   
4886      chk0_rnweleP(r,rnw,"y0")  =  y0(r,rnw,"new")*(1-ty(r,rnw));
4887      chk0_rnweleP(r,rnw,"id0") = sum(g,id0(r,g,rnw,"new")*(1+ti(r,g,rnw)));
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 96
ADAGE Model - Set Definition
C o m p i l a t i o n


4888      chk0_rnweleP(r,rnw,"kd0") = kd0(r,"va",rnw,"new")*(1+tk(r,"va",rnw));
4889      chk0_rnweleP(r,rnw,"hkd0")= hkd0(r,rnw,"new")*(1+thk(r,rnw));
4890      chk0_rnweleP(r,rnw,"ld0") = ld0(r,rnw,"new")*(1+tl(r,rnw));
4891      chk0_rnweleP(r,rnw,"rnw0")= rnw0(r,rnw,"new");
4892      chk0_rnweleP(r,rnw,"bal") = round((chk0_rnweleP(r,rnw,"y0")
4893                                   - chk0_rnweleP(r,rnw,"id0")
4894                                   - chk0_rnweleP(r,rnw,"kd0")
4895                                   - chk0_rnweleP(r,rnw,"hkd0")
4896                                   - chk0_rnweleP(r,rnw,"ld0")
4897                                   - chk0_rnweleP(r,rnw,"rnw0") ),7);
4898   
4899      chk0_m(r,i,"demand")$(not cru(i))= m0(r,i,"ftrd");
4900   
4901      n0(r,rr,i)$(not cru(i))= (   m0(r,i,"ftrd")
4902                                -  sum(rrr,trs0(r,rrr,i)*(1+tm(r,rrr,i))) )
4903                               /  sum(rrr, n0(r,rrr,i)*(1+tx(r,rrr,i))*(1+tm(r,rrr,i)))
4904                               * n0(r,rr,i);
4905   
4906      pmx0(r,rr,i)$(not cru(i)) = (1+tx(r,rr,i))*(1+tm(r,rr,i));
4907      pmxt0(r,rr,i)$ n0(r,rr,i) = (  trs0(r,rr,i)*(1+tm(r,rr,i))
4908                                   + n0(r,rr,i)*(1+tx(r,rr,i))*(1+tm(r,rr,i)) )
4909                                 /  n0(r,rr,i)-1;
4910   
4911      chk0_m(r,i,"supply")$(not cru(i))=   sum(rr, n0(r,rr,i)*(1+tx(r,rr,i))*(1+tm(r,rr,i)))
4912                                         + sum(rr, trs0(r,rr,i)*(1+tm(r,rr,i)));
4913      chk0_m(r,i,"s-d")$(not cru(i))   = chk0_m(r,i,"supply")-chk0_m(r,i,"demand") ;
4914   
4915   
4916      chk0_trd(r,i,"supply")$(not gentype(i) or (not ele(i)) or (not cru(i)))= sum(rr, n0(rr,r,i))+tpt0(r,i);
4917      chk0_trd(r,i,"supply")$cru(i)=0;
4918      chk0_trd(r,i,"demand")$(not gentype(i) or (not ele(i)) or (not cru(i)))= x0(r,i,"ftrd");
4919      chk0_trd(r,i,"demand")$cru(i) = 0;
4920      chk0_trd(r,i,"s-d")= chk0_trd(r,i,"supply")-chk0_trd(r,i,"demand");
4921   
4922      chk0_trd("World",i,"supply") = sum(r,chk0_trd(r,i,"supply"));
4923      chk0_trd("World",i,"demand") = sum(r,chk0_trd(r,i,"demand"));
4924      chk0_trd("World",i,"s-d")    = sum(r,chk0_trd(r,i,"s-d"));
4925   
4926      chk0_lndp(r,s)= plnd0(r,s)-(1+tn(r,s));
4927   
4928      chk0_l(r,'supply')= le0(r,'hh')-leis0(r,'hh');
4929      chk0_l(r,'demand')= sum((i,vnum), ld0(r,i,vnum));
4930      chk0_l(r,'s-d')   = chk0_l(r,'supply')- chk0_l(r,'demand');
4931   
4932      chk0_ff(r,ff,v,'out')$(y0(r,ff,v) and new(v) )
4933          = y0(r,ff,v)*(1-ty(r,ff));
4934      chk0_ff(r,ff,v,'in')$(y0(r,ff,v) and new(v))
4935          =   sum((e,use),ed0(r,e,use,ff,v))
4936            + sum(g,id0(r,g,ff,v)*(1+ti(r,g,ff)))
4937            + ld0(r,ff,v)*(1+tl(r,ff))
4938            + sum(k,kd0(r,k,ff,v)*(1+tk(r,k,ff)))
4939            + rd0(r,ff,v)*(1+tr(r,ff));
4940   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 97
ADAGE Model - Set Definition
C o m p i l a t i o n


4941      chk0_ff(r,ff,v,'ctax')$(y0(r,ff,v)   and new(v))
4942           =  sum(ghg,pctax *0.001*ghg0(r,ghg,ff,v)) ;
4943   
4944      chk0_ff(r,ff,v,'ctax_pct')$(y0(r,ff,v)   and new(v))
4945            = chk0_ff(r,ff,v,'ctax')/ chk0_ff(r,ff,v,'in');
4946   
4947      chk0_ff(r,ff,v,'rd0_pct')$(y0(r,ff,v)   and new(v))
4948            = rd0(r,ff,v)/ y0(r,ff,v);
4949   
4950  option chk0_ff:3:3:1;
4951   
4952      chk0_ag(r,s,v,'out')$(y0(r,s,v)   and new(v) and agr(s) and not liv(s))
4953          = y0(r,s,v)*(1-ty(r,s));
4954      chk0_ag(r,s,v,'in')$(y0(r,s,v)   and new(v) and agr(s) and not liv(s))
4955          =   sum((e,use),ed0(r,e,use,s,v))
4956            + sum(g,id0(r,g,s,v)*(1+ti(r,g,s)))
4957            + ld0(r,s,v)*(1+tl(r,s))
4958            + sum(k,kd0(r,k,s,v)*(1+tk(r,k,s)))
4959            + hkd0(r,s,v)*(1+thk(r,s))
4960            + (crp_lnd0(r,s,v)*(1+tn(r,s)))$crp(s)
4961            + (lnd0(r,s,v)*(1+tn(r,s)))$(not crp(s))
4962            + rd0(r,s,v)*(1+tr(r,s))   ;
4963   
4964      chk0_ag(r,s,v,'out')$(y0(r,s,v)   and new(v) and  liv(s))
4965           = y0(r,s,v)*(1-ty(r,s));
4966      chk0_ag(r,s,v,'in')$(y0(r,s,v)    and new(v) and  liv(s))
4967          =   sum((e,use),ed0(r,e,use,s,v))
4968            + sum(g$(not (feed(g) or ofd(g))),id0(r,g,s,v)*(1+ti(r,g,s)))
4969            + feed0(r,s,v)
4970            + ld0(r,s,v)*(1+tl(r,s))
4971            + sum(k,kd0(r,k,s,v)*(1+tk(r,k,s)))
4972            + hkd0(r,s,v)*(1+thk(r,s))
4973            + lnd0(r,s,v)*(1+tn(r,s))
4974            + rd0(r,s,v)*(1+tr(r,s))   ;
4975   
4976      chk0_ag(r,s,v,'ctax')$(y0(r,s,v)   and new(v) and agr(s))
4977           =  sum(ghg,pctax *0.001*ghg0(r,ghg,s,v));
4978   
4979      chk0_ag(r,s,v,'ctax_share')$(y0(r,s,v)   and new(v) and agr(s))
4980           = chk0_ag(r,s,v,'ctax')/ chk0_ag(r,s,v,'in');
4981   
4982      chk0_shr(r,i,g,v)$(y0(r,i,v)   and new(v) )
4983           =  id0(r,g,i,v)*(1+ti(r,g,i))/(y0(r,i,v)*(1-ty(r,i)));
4984   
4985      chk0_shr(r,i,"land",v)$(y0(r,i,v)   and new(v) and agr(i))
4986          = (crp_lnd0(r,i,v)*(1+tn(r,i)))/(y0(r,i,v)*(1-ty(r,i)));
4987   
4988      chk0_shr(r,i,"labor",v)$(y0(r,i,v)   and new(v) )
4989          = ld0(r,i,v)*(1+tl(r,i))/(y0(r,i,v)*(1-ty(r,i)));
4990   
4991      chk0_shr(r,i,"kapital",v)$(y0(r,i,v)   and new(v) )
4992          = ( sum(k,kd0(r,k,i,v)*(1+tk(r,k,i)))+ hkd0(r,i,v)*(1+thk(r,i))) /(y0(r,i,v)*(1-ty(r,i)));
4993   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 98
ADAGE Model - Set Definition
C o m p i l a t i o n


4994      chk0_shr(r,i,"en",v)$(y0(r,i,v)   and new(v) )
4995         =  sum((e,use),ed0(r,e,use,i,v)) /(y0(r,i,v)*(1-ty(r,i)));
4996   
4997      chk0_exy(r,s,v,'out')$(y0(r,s,v) and ( (new(v) and not agr(s)) or extant(v)  ))
4998          = y0(r,s,v)*(1-ty(r,s))
4999           +y0(r,"omel",v)$vol(s) ;
5000      chk0_exy(r,s,v,'in')$(y0(r,s,v) and ( (new(v) and not agr(s)) or extant(v)  ))
5001          =   (sum((e,use),ed0(r,e,use,s,v)))$extant(v)
5002            + (   sum((e,use)$(not fdst(use)), ed0(r,e,use,s,v))
5003                + sum((e,use)$fdst(use), ed0(r,e,use,s,v)) )$new(v)
5004            + sum(g,id0(r,g,s,v)*(1+ti(r,g,s)))
5005            + ld0(r,s,v)*(1+tl(r,s))
5006            + sum(k,kd0(r,k,s,v)*(1+tk(r,k,s)))
5007            + hkd0(r,s,v)*(1+thk(r,s))
5008            + (crp_lnd0(r,s,v)*(1+tn(r,s)))$crp(s)
5009            + (lnd0(r,s,v)*(1+tn(r,s)))$(not crp(s))
5010            + rd0(r,s,v)*(1+tr(r,s));
5011   
5012      chk0_exy(r,s,v,'ed0')$(y0(r,s,v) and ( (new(v) and vol(s)) or extant(v)  ))
5013          = (   (sum((e,use),ed0(r,e,use,s,v)))$extant(v)
5014             + (   sum((e,use)$(not fdst(use)), ed0(r,e,use,s,v))
5015                + sum((e,use)$fdst(use), ed0(r,e,use,s,v)) )$new(v))
5016             /chk0_exy(r,s,v,'out') ;
5017      chk0_exy(r,s,v,'id0')$(y0(r,s,v) and ( (new(v) and vol(s)) or extant(v)  ))
5018            = sum(g,id0(r,g,s,v)*(1+ti(r,g,s)))/chk0_exy(r,s,v,'out') ;
5019   
5020      chk0_exy(r,s,v,'ld0')$(y0(r,s,v) and ( (new(v) and vol(s)) or extant(v)  ))
5021            =   ld0(r,s,v)*(1+tl(r,s))/chk0_exy(r,s,v,'out');
5022   
5023      chk0_exy(r,s,v,'kd0')$(y0(r,s,v) and ( (new(v) and vol(s)) or extant(v)  ))
5024            =   sum(k,kd0(r,k,s,v)*(1+tk(r,k,s)))/chk0_exy(r,s,v,'out') ;
5025   
5026      chk0_exy(r,s,v,'hkd0')$(y0(r,s,v) and ( (new(v) and vol(s)) or extant(v)  ))
5027           =  hkd0(r,s,v)*(1+thk(r,s))/chk0_exy(r,s,v,'out');
5028   
5029      chk0_exy(r,s,v,'lnd0')$(y0(r,s,v) and ( (new(v) and vol(s)) or extant(v)  ))
5030           =( (crp_lnd0(r,s,v)*(1+tn(r,s)))$crp(s)
5031            + (lnd0(r,s,v)*(1+tn(r,s)))$(not crp(s))
5032            + rd0(r,s,v)*(1+tr(r,s)))/chk0_exy(r,s,v,'out');
5033   
5034      chk0_exy(r,s,v,'in-out')=  chk0_exy(r,s,v,'in')-  chk0_exy(r,s,v,'out');
5035   
5036      chk0_agp(r,g,s,'a')$(id0(r,g,s,'new'))= pid0(r,g,s)-(1+ti(r,g,s));
5037      chk0_agp(r,s,'labor','l')$ld0(r,s,'new')= pld0(r,s)-(1+tl(r,s));
5038      chk0_agp(r,s,k,'k' )$kd0(r,k,s,'new')= pkd0(r,k,s)-(1+tk(r,k,s));
5039      chk0_agp(r,s,'hucap','hk')$hkd0(r,s,'new')= phkd0(r,s)-(1+thk(r,s));
5040      chk0_agp(r,s,'land','lnd')$(lnd0(r,s,'new') or crp_lnd0(r,s,'new'))= plnd0(r,s)-(1+tn(r,s));
5041      chk0_agp(r,s,'resource','lnd')$rd0(r,s,'new') = prd0(r,s)-(1+tr(r,s));
5042   
5043  * agrii -> agri
5044      chk0_lnd(r,agri,agrii,v,'out')$(f_luc(r,agri,agrii) and luc(r) and new(v) and rent_r0(r,agri,agrii))
5045           = npp(r,agri)*v_land0(r,agri);
5046      chk0_lnd(r,agri,agrii,v,'in')$(f_luc(r,agri,agrii) and luc(r) and new(v) and rent_r0(r,agri,agrii))
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/21/23 22:31:51 Page 99
ADAGE Model - Set Definition
C o m p i l a t i o n


5047           =  npp(r,agrii)*v_land0(r,agrii)
5048            + sum((e,use,g),npp(r,agrii)*mk_luc(r,agri,agrii)*rent_r0(r,agri,agrii)*ag_shre(r,agri,e,use,g,v))
5049            + sum(g,npp(r,agrii)*mk_luc(r,agri,agrii)*rent_r0(r,agri,agrii)*ag_shr(r,agri,g,v))
5050            + npp(r,agrii)*mk_luc(r,agri,agrii)*rent_r0(r,agri,agrii)*ag_shr(r,agri,'L',v)
5051            + sum(k,npp(r,agrii)*mk_luc(r,agri,agrii)*rent_r0(r,agri,agrii)*ag_shr(r,agri,k,v))
5052            + npp(r,agrii)*mk_luc(r,agri,agrii)*rent_r0(r,agri,agrii)*ag_shr(r,agri,'hk',v)
5053            + npp(r,agrii)*mk_luc(r,agri,agrii)*rent_r0(r,agri,agrii)*ag_shr(r,agri,'r',v)
5054            + npp(r,agrii)*mk_luc(r,agri,agrii)*fffor0(r,agrii,v)   ;
5055   
5056      chk0_lnd(r,agri,agrii,v,'in_ctax')$(f_luc(r,agri,agrii) and luc(r) and new(v) and rent_r0(r,agri,agrii))
5057           = pctax*npp(r,agrii)*debtcarb(r,agri,agrii)/1000;
5058   
5059      chk0_lnd(r,agri,agrii,v,'out_ctax')$(f_luc(r,agri,agrii) and luc(r) and new(v) and rent_r0(r,agri,agrii))
5060           = pctax*npp(r,agri)*credcarb(r,agri,agrii)/1000;
5061   
5062      chk0_lnd(r,agri,agrii,v,'in-out')$(f_luc(r,agri,agrii) and luc(r) and new(v) and rent_r0(r,agri,agrii))
5063           = round( (chk0_lnd(r,agri,agrii,v,'in')- chk0_lnd(r,agri,agrii,v,'out')),5);
5064   
5065  * agri -> nat
5066      chk0_lnd(r,nat,agri,v,'out')$(f_luc(r,nat,agri) and luc(r) and new(v) and rent_r0(r,nat,agri))
5067           = npp(r,nat)*v_land0(r,nat);
5068      chk0_lnd(r,nat,agri,v,'in')$(f_luc(r,nat,agri) and luc(r) and new(v) and rent_r0(r,nat,agri))
5069           =  npp(r,agri)*v_land0(r,agri)
5070            + sum((e,use,g),npp(r,agri)*mk_luc(r,nat,agri)*rent_r0(r,nat,agri)*ag_shre(r,agri,e,use,g,v))
5071            + sum(g,npp(r,agri)*mk_luc(r,nat,agri)*rent_r0(r,nat,agri)*ag_shr(r,agri,g,v))
5072            + npp(r,agri)*mk_luc(r,nat,agri)*rent_r0(r,nat,agri)*ag_shr(r,agri,'L',v)
5073            + sum(k,npp(r,agri)*mk_luc(r,nat,agri)*rent_r0(r,nat,agri)*ag_shr(r,agri,k,v))
5074            + npp(r,agri)*mk_luc(r,nat,agri)*rent_r0(r,nat,agri)*ag_shr(r,agri,'hk',v)
5075            + npp(r,agri)*mk_luc(r,nat,agri)*rent_r0(r,nat,agri)*ag_shr(r,agri,'r',v)   ;
5076   
5077      chk0_lnd(r,nat,agri,v,'in_ctax')$(f_luc(r,nat,agri) and luc(r) and new(v) and rent_r0(r,nat,agri))
5078           = pctax*npp(r,agri)*debtcarb(r,nat,agri)/1000;
5079      chk0_lnd(r,nat,agri,v,'out_ctax')$(f_luc(r,nat,agri) and luc(r) and new(v) and rent_r0(r,nat,agri))
5080           = pctax*npp(r,nat)*credcarb(r,nat,agri)/1000;
5081   
5082      chk0_lnd(r,nat,agri,v,'in-out')$(f_luc(r,nat,agri) and luc(r) and new(v) and rent_r0(r,nat,agri))
5083           = round( (chk0_lnd(r,nat,agri,v,'in')- chk0_lnd(r,nat,agri,v,'out')),5);
5084   
5085  * nat -> agri
5086   
5087      chk0_lnd(r,agri,nat,v,'out')$(f_luc(r,agri,nat) and luc(r) and new(v) and rent_r0(r,agri,nat))
5088           =    npp(r,agri)*v_land0(r,agri)
5089              + npp(r,nat)*lndout(r,nat,v)*(1-ty(r,agri));
5090      chk0_lnd(r,agri,nat,v,'in')$(f_luc(r,agri,nat) and luc(r) and new(v) and rent_r0(r,agri,nat))
5091           =  npp(r,nat)*v_land0(r,nat)
5092            + sum((e,use,g),npp(r,nat)*mk_luc(r,agri,nat)*otinp(r,nat,v)*ag_shre(r,agri,e,use,g,v))
5093            + sum(g,npp(r,nat)*mk_luc(r,agri,nat)*otinp(r,nat,v)*ag_shr(r,agri,g,v))
5094            + npp(r,nat)*mk_luc(r,agri,nat)*otinp(r,nat,v)*ag_shr(r,agri,'L',v)
5095            + sum(k,npp(r,nat)*mk_luc(r,agri,nat)*otinp(r,nat,v)*ag_shr(r,agri,k,v))
5096            + npp(r,nat)*mk_luc(r,agri,nat)*otinp(r,nat,v)*ag_shr(r,agri,'hk',v)
5097            + npp(r,nat)*mk_luc(r,agri,nat)*otinp(r,nat,v)*ag_shr(r,agri,'r',v)
5098            + npp(r,nat)*mk_luc(r,agri,nat)*fffor0(r,nat,v)   ;
5099   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 100
ADAGE Model - Set Definition
C o m p i l a t i o n


5100      chk0_lnd(r,agri,nat,v,'in_ctax')$(f_luc(r,agri,nat) and luc(r) and new(v) and rent_r0(r,agri,nat))
5101           = pctax*npp(r,nat)*debtcarb(r,agri,nat)/1000;
5102      chk0_lnd(r,agri,nat,v,'out_ctax')$(f_luc(r,agri,nat) and luc(r) and new(v) and rent_r0(r,agri,nat))
5103           = pctax*npp(r,agri)*credcarb(r,agri,nat)/1000;
5104   
5105      chk0_lnd(r,agri,nat,v,'in-out')$(f_luc(r,agri,nat) and luc(r) and new(v) and rent_r0(r,agri,nat))
5106           = round( (chk0_lnd(r,agri,nat,v,'in')- chk0_lnd(r,agri,nat,v,'out')),5);
5107   
5108      chk0_lnd(r,agri,nat,v,'diff')$(f_luc(r,agri,nat) and luc(r) and new(v) and rent_r0(r,agri,nat))
5109           =round( (   npp(r,nat)*v_land0(r,nat)
5110                     + otinp(r,nat,v)
5111                     + fffor0(r,nat,v)
5112                     - chk0_lnd(r,agri,nat,v,'out')),5);
5113   
5114      chk0_lrent(r,nat,v)$(new(v) and nfrs(nat))
5115          = rentv0(r,nat) - lnd0(r,"frs",v)*(1-l_shr(r,"frs"))*nat_tran(r,"inp") ;
5116   
5117      chk0_x(r,i,'input')$((sum(vnum,y0(r,i,vnum)  ) and not gentype(i)) or ele(i))
5118          = sum(vnum,y0(r,i,vnum));
5119   
5120      chk0_x(r,i,'output')$((sum(vnum,y0(r,i,vnum)  ) and not gentype(i)) or ele(i) and not cru(i))
5121          = d0(r,i)+ x0(r,i,"ftrd") ;
5122   
5123      chk0_x(r,i,'output')$((sum(vnum,y0(r,i,vnum)  ) and not gentype(i)) or ele(i) and cru(i))
5124          = sum(vnum,y0(r,i,vnum)  ) ;
5125   
5126      chk0_x(r,i,"input-output") = chk0_x(r,i,'input')-chk0_x(r,i,'output');
5127      chk0_a(r,i)$a0(r,i)=a0(r,i)-d0(r,i)-m0(r,i,"ftrd");
5128   
5129      chk0_c(r,"y0") = c0(r,"hh");
5130      chk0_c(r,g)$(not trn(g))= cd0(r,"hh",g)*(1+tc(r,g));
5131      chk0_c(r,trn)  = cd0(r,"hh",trn);
5132      chk0_c(r,"hou")= cd0(r,"hh","house");
5133      chk0_c(r,"in")=      sum(g$(not trn(g)), chk0_c(r,g))
5134                         +sum(trn,chk0_c(r,trn))
5135                         +chk0_c(r,"hou") ;
5136   
5137      chk0_w(r,hh)= cl0(r,hh) - c0(r,hh) - leis0(r,hh) ;
5138      cl0(r,hh)   = c0(r,hh) +  leis0(r,hh)+ chk0_w(r,hh);
5139   
5140      chk0_py(r,i,"y0") = y0(r,i,"new");
5141      chk0_py(r,i,"d0") = d0(r,i) +sum(rr,n0(rr,r,i))+tpt0(r,i);
5142      chk0_py(r,i,"diff") = chk0_py(r,i,"y0")- chk0_py(r,i,"d0");
5143      d0(r,s)= y0(r,s,"new")- sum(rr,n0(rr,r,s))-tpt0(r,s);
5144      a0(r,s)= d0(r,s)+ m0(r,s,"ftrd");
5145   
5146      chk0_emkt(r,e,"fuel",trn,"retail") =  ertl0(r,e,"fuel",trn)*(1-te(r,e,"fuel",trn) );
5147      chk0_emkt(r,e,"fuel",trn,"marg")   =  emrg0(r,e,"fuel",trn);
5148      chk0_emkt(r,e,"fuel",trn,"whole")  =  ewhl0(r,e,"fuel",trn) ;
5149      chk0_emkt(r,e,"fuel",trn,"diff")
5150          =  chk0_emkt(r,e,"fuel",trn,"retail")
5151           - chk0_emkt(r,e,"fuel",trn,"marg")
5152           - chk0_emkt(r,e,"fuel",trn,"whole");
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 101
ADAGE Model - Set Definition
C o m p i l a t i o n


5153   
5154      chk0_emkt(r,e,"fuel",trn,"%")$chk0_emkt(r,e,"fuel",trn,"whole")
5155          =    chk0_emkt(r,e,"fuel",trn,"marg")
5156             / chk0_emkt(r,e,"fuel",trn,"whole");
5157   
5158   
5159  parameter   chk0_bioprod      Check biofuel production cost
5160              chk0_bioprods     Check biofuel production input share
5161              chk0_ddgstrd(r,*) Check ddgs trade
5162              chk0_feed         Check livestock feed input
5163   
5164              chk0_trned_val    Report transportation energy consumption ($billion)
5165              chk0_trned_btu    Report transportation energy consumption (quad btu)  ;
5166   
5167         chk0_bioprod(r,bio,"prod"," ")    =  y0(r,bio,"new");
5168         chk0_bioprod(r,bio,"use_en",e)    =  sum(use,ed0(r,e,use,bio,"new"));
5169         chk0_bioprod(r,bio,"use_input",g) =  id0(r,g,bio,"new");
5170         chk0_bioprod(r,bio,"use_input","labor")   =  ld0(r,bio,"new");
5171         chk0_bioprod(r,bio,"use_input","capital") =  sum(k,kd0(r,k,bio,"new"));
5172   
5173         chk0_bioprods(r,bio,"prod"," ")    =  y0(r,bio,"new");
5174         chk0_bioprods(r,bio,"use_en",e)$y0(r,bio,"new")    =  sum(use,ed0(r,e,use,bio,"new"))/y0(r,bio,"new");
5175         chk0_bioprods(r,bio,"use_input",g)$y0(r,bio,"new") =  id0(r,g,bio,"new")/y0(r,bio,"new");
5176         chk0_bioprods(r,bio,"use_input","labor")$y0(r,bio,"new")   =  ld0(r,bio,"new")/y0(r,bio,"new");
5177         chk0_bioprods(r,bio,"use_input","capital")$y0(r,bio,"new") =  sum(k,kd0(r,k,bio,"new"))/y0(r,bio,"new");
5178   
5179         chk0_ddgstrd(r,"import")=m0(r,"ddgs","ftrd");
5180         chk0_ddgstrd(r,"export")=x0(r,"ddgs","ftrd");
5181   
5182         chk0_feed(r,"output")=feed0(r,"liv","new");
5183         chk0_feed(r,"ddgs")  =id0(r,"ddgs","liv","new");
5184         chk0_feed(r,"omel")  =id0(r,"omel","liv","new");
5185         chk0_feed(r,g)$(crp(g) or ofd(g)) =id0(r,g,"liv","new");
5186         chk0_feed(r,"Input") =sum(i,chk0_feed(r,i)*(1+ti(r,i,"liv")));
5187   
5188     chk0_ag(r,s,v,'energy')$(y0(r,s,v)   and new(v) and agr(s) and not liv(s) and chk0_ag(r,s,v,'out') and ag_pric0(r,s))
5189         = 1000*  sum((e,use),ed0(r,e,use,s,v))/(chk0_ag(r,s,v,'out')/ag_pric0(r,s));
5190     chk0_ag(r,s,v,'material')$(y0(r,s,v)   and new(v) and agr(s) and not liv(s) and chk0_ag(r,s,v,'out') and ag_pric0(r,s))
5191         =1000*  sum(g,id0(r,g,s,v)*(1+ti(r,g,s)))/(chk0_ag(r,s,v,'out')/ag_pric0(r,s)) ;
5192     chk0_ag(r,s,v,'labor')$(y0(r,s,v)   and new(v) and agr(s) and not liv(s) and chk0_ag(r,s,v,'out') and ag_pric0(r,s))
5193        =   1000* ld0(r,s,v)*(1+tl(r,s))/(chk0_ag(r,s,v,'out')/ag_pric0(r,s));
5194   
5195     chk0_ag(r,s,v,'capital')$(y0(r,s,v)   and new(v) and agr(s) and not liv(s) and chk0_ag(r,s,v,'out') and ag_pric0(r,s))
5196        =  1000* (sum(k,kd0(r,k,s,v)*(1+tk(r,k,s)))+ hkd0(r,s,v)*(1+thk(r,s)))/(chk0_ag(r,s,v,'out')/ag_pric0(r,s));
5197   
5198     chk0_ag(r,s,v,'land')$(y0(r,s,v)   and new(v) and agr(s) and not liv(s) and chk0_ag(r,s,v,'out') and ag_pric0(r,s))
5199       =  1000* (crp_lnd0(r,s,v)*(1+tn(r,s)))/(chk0_ag(r,s,v,'out')/ag_pric0(r,s))  ;
5200   
5201     chk0_ag(r,s,v,'Price')$(y0(r,s,v)   and new(v) and agr(s) and not liv(s) and chk0_ag(r,s,v,'out') and ag_pric0(r,s))
5202       =  1000*chk0_ag(r,s,v,'in')/(chk0_ag(r,s,v,'out')/ag_pric0(r,s))  ;
5203   
5204   
5205   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 102
ADAGE Model - Set Definition
C o m p i l a t i o n


5206     chk0_ag(r,s,v,'energy_peracre')$(y0(r,s,v)   and new(v) and crp(s) and not liv(s) and q_land0(r,s))
5207         = 1000*  sum((e,use),ed0(r,e,use,s,v))/ q_land0(r,s);
5208     chk0_ag(r,s,v,'material_peracre')$(y0(r,s,v)   and new(v) and crp(s) and not liv(s) and q_land0(r,s))
5209         =1000*  sum(g,id0(r,g,s,v)*(1+ti(r,g,s)))/ q_land0(r,s) ;
5210     chk0_ag(r,s,v,'labor_peracre')$(y0(r,s,v)   and new(v) and crp(s) and not liv(s) and q_land0(r,s))
5211        =   1000* ld0(r,s,v)*(1+tl(r,s))/ q_land0(r,s);
5212   
5213     chk0_ag(r,s,v,'capital_peracre')$(y0(r,s,v)   and new(v) and crp(s) and not liv(s) and q_land0(r,s))
5214        =  1000* (sum(k,kd0(r,k,s,v)*(1+tk(r,k,s)))+ hkd0(r,s,v)*(1+thk(r,s)))/ q_land0(r,s);
5215   
5216     chk0_ag(r,s,v,'land_peracre')$(y0(r,s,v)   and new(v) and crp(s) and not liv(s) and q_land0(r,s))
5217       =  1000* (crp_lnd0(r,s,v)*(1+tn(r,s)))/q_land0(r,s) ;
5218   
5219     chk0_trned_val(r,e,trn)= ed0(r,e,"fuel",trn,"new");
5220     chk0_trned_btu(r,e,trn)= btu0(r,e,"fuel",trn);
5221   
5222  option  chk0_bioprod:3:2:2, chk0_bioprods:3:2:2
5223  display chk0_bioprod, chk0_bioprods, chk0_ddgstrd;
5224   
5225  option  ed0:2:0:5,chk0_trned_val:2:2:1, chk0_trned_btu:2:2:1
5226  display chk0_feed,byprod,pid0,ed0,chk0_trned_val,chk0_trned_btu;
5227   
5228  option  chk0_ag:3:3:1;
5229  option  chk0_agp:3:3:1;
5230  option  chk0_lnd:3:3:2;
5231  option  chk0_lrent:3:1:2;
5232  option  chk0_x:3:2:1;
5233  option  chk0_exy:3:3:1,chk0_shr:3:2:2;
5234  display chk0_ag, chk0_agp, chk0_lnd, chk0_lrent, chk0_x, chk0_a, chk0_exy,chk0_shr;
5235   
5236   
5237  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
5238  *                            Capital vintaging and other endowments
5239  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
5240  parameter
5241          nk0_10_(r,k,i)       New capital in 2010
5242          nk0(r,k)             New capital in the model
5243          xk0_10_(r,k,i)       Extant capital in 2010
5244          xk0(r,k,i)           Extant capital in the model
5245          hke0(r)              Human capital endowment
5246          hke0_10_(r)          Human capital endowment in 2010
5247          inve0(r,k)           Investment endowment;
5248   
5249      xk0_10_(r,k,i) =  kd0(r,k,i,"extant") *clay(r,i);
5250      nk0_10_(r,k,i) =  kd0(r,k,i,'new') *(1-clay(r,i));
5251      xk0(r,k,i)$(not conv(i))     =  xk0_10_(r,k,i);
5252      nk0(r,k)                     =  sum(i$(not conv(i)), nk0_10_(r,k,i));
5253      hke0(r)        =  sum((s,vnum), hkd0(r,s,vnum));
5254      hke0_10_(r)    =  sum((s,vnum), hkd0(r,s,vnum));
5255      inve0(r,k)     =  inv0(r,k);
5256   
5257  display   hkd0,xk0_10_;
5258   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 103
ADAGE Model - Set Definition
C o m p i l a t i o n


5259  * Assign endowment for land & energy resource and renewable electricity resources
5260      lnde0(r,i,v) =  lnd0(r,i,v)   ;
5261      re0(r,i,v)   =  rd0(r,i,v)    ;
5262      rnwe0(r,i,v) =  rnw0(r,i,v)   ;
5263      rentv(r,i)   =  rentv0(r,i);
5264      fffor(r,lu,v)$vnum(v)=fffor0(r,lu,v);
5265      gove0(r)     =  gov0(r)       ;
5266   
5267  scalar
5268          ror             Capital rate of return    / 0.10 /
5269          depr            Depreciation rate         / 0.05 /  ;
5270   
5271  parameter
5272          srvshr(r)            Single period survival share for extant capital
5273          theta(r)             Share of new vintage which is frozen each period
5274          oldcap(r,k,i,t)      Old capital over the time ($billion)
5275          newcap(r,k,i,t)      New capital over the time ($billion)
5276          totcap(r,k,i,t)      Total capital over the time ($billion)
5277          ket(r,k,i,v,t)       Capital over the time ($billion)
5278          xket                 Extant capital the time ($billion)
5279          nket                 New capital the time ($billion)
5280          scale(r,k,i)         Scale factor
5281          hket0(r,t)           Human capital over the time ($billion)
5282          hket(r,t)            Human capital over the time ($billion)
5283   ;
5284   
5285      srvshr(r)= (1-depr)**5;
5286      theta(r) = 0.40 ;
5287   
5288   
5289  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
5290  *                           GDP and Population updates
5291  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
5292  set    source      Source of GDP data  /AEO2013, AEO2018, IEO2013, IEO2014, IEO2017, EIASTAT, ADAGE/
5293         gdptype     Type of GDP         /MER, PPP/
5294         type        Type of data source /Assumption, Simulated/
5295         th(t)       Historical period   /2010, 2015/;
5296   
5297  * GDP data from FAO and IEO2012 where GDP is updated periodically to IEO2013, IEO 2014, IEO2017 later through model development during 2012~present
5298  $include '.\data\data8_trend.dat'
****                                  $282
**** LINE   4675 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
5299  display  gdp_trend,pop;
****                   $140$140
**** LINE   4676 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
5300   
5301  parameter gdp_ieo2013r(r,t)        GDP projections by adage regions in IEO2013 based on market exchange rate (billion $2010)
5302            gdp_ieo2013trd(r,t)      GDP trend by adage regions in IEO2013 based on market exchange rate (baseyear=1 in 2010)
5303            gdp_ieo2013growth(r,t)   GDP annual growth rate by ADAGE regions in IEO2013 based on market exchange rate ;
5304   
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data9a_gdp_ieo2013.gdx
--- LOAD  gdp_ieo2013r = 1:gdp_aeor
--- LOAD  gdp_ieo2013trd = 2:gdp_aeotrd
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 104
ADAGE Model - Set Definition
C o m p i l a t i o n


--- LOAD  gdp_ieo2013growth = 3:gdp_aeogrowth
5307   
5308  parameter gdp_ieo2014r(r,t)        GDP projections by  ADAGE regions in IEO2014 based on purchasing power parity(billion $2010)
5309            gdp_ieo2014trd(r,t)      GDP trend by  ADAGE regions in IEO2014 based on purchasing power parity(baseyear=1 in 2010)
5310            gdp_ieo2014growth(r,t)   GDP annual growth rate by ADAGE regions in IEO2014 based on purchasing power parity;
5311   
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data9b_gdp_ieo2014.gdx
--- LOAD  gdp_ieo2014r = 1:gdp_aeo2014r
--- LOAD  gdp_ieo2014trd = 2:gdp_aeo2014trd
--- LOAD  gdp_ieo2014growth = 3:gdp_aeo2014growth
5314  display  gdp_ieo2014trd;
5315   
5316   
5317  parameter gdp_all         GDP from AEO and IEO in various years (billion in $2010)
5318            pop_all         Population projections from UN2017 and 2010 (million);
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data9c_gdp_all.gdx
--- LOAD  gdp_all = 4:GDP_r_all
--- LOAD  pop_all = 6:pop_all
5321   
5322      gdp_all(r,"MER","IEO2013",t) = gdp_ieo2013r(r,t);
5323      gdp_all(r,"PPP","IEO2014",t) = gdp_ieo2014r(r,t);
5324  display  GDP_all, pop_all;
5325   
5326  parameter GDP            GDP projection in purchasing power parity ($billion 2010)
5327            chk_GDPtrd     Compare GDP projection difference before and after
5328            chk_poptrd     Compare population projection difference between UN2017 and UN2010
5329            pop_trend      Population growth trend
5330            lprd_trend     Labor productivity growth trend
5331            kprd_trend     Capital growth trend;
5332   
5333      chk_GDPtrd(r,"Old",t) = gdp_trend(r,t);
5334  * 2010~2015 are from world bank and 2020~2050 are from IEO2017
5335  * Regions in ADAGE and World Bank are matching, so use World Bank as the base point.
5336  * Regions in ADAGE and IEO are roughly matching so only trend is used relative to its baseline
5337      gdp_trend(r,t)       = GDP_all(r,"MER","IEO2017",t)/GDP_all(r,"MER","IEO2017","2010");
5338      gdp_trend(r,t)$th(t) = GDP_all(r,"MER","WB",t)/GDP_all(r,"MER","WB","2010");
5339      chk_GDPtrd(r,"New",t)= gdp_trend(r,t);
5340      GDP(r,t)             = GDP_all(r,"MER","WB","2010")*gdp_trend(r,t);
5341   
5342      chk_poptrd(r,"Old",t) = pop_all(r,"UN2010",t)/pop_all(r,"UN2010","2010");
5343      chk_poptrd(r,"New",t) = pop_all(r,"UN2017",t)/pop_all(r,"UN2017","2010");
5344      pop(r,t)              = pop_all(r,"UN2017",t);
5345  * Labor trend is shifted at same rate of population growth rate
5346      labor_trend(r,t)      = labor_trend(r,t)*chk_poptrd(r,"New",t)/chk_poptrd(r,"Old",t);
****                $140
**** LINE   4723 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
5347   
5348      pop_trend(r,t)        =  pop(r,t)/pop(r,"2010");
5349      lprd_trend(r,t)       =  gdp_trend(r,t) - pop_trend(r,t) + 1;
5350   
5351  * Allow budget deficit to grow with GDP
5352      bopdeft0(r,hh,"2010") = bopdef0(r,hh);
5353      bopdeft0(r,hh,t)      = bopdeft0(r,hh,"2010")*gdp_trend(r,t);
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 105
ADAGE Model - Set Definition
C o m p i l a t i o n


5354   
5355  display "IEO2017", gdp_trend, chk_GDPtrd,chk_poptrd,GDP,pop,lprd_trend,labor_trend;
5356   
5357   
5358  scalar     deflator          Deflator used to convert dollar between $2005 and $2010 /1.10774/;
5359  parameter  deflator_R(reg)   GDP deflator adjustment factor when original data is converted from $2005 to $2010 by region
5360  * This should be considered but it didn't in the raw data processing part where only a uniform deflator 1.10774 from US is used.
5361  * so the actual deflator = deflator_r*1.108 if we need to report output or input in $2005
5362       / USA   1.000
5363         BRA   1.619
5364         CHN   1.445
5365         EUR   0.920
5366         XLM   1.280
5367         XAS   1.002
5368         AFR   1.202
5369         ROW   1.451
5370      /;
5371   
5372  parameter aggrowth(r)       Annual percentage reduction of the share of ag value added from GDP from FAO;
5373  * The above is using the historical trend from 1980-2013
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data10_aggrowth.gdx
--- LOAD  aggrowth = 5:aggrowth_8r
5376   
5377  option  aggrowth:4:0:1
5378  display aggrowth;
5379   
5380  table co2_trd(r,cgo)   CO2 average annual emission reduction growth rate based on historical eia data from 1980-2011
5381                         Col              Oil               Gas
5382       AFR        -0.0005151        0.0003779        -0.0114778
5383       BRA         0.0006958       -0.0014489        -0.0028978
5384       CHN        -0.0003945       -0.0027618        -0.0003999
5385       EUR         0.0013409       -0.0016365        -0.0001995
5386       ROW         0.0000228       -0.0013220        -0.0058547
5387       USA         0.0007508       -0.0006650         0.0000356
5388       XAS         0.0000044       -0.0037272        -0.0091223
5389       XLM        -0.0001417        0.0006473        -0.0020834
5390  ;
5391   
5392      co2_trd(r,cgo)$(co2_trd(r,cgo)>0) = -co2_trd(r,cgo);
5393   
5394   
5395  parameter   co2_trend(r,cgo,t)       CO2 emission reduction trend from energy combustion for producing same unit of output
5396              ghg_trend(r,ghg,i,v,t)   GHG emission reduction trend from non-energy combustion;
5397   
5398      co2_trend(r,cgo,t)=(1+ co2_trd(r,cgo))**(5*(ord(t)-1));
5399      co2_trend(r,cgo,t)=1;
5400   
5401      ghg_trend(r,ghg,i,v,t)$ghgt0(r,ghg,i,v,"2010")
5402          =ghgt0(r,ghg,i,v,t)/ghgt0(r,ghg,i,v,"2010")/gdp_trend(r,t);
5403   
5404      ghg_trend(r,ghg,agr,v,t)$ghgt0(r,ghg,agr,v,"2010")
5405          =ghgt0(r,ghg,agr,v,t)/ghgt0(r,ghg,agr,v,"2010")/(gdp_trend(r,t)*(1+aggrowth(r))**(5*(ord(t)-1)));
5406   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 106
ADAGE Model - Set Definition
C o m p i l a t i o n


5407  * Assign an upper and lower bound for the emission reduction efficiency
5408      ghg_trend(r,ghg,i,v,t)$(ghg_trend(r,ghg,i,v,t)>1) = (1-0.001)**(5*(ord(t)-1));
5409      ghg_trend(r,ghg,i,v,t)$(ghg_trend(r,ghg,i,v,t) and not sameas(r,"CHN") and ghg_trend(r,ghg,i,v,t)<(1-0.02)**(5*(ord(t)-1)))=(1-0.02)**(5*(ord(t)-1));
5410      ghg_trend(r,ghg,i,v,t)$(ghg_trend(r,ghg,i,v,t) and     sameas(r,"CHN") and ghg_trend(r,ghg,i,v,t)<(1-0.04)**(5*(ord(t)-1)))=(1-0.04)**(5*(ord(t)-1));
5411      ghg_trend("BRA","sf6","ele",v,t) = ghg_trend("BRA","sf6","eim",v,t);
5412   
5413  * Fix trend outliers
5414  loop(t$(t.val>=2030 and t.val<=2050),
5415       ghg_trend(r,ghg,i,v,t)$(ghg_trend(r,ghg,i,v,t) and ghg_trend(r,ghg,i,v,t)>ghg_trend(r,ghg,i,v,t-1) and ghg_trend(r,ghg,i,v,"2020"))
5416                   = ghg_trend(r,ghg,i,v,t-1) * ghg_trend(r,ghg,i,v,"2025")/ghg_trend(r,ghg,i,v,"2020"););
5417      ghg_trend(r,"N2O",crp,"new","2020")$num(r)  = 0.97;
5418      ghg_trend(r,"N2O","wht","new","2025")$num(r)= 0.85;
5419      ghg_trend(r,"N2O",crp,v,t)$(num(r) and not sameas(crp,"gron")) = ghg_trend(r,"N2O","wht",v,t);
5420   
5421  option ghg_trend:2:4:1
5422  display ghg_trend,co2_trend;
5423   
5424  set     tt0(t)   /2010, 2030, 2050/
5425  parameter ghg_trend_report(i,ghg,t)   Report ghg trend ;
5426      ghg_trend_report(i,ghg,tt0)=  ghg_trend("USA",ghg,i,"new",tt0);
5427      ghg_trend_report(i,ghg,tt0)$(ghg_trend_report(i,ghg,tt0)>1)= (1-0.005)**(5*(ord(tt0)-1));
5428  option   ghg_trend_report:3:1:2
5429  display  ghg_trend_report;
5430   
5431      efs_trend('chn',i,t)$(efs_trend('chn',i,'2015')<1)=efs_trend('usa',i,t);
****              $140
**** LINE   4808 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
5432      efs_trend('chn',i,t)$(t.val>2010 and efs_trend('chn',i,t))=1+2*(efs_trend('usa',i,t)-1);
5433      efs_trend(r,i,t)$(efs_trend(r,i,t)=1 )= efs_trend(r,'trn',t);
****                                                              $116
**** LINE   4810 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
5434      efs_trend("USA","hh",t)= (1+0.03)**(5*(ord(t)-1));
5435   
5436      efs_trend(r,trn,t)=efs_trend(r,'trn',t);
5437      efs_trend(r,'trn',t)=0;
5438   
5439  parameter idag_trend(t)     Agriculture input growth trend in production for China;
5440      idag_trend("2010")=1;
5441  loop(t$(t.val>2010),
5442      idag_trend(t)$(t.val>2010 and t.val<2035)=idag_trend(t-1)*(1-0.02)**5;
5443      idag_trend(t)$(t.val>=2035 )=idag_trend(t-1)*(1-0.015)**5;  );
5444  display idag_trend;
5445   
5446  parameter ghg_ton           GHG emissions from agriculture (ton co2eq per ton);
5447      ghg_ton(r,ghg,i)$ag_tonn0(r,i)= ghg0(r,ghg,i,"new")/ ag_tonn0(r,i);
5448      ton_conv(r,crp)$ag_valu0(r,crp)= ag_tonn0(r,crp)/ag_valu0(r,crp);
5449  display ghg_ton;
5450   
5451  * Exogenous parameters (GDP, energy price and energy consumption) that ADAGE calibrates
INCLUDE    c:\Develop\ADAGE_pub\ADAGE\match.gms
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 107
ADAGE Model - Exogenous growth trend the model will match
C o m p i l a t i o n


5454  * Here are the items ADAGE intends to match or close
5455  *   Population from UN2017
5456  *   GDP from World Bank for 2010~2015 and IEO2017 for 2020~2050
5457  *   Energy price and energy consumption in IEO2017
5458   
5459  set   aeo           AEO and IEO sectors
5460        / RES             "Residential"
5461          COM             "Commercial"
5462          IND             "Industrial"
5463          TRN             "Transportation"
5464          ELE             "Electricity"
5465         /
5466   
5467  set mapaeo(aeo,i)   Mapping between AEO&IEO sectors and ADAGE sectors
5468   /ELE.  Conv
5469    IND. (Col ,    nuc ,
5470          Cru ,    hyd ,
5471          Gas ,    bio ,
5472          Oil ,    wnd ,
5473          Ceth,    Sybd,    Swge,   FrsE ,
5474          Weth,    Rpbd,    Albd,   FrwE ,
5475          Scet,    Plbd,    Msce,
5476          Sbet,    Cobd,    ArsE,
5477   
5478          Ddgs,    Omel,
5479   
5480          Wht ,    Gron,    Osdn,   Srbt,
5481          Corn,    Soyb,    Srcn,   Ocr ,
5482          Liv ,    Frs ,
5483          Mea ,    Vol ,    Ofd ,
5484          Eim ,    Man           )
5485     COM. Srv
5486     TRN.(AirP,    RalF ,   RalP ,  Auto,
5487          WtrT,    RodF ,   RodP ,  Otrn    )
5488     RES.(HH ,     House        )
5489        /;
5490   
5491  set     e0(i)         Energy in IEO&AEO    / Col,   Cru,    Ele,   Gas,  Oil  /
5492          ee0(i)        Energy in IEO&AEO    / Col,   Gas,    Oil  /
5493          advrnw(rnw)   Advanced electricity generation in IEO&AEO  /wnd, bio/;
5494   
5495      e0(i)$bio(i) =yes;
5496   
5497   
5498  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
5499  *                           Energy Price and Consumption and Energy Efficiency
5500  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
5501  parameter
5502        IEO2017_cons                Energy consumption by sector from IEO2017 during 2010~2050 (quad btu)
5503        IEO2017_prod                Energy production from IEO2017 during 2010~2050 (quad btu)
5504        IEO2017_EI                  Energy intensity relative to GDP (1 in 2010)
5505   
5506        IEO2017_gen                 Electricity production by source from IEO2017 during 2010~2050 (quad btu)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 108
ADAGE Model - Exogenous growth trend the model will match
C o m p i l a t i o n


5507        IEO2017_GDP                 GDP Projection from IEO2017 during 2010~2050 ($billion)
5508        IEO2017_pop                 Population projection from IEO2017 during 2010~2050 (quad btu)
5509        IEO2017_co2                 GHG emission from fossil fuel combustion from IEO2017 during 2010~2050 (mmt CO2)
5510        IEO2017_MER2PPP             Coefficient to convert from Mer to PPP
5511   
5512        USA_rpric(*,aeo,ee,t)       Energy retail price by sector in USA from different sources ($2010 per mmbtu)
5513        USA_wpric(*,ee,t)           Energy whole sale price in USA from different sources ($2010 per mmbtu)
5514        USA_rpric_avg(*,ee,t)       Energy average retail price in USA from different sources ($2010 per mmbtu)
5515   
5516        en_cons(*,r,aeo,ee,t)       Energy consumption by sector in USA from different sources (quad)
5517        en_prod(*,r,ee,t)           Energy production in USA from different sources (quad btu)
5518        ele_gen(*,r,*,t)            Electricity generation by source (quad btu)
5519        en_EI(*,r,*,t)              Energy Intensity from ADAGE and IEO2017 during 2010~2050 (btu per $)
5520        en_AEEI(*,r,*,type,t)       Energy Intensity trend from ADAGE and IEO2017 during 2010~2050 (1 in 2010)
5521   
5522        IEO2017_constot(r,e,t)      Energy consumption by energy type from IEO2017 during 2010~2050 (quad btu)
5523        en_constot(source,r,ee,t)   Energy consumption by sector in USA from different sources (quad)
5524   
5525        IEO2017_convbtushr(r,*,t)   Conventional electricity generation share from IEO2017 during 2010~2050 in term to quad but (%)
5526        IEO2017_convvalushr(r,*,t)  Conventional electricity generation share from IEO2017 during 2010~2050 in term to $value (%)
5527  ;
5528   
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data11_en_eia.gdx
--- LOAD  IEO2017_cons = 1:IEO2017_cons
--- LOAD  IEO2017_prod = 2:IEO2017_prod
--- LOAD  IEO2017_EI = 4:IEO2017_EI
--- LOAD  IEO2017_gen = 3:IEO2017_gen
--- LOAD  IEO2017_GDP = 5:IEO2017_GDP
--- LOAD  IEO2017_pop = 6:IEO2017_pop
--- LOAD  IEO2017_co2 = 7:IEO2017_co2
--- LOAD  IEO2017_MER2PPP = 8:IEO2017_MER2PPP
--- LOAD  USA_rpric = 9:USA_rpric
--- LOAD  USA_wpric = 11:USA_wpric
--- LOAD  USA_rpric_avg = 10:USA_rpric_avg
--- LOAD  en_cons = 12:en_cons
--- LOAD  en_prod = 13:en_prod
--- LOAD  ele_gen = 14:ele_gen
--- LOAD  en_EI = 15:en_EI
--- LOAD  en_AEEI = 16:en_AEEI
5533  ;
5534   
5535      IEO2017_constot(r,e,t)    = sum(aeo, IEO2017_cons(r,aeo,e,t));
5536      en_constot(source,r,ee,t) = sum(aeo, en_cons(source,r,aeo,ee,t));
5537   
5538      IEO2017_convbtushr(r,cgo,t)= ele_gen("IEO2017",r,cgo,t)/sum(ee0,ele_gen("IEO2017",r,ee0,t));
5539      IEO2017_convvalushr(r,cgo,t)$sum(ee0,ele_gen("IEO2017",r,ee0,t)/btu_conv(r,ee0,"fuel","conv"))
5540          = ele_gen("IEO2017",r,cgo,t)/btu_conv(r,cgo,"fuel","conv")
5541           /sum(ee0,ele_gen("IEO2017",r,ee0,t)/btu_conv(r,ee0,"fuel","conv"));
5542   
5543  display   IEO2017_convbtushr, IEO2017_convvalushr;
5544   
5545  parameter
5546        c_le0(r,t)      Coefficient to shift labor productivity
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 109
ADAGE Model - Exogenous growth trend the model will match
C o m p i l a t i o n


5547        c1_ke0          Coefficient to shift new capital
5548        c2_ke0          Coefficient to shift new capital
5549        c_hke0          Coefficient to shift human capital
5550        c_inve0         Coefficient to shift investment
5551        c_cd0           Coefficient to shift consumption
5552        c_aeei          Coefficient to shift AEEI
5553        c_y0_trd        Coefficient to shift energy productivity
5554        c_re0_trd       Coefficient to shift natural resource
5555        c_rnwe0_trd     Coefficient to shift renewable natural resource
5556        c_afvT0         Coefficient used to calibrate AFV's mpge
5557        c_afv           Coefficient used to calibrate AFV's mpge   ;
5558   
5559  * All of the data is from runs in ADAGE_2018\ADAGE_2018_task4_documcodecleaning\ADAGE_8r_eafv_task4_v5_elegenfix_wld_task2_bioAFV_v4_vmt_afv_task5_step12_test_DA_afvff_nompgelimit\lst\DA_12_e25%ff4%
5560  * They are obtained during the process to calibrate GDP, energy price and consumption to exogenous assumption in IEO2018
5561  * If exogenous assumption for GDP, energy price and consumption are updated with new data source, the calibration process
5562  *  need to be redone and those coefficients should be updated
GDXIN   c:\Develop\ADAGE_pub\ADAGE\data\data12_match.gdx
--- LOAD  c_le0 = 3:c_le0
--- LOAD  c1_ke0 = 4:c1_ke0
--- LOAD  c2_ke0 = 5:c2_ke0
--- LOAD  c_hke0 = 6:c_hke0
--- LOAD  c_cd0 = 8:c_cd0
--- LOAD  c_inve0 = 7:c_inve0
--- LOAD  c_aeei = 1:c_aeei
--- LOAD  c_y0_trd = 2:c_y0_trd
--- LOAD  c_re0_trd = 9:c_re0_trd
--- LOAD  c_rnwe0_trd = 10:c_rnwe0_trd
--- LOAD  c_afvT0 = 11:c_afvT0
5565   
5566      c1_ke0(r,"va",i,t)$convrnw(i)        = c1_ke0(r,"va","oil",t);
5567      c1_ke0(r,"va","CC_gas",t)            = c1_ke0(r,"va","oil",t);
5568      c1_ke0(r,k,"Conv",t)                 = 0;
5569   
5570      c2_ke0(r,"va",i,t)$convrnw(i)        = c2_ke0(r,"va","oil",t);
5571      c2_ke0(r,"va","CC_gas",t)            = c2_ke0(r,"va","oil",t);
5572      c2_ke0(r,k,"Conv",t)                 = 0;
5573   
5574      c_afv(r,afv,v)       = 1;
5575      c_rnwe0_trd(r,gentype,t)= 1;
5576   
5577  * Provide EIA data for ADAGE use in energy price and consumption improvement
5578  parameter
5579       AEEI(r,*,t)                  New AEEI that is used in ADAGE to calibrate energy consumption (1 in 2010)
5580       re0_trd                      Natural resource endowment growth trend
5581       rnwe0_trd                    Renewable natural resource endowment growth trend
5582       y0_trd                       Production cost trend for natural gas and coal
5583       y0_trdt                      Production cost trend for natural gas and coal
5584   
5585       cdt0(r,hh,i,t)               Household consumption over time;
5586   
5587   
5588  * Assign AEEI growth trend
5589      AEEI(r,"PME",t)  = en_AEEI("IEO2017",r,"PME","Simulated",t)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 110
ADAGE Model - Exogenous growth trend the model will match
C o m p i l a t i o n


5590                        /en_AEEI("ADAGE",r,"PME","Simulated",t)
5591                        *en_AEEI("ADAGE",r,"PME","Assumption",t)
5592                        *c_AEEI(r,"PME",t);
5593   
5594      AEEI(r,e,t)      =  AEEI(r,"PME",t)
5595                        * en_AEEI("IEO2017",r,e,"Simulated",t)
5596                        / en_AEEI("IEO2017",r,"PME","Simulated",t)
5597                        * c_AEEI(r,e,t);
5598   
5599  * Assign energy resource endowment growth trend
5600      re0_trd(r,e,t)$(en_prod("ADAGE",r,e,t)  and rd0_10(r,e,"new",t) )
5601            =  en_prod("IEO2017",r,e,t)/en_prod("ADAGE",r,e,"2010")
5602              *c_re0_trd(r,e,t)   ;
5603   
5604   
5605      rnwe0_trd(r,gentype,t)$(IEO2017_gentech(r,gentype,"2010") and rnw0_10(r,gentype,"new",t) )
5606           =  IEO2017_gentech(r,gentype,t)/IEO2017_gentech(r,gentype,"2010")
5607            * c_rnwe0_trd(r,gentype,t) ;
5608   
5609   
5610  * Assume fossil fuel energy production productivity growth trend
5611  * 1.3 for coal is based on historical price ratio from AEO during 2015 and 2010
5612      y0_trdt(r,"col",t)$(t.val>2010) =  1.3;
5613      y0_trdt(r,"gas",t)$(t.val>2010) =  USA_wpric("EIASTAT","gas","2010")/USA_wpric("EIASTAT","gas","2015");
5614      y0_trdt(r,"cru",t)$(t.val>2010) =  USA_wpric("EIASTAT","cru","2010")/USA_wpric("EIASTAT","cru","2015");
5615   
5616      y0_trd(r,e,t)$(t.val>2010 and y0_trdt(r,e,t)) = y0_trdt(r,e,t)*c_y0_trd(r,e,t);
5617   
5618      cdt0(r,"hh",i,t)$(ord(t)>1)     = c_cd0(r,i,t)*cd0_10_(r,"hh",i,"2010");
5619   
5620  display  USA_rpric_avg, AEEI, re0_trd, rnwe0_trd, y0_trd;
5621   
5622  parameter
5623         target_fuel          Biofuel limit (quadbtu)
5624         target_gal           Biofuel limit (billion gallons)
5625   
5626         f_biocap0(e)         Factor to set up the trend for biofuel limit in armington block
5627         f_biocapT(e,t)       Factor to set up the trend for biofuel limit in armington block over the time ;
5628   
5629  parameter
5630         pa0                  Armington energy goods price in 2010 ($billion per quad btu)
5631         poev0                Average price for mixed oil-biofuel price in 2010 ($billion per quad btu) ;
5632   
5633      pa0(r,i)$(e(i) and (d0(r,i)*btuprod_conv(r,i)+em0_btu(r,i)))
5634          = a0(r,i)/(d0(r,i)*btuprod_conv(r,i)+em0_btu(r,i));
5635   
5636      poev0(r,trn)$sum(e$ob(e),btu0(r,e,"fuel",trn)) = oev_valu0(r,trn,"extant")/sum(e$ob(e),btu0(r,e,"fuel",trn));
5637   
5638   
5639  Parameter
5640         autooev_shr0         Share of fuel in LDV energy use in 2010 in $
5641         hdvoev_shr0          Share of fuel in HDV energy use in 2010 in $
5642         hdvoev_shrt0         Share of fuel in HDV in future years if biofuel is expanded to HDV in $
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 111
ADAGE Model - Exogenous growth trend the model will match
C o m p i l a t i o n


5643         autooev_shr_btu0     Share of fuel in LDV energy use in 2010 in btu
5644   
5645         beta0                Initial input ratio for biofuels in hdv energy production
5646         betat0               hdv energy production after introduction of biofuels
5647         beta                 Updated input ratio for biofuels in the hdv energy production
5648         beta_                Report final beta
5649   
5650         phi0                 Initial input growth in scn in the auto energy production
5651         phi                  Updated input growth in scn in the auto energy production
5652         phi_                 Report final phi;
5653   
5654   
5655  Set mapbioshr(i,j)   Map biofuel share in LDV to biofuel share in HDV to replace oil if it is allowed
5656  * One-to-one mapping for all regions
5657    /  oil.  oil
5658       ceth. ceth
5659       scet. scet
5660       weth. weth
5661       sbet. sbet
5662       sybd. sybd
5663       Plbd. Plbd
5664       cobd. cobd
5665       rpbd. rpbd
5666       Swge. Swge, Albd.Albd, Msce.Msce, ArsE.ArsE, FrsE.FrsE, FrwE.FrwE
5667   / ;
5668   
5669   
5670      mapbioshr(advbio,advbio)= yes;
5671      phi0("Bau",r,e,t)$ad(e) = 1;
5672      phi(r,e,v)$ob(e)        = 1;
5673   
5674  * Note: natural gas is used in conventional LDV/HDV transportation in some regions
5675  *       Here we will only consider biofuel and oil share in LDV
5676      autooev_shr0(r,e,t)$oil(e)                   = sum(v, ed0(r,e,"fuel","auto",v))  / sum((v,ee)$ob(ee), ed0(r,ee,"fuel","auto",v));
5677      autooev_shr0(r,e,t)$bioe(e)                  = sum(v, ed0(r,e,"fuel","auto",v))  / sum((v,ee)$ob(ee), ed0(r,ee,"fuel","auto",v));
5678      autooev_shr0(r,e,t)$(ord(t)>1 and cobd(e))   = chg_biot(r,"ceth",t,e)/ sum((v,ee)$ob(ee), ed0(r,ee,"fuel","auto",v));
5679      autooev_shr0(r,e,t)$(ord(t)>1 and ad(e)$(not albd(e) and not Msce(e)))
5680                                                   = phi0("Bau",r,e,t)/ sum((v,ee)$ob(ee), ed0(r,ee,"fuel","auto",v));
5681   
5682  * Assume additional cobd and ad are used to substitute oil
5683      autooev_shr0(r,e,t)$oil(e)   = autooev_shr0(r,e,t)- autooev_shr0(r,"cobd",t)-sum(ad,autooev_shr0(r,ad,t));
5684   
5685      autooev_shr0(r,"ethl",t)    = sum(e$et(e), autooev_shr0(r,e,t));
5686      autooev_shr0(r,"biod",t)    = sum(e$bd(e), autooev_shr0(r,e,t));
5687      autooev_shr0(r,"advb",t)    = sum(e$ad(e), autooev_shr0(r,e,t));
5688   
5689  parameter autooev_shr_btu0 ;
5690   
5691  autooev_shr_btu0(r,e,"ethl",t)$(ethl(e) and sum(ee$ethl(ee),btu0_10(r,ee,"fuel","auto","2010")))
5692     = btu0_10(r,e,"fuel","auto","2010")/sum(ee$ethl(ee),btu0_10(r,ee,"fuel","auto","2010"));
5693   
5694   
5695  autooev_shr_btu0(r,e,"biod",t)$(biod(e) and sum(ee$biod(ee),(btu0_10(r,ee,"fuel","auto","2010")+chg_biot(r,"ceth",t,ee)*btu_conv(r,ee,"fuel","auto"))) )
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 112
ADAGE Model - Exogenous growth trend the model will match
C o m p i l a t i o n


5696      =    (btu0_10(r,e,"fuel","auto","2010")+ chg_biot(r,"ceth",t,e)*btu_conv(r,e,"fuel","auto"))
5697         / sum(ee$biod(ee),(btu0_10(r,ee,"fuel","auto","2010")+chg_biot(r,"ceth",t,ee)*btu_conv(r,ee,"fuel","auto")));
5698   
5699  autooev_shr_btu0(r,e,"Total",t)$bio(e)
5700      =    (btu0_10(r,e,"fuel","auto","2010")+ chg_biot(r,"ceth",t,e)*btu_conv(r,e,"fuel","auto"))
5701         / sum(ee$ob(ee),(btu0_10(r,ee,"fuel","auto","2010")));
5702   
5703  * Assume four types of advanced biofuels Swge, ArsE, FrsE, FrwE are activated in the model and sum of them=0.0001
5704  autooev_shr_btu0(r,e,"Total",t)$(advbio(e) and not albd(e) and not msce(e))= 0.0001/4;
5705  autooev_shr_btu0(r,e,"Total",t)$oil(e) = 1- sum(ee,autooev_shr_btu0(r,ee,"Total",t));
5706   
5707  option autooev_shr_btu0:5:3:1;
5708   
5709  display btu0_10,chg_biot,ed0,chg_bio,btu_conv,autooev_shr0, autooev_shr_btu0;
5710   
5711  Table oevshr_btu_EPA(r,j,i,t)     Share of fuel in blended conventional technology in terms of quad btu
5712  * Provided by EPA based on biofuel data, and gasoline and diesel data from STEO and AEO
5713                          2010           2015
5714  USA . ethl. Auto       0.0675        0.0700
5715  USA . biod. Auto       0.0001        0.0001
5716  USA . advb. Auto       0.0001        0.0001
5717  USA . ethl. RodF       0.0120        0.0123
5718  USA . biod. RodF       0.0320        0.0640
5719  USA . advb. RodF       0.0001        0.0001
5720  USA . ethl. RodP       0.0064        0.0067
5721  USA . biod. RodP       0.0320        0.0640
5722  USA . advb. RodP       0.0001        0.0001
5723  ;
5724   
5725  oevshr_btu_EPA("USA",j,i,t)$(t.val>2015)      = oevshr_btu_EPA("USA",j,i,"2015");
5726  oevshr_btu_EPA(r,j,i,t)$(hdv(i))              = oevshr_btu_EPA("USA",j,i,t);
5727  * AFR is a special case where there are no first generation biofuels available for all OEV vehicles
5728  oevshr_btu_EPA("afr","ethl",i,t)$(trnv(i))         = 0 ;
5729  oevshr_btu_EPA("afr","biod",i,t)$(trnv(i))         = 0 ;
5730   
5731  oevshr_btu_EPA(r,"ethl",i,t)$(auto(i) and not num(r))  = sum(j$ethl(j),autooev_shr_btu0(r,j,"Total",t));
5732  oevshr_btu_EPA(r,"biod",i,t)$(auto(i) and not num(r))  = sum(j$biod(j),autooev_shr_btu0(r,j,"Total",t));
5733  oevshr_btu_EPA(r,"advb",i,t)$(auto(i) and not num(r))  = oevshr_btu_EPA("USA",i,"advb",t);
5734   
5735  oevshr_btu_EPA("afr","advb",i,t)$(trnv(i))         = 0.0001 ;
5736   
5737  oevshr_btu_EPA(r,"oil",i,t)$trnv(i)  = 1 - oevshr_btu_EPA(r,"ethl",i,t)
5738                                           - oevshr_btu_EPA(r,"biod",i,t)
5739                                           - oevshr_btu_EPA(r,"advb",i,t);
5740   
5741  oevshr_btu_EPA(r,e,i,t)$(ethl(e))= oevshr_btu_EPA(r,"ethl",i,t)* autooev_shr_btu0(r,e,"ethl",t);
5742  oevshr_btu_EPA(r,e,i,t)$(biod(e))= oevshr_btu_EPA(r,"biod",i,t)* autooev_shr_btu0(r,e,"biod",t);
5743   
5744  * Assume four types of advanced biofuels Swge, ArsE, FrsE, FrwE are activated in the model
5745  oevshr_btu_EPA(r,e,i,t)$(advbio(e) and not albd(e) and not msce(e))= oevshr_btu_EPA("USA","advb",i,t)/4;
5746   
5747  option  oevshr_btu_EPA:4:3:1;
5748  display oevshr_btu_EPA;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 113
ADAGE Model - Exogenous growth trend the model will match
C o m p i l a t i o n


5749   
5750   
5751  parameter oev_val_EPA(r,j,i,t)  Fuel in blended conventional technology in terms of $billion
5752            oev_shr0              Share of fuel in blended conventional technology in terms of $;
5753   
5754      oev_val_EPA(r,e,i,t)$(trnv(i) and oevshr_btu_EPA(r,e,i,t) and btu_conv(r,e,"fuel",i))
5755                =  oevshr_btu_EPA(r,e,i,t)*sum(ee$ob(ee),btu0_10(r,ee,"fuel",i,"2010"))
5756                  /btu_conv(r,e,"fuel",i);
5757   
5758      oev_shr0(r,e,i,v,t)$(trnv(i) and sum(ee$ob(ee),  oev_val_EPA(r,e,i,t)))
5759          = oev_val_EPA(r,e,i,t)/sum(ee$ob(ee),  oev_val_EPA(r,e,i,t));
5760   
5761  option oev_val_EPA:4:3:1;
5762  display oev_val_EPA;
5763   
5764  parameter chk0_oevbtu          check to see the sum of OEV share equals to 1
5765            chk0_oevval          check to see if the sum of OEV value equals to the $;
5766      chk0_oevbtu(r,i,t)$trnv(i) = sum(e$ob(e),oevshr_btu_EPA(r,e,i,t));
5767      chk0_oevval(r,i,"EPA",t)$trnv(i)  = sum(e,oev_val_EPA(r,e,i,t));
5768      chk0_oevval(r,i,"Data",t)$trnv(i) = sum(ee$ob(ee),  sum(vnum(v), ed0_10(r,ee,"fuel",i,v,"2010")));
5769      chk0_oevval(r,i,"Diff",t) = round((chk0_oevval(r,i,"EPA",t) - chk0_oevval(r,i,"Data",t)),6);
5770   
5771  * There is a price difference between fuels so quad btu based share won't match the $ based amount. The difference is small so we map the difference to oil.
5772      oev_val_EPA(r,"oil",i,t)    = oev_val_EPA(r,"oil",i,t)- chk0_oevval(r,i,"Diff",t);
5773      oev_shr0(r,e,i,v,t)$(trnv(i) and sum(ee$ob(ee), ed0_10(r,ee,"fuel",i,"new","2010")))
5774                                  = oev_val_EPA(r,e,i,t)/sum(ee$ob(ee), ed0_10(r,ee,"fuel",i,"new","2010"));
5775  display "before",oev_shr0;
5776   
5777  parameter hdvbio_ewhl0(r,e,use,i)   Biofuel wholesale share in hdv
5778            hdvbio_ertl0(r,e,use,i)   Biofuel retail share in hdv
5779            hdvbio_emrg0(r,e,use,i)   Biofuel margin share in hdv ;
5780   
5781      te(r,bioe,"fuel",hdv) = te(r,bioe,"fuel","auto");
5782      hdvbio_ewhl0(r,bioe,"fuel",hdv)$(ertl0(r,bioe,"fuel","auto")) = 1;
5783      hdvbio_emrg0(r,bioe,"fuel",hdv)$(ertl0(r,bioe,"fuel","auto")) = emrg0(r,bioe,"fuel","auto")/ewhl0(r,bioe,"fuel","auto");
5784   
5785      hdvbio_ertl0(r,bioe,"fuel",hdv)$(ertl0(r,bioe,"fuel","auto")) =  (hdvbio_ewhl0(r,bioe,"fuel",hdv)+hdvbio_emrg0(r,bioe,"fuel",hdv))
5786                                                                      /(1-te(r,bioe,"fuel",hdv));
5787  display hdvbio_ewhl0,hdvbio_emrg0, hdvbio_ertl0;
5788   
5790   
5791  display "agg",oev_val_EPA;
5792  display chk0_oevbtu, chk0_oevval,oev_shr0;
5793   
5794  *Only biofuel and oil are assigned to beta0
5795      betat0(r,s,e,v,t)$(ob(e))                 = oev_val_EPA(r,e,s,t);
5796      betat0(r,s,"all",v,t)                     = sum(e$ob(e),betat0(r,s,e,v,t));
5797   
5798      beta0(r,s,e,v)$(ob(e))                    = betat0(r,s,e,v,"2010");
5799      beta(r,s,e,v)$(f_hdvbio(r,s) or auto(s))  = beta0(r,s,e,v);
5800      beta(r,s,e,v)$(f_hdvbio(r,s) or auto(s))  = betat0(r,s,e,v,"2010");
5801   
5802  option autooev_shr0:5:2:1, betat0:6:4:1;
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 114
ADAGE Model - Exogenous growth trend the model will match
C o m p i l a t i o n


5803  display autooev_shr0,betat0,beta0,beta;
5804   
5805  * Provide summary for transportation cost
5806  set item3     / Ele, Gas, Oil, Biof,  Eim,  Man, Srv, Tran, Other, Labor, Capital, Sum /
5807      item4(i)  /Eim,  Man, Srv/;
5808   
5809  parameter tran_sumry,tran_sumry2,tran_sumry3;
5810      tran_sumry(r,afv,"Labor")        = afv_ldt0(r,afv,"new","2010")*(1+tl(r,afv))     ;
5811      tran_sumry(r,afv,g)              = afv_idt0(r,afv,g,"new","2010")*(1+ti(r,g,afv)) ;
5812      tran_sumry(r,afv,e)              = afv_edt0(r,afv,e,"new","2010") ;
5813      tran_sumry(r,afv,"Capital")      = sum(k,afv_kdt0(r,afv,k,"new","2010")*(1+tk(r,k,afv)))+afv_hkdt0(r,afv,"new","2010")*(1+thk(r,afv))  ;
5814   
5815      tran_sumry(r,OEV,"Labor")        = sum(mapoev(oev,i)$tran_cost0(r, i,"y0"),tran_cost0(r,i,"ld0")/tran_cost0(r, i,"y0"));
5816      tran_sumry(r,OEV,g)              = sum(mapoev(oev,i)$tran_cost0(r, i,"y0"),tran_cost0(r,i,g)/tran_cost0(r, i,"y0"));
5817      tran_sumry(r,OEV,e)              = sum(mapoev(oev,i)$tran_cost0(r, i,"y0"),tran_cost0(r,i,e)/tran_cost0(r, i,"y0"));
5818      tran_sumry(r,OEV,"Capital")      = sum(mapoev(oev,i)$tran_cost0(r, i,"y0"),(tran_cost0(r,i,"kd0")+tran_cost0(r,i,"hkd0"))/tran_cost0(r, i,"y0"));
5819   
5820      tran_sumry(r,i,"sum")            =  tran_sumry(r,i,"Labor")
5821                                        + sum(g, tran_sumry(r,i,g))
5822                                        + sum(e, tran_sumry(r,i,e))
5823                                        + tran_sumry(r,i,"Capital") ;
5824   
5825      tran_sumry(r,i,e)$(ob(e) and (autooev(i) or BioAutoAFV(i))) = oev_shr0(r,e,"auto","new","2010")*tran_sumry(r,i,"oil") ;
5826      tran_sumry(r,i,e)$(ob(e) and (rodfoev(i) or BioRodFAFV(i))) = oev_shr0(r,e,"rodf","new","2010")*tran_sumry(r,i,"oil") ;
5827      tran_sumry(r,i,e)$(ob(e) and (rodpoev(i) or BioRodPAFV(i))) = oev_shr0(r,e,"rodp","new","2010")*tran_sumry(r,i,"oil") ;
5828   
5829      tran_sumry2(r,afv,t)             = afv_pricT0(r,afv,"new",t);
5830      tran_sumry2(r,oev,t)             = sum(mapoev(oev,i),tran_cost0(r,i,"y0"));
5831   
5832      tran_sumry3(r,i,item3)   =  tran_sumry(r,i,item3) ;
5833      tran_sumry3(r,i,"Tran")  =  sum(g$trni(g),tran_sumry(r,i,g));
5834      tran_sumry3(r,i,"Other") =  sum(g$(not trni(g) and not item4(g)),tran_sumry(r,i,g));
5835      tran_sumry3(r,i,"Biof")  =  sum(e$(bio(e)),tran_sumry(r,i,e));
5836      tran_sumry3(r,i,item3)$tran_sumry(r,i,"sum")    = tran_sumry3(r,i,item3)/tran_sumry(r,i,"sum");
5837  display mapoev,tran_sumry,tran_sumry2,afv_costT0;
5838   
5839  parameter afv_costT1     AFV's cost in terms to $ per vmt;
5840           afv_costT1(r,i,t)= afv_costT0(r,i,"y0",t)*AFV_loadf0(r,i) ;
5841  display afv_costT1,AFV_loadf0;
5842   
5843  execute_unload 'data\dataout4tran.gdx', tran_sumry,tran_sumry2,tran_sumry3,oev_shr0,tran_cost0,afv_costT0,afv_costT1,afv_mpgeT0,chk0_kc,chk0_kct,chk0_afvt0;
5844  *execute 'gdxxrw.exe data\dataout4tran.gdx    o=data\dataout4tran.xlsx  par=tran_sumry2      rng=cost!a3        cdim=1'
5845  execute 'gdxxrw.exe data\dataout4tran.gdx    o=data\dataout4tran.xlsx  par=tran_sumry3       rng=inshare!a3     cdim=1'
5846  *execute 'gdxxrw.exe data\dataout4tran.gdx    o=data\dataout4tran.xlsx  par=tran_cost0       rng=cost2!a3       cdim=1'
5847  execute 'gdxxrw.exe data\dataout4tran.gdx    o=data\dataout4tran.xlsx  par=afv_costT0        rng=afvcost!a3     cdim=0'
5848  execute 'gdxxrw.exe data\dataout4tran.gdx    o=data\dataout4tran.xlsx  par=afv_costT1        rng=afvcost_vmt!a2 cdim=0'
5849  execute 'gdxxrw.exe data\dataout4tran.gdx    o=data\dataout4tran.xlsx  par=afv_mpgeT0        rng=afvmpgeT!a3    cdim=0'
5850  *execute 'gdxxrw.exe data\dataout4tran.gdx    o=data\dataout4tran.xlsx  par=chk0_kc          rng=chk0_kc!a3     cdim=0'
5851  *execute 'gdxxrw.exe data\dataout4tran.gdx    o=data\dataout4tran.xlsx  par=chk0_kct         rng=chk0_kct!a3    cdim=0'
5852   
5853  *CCCC Update the Household Auto transportation consumption
5854  * Reference: table 2 in "Vehicle Ownership and Income Growth Worldwide 1960-2030"
5855  *       Author(s): Joyce Dargay, Dermot Gately and Martin Sommer
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 115
ADAGE Model - Exogenous growth trend the model will match
C o m p i l a t i o n


5856  *       Source: The Energy Journal , 2007, Vol. 28, No. 4 (2007), pp. 143-170
5857  *       Published by: International Association for Energy Economics
5858  *       URL: https://www.jstor.org/stable/41323125
5859  *       https://www.jstor.org/stable/pdf/41323125.pdf?refreqid=excelsior%3Ae32c60791df61943112882fdfb72b3e8
5860   
5861  Scalar    SAII      Speed of adjustment - income increases  /0.095       /
5862            SAID      Speed of adjustment - income decreases  /0.084       /
5863            MaxSat    Maximium saturation level (USA)         / 852        /
5864            Popden    Population density                      / - 0.000388 /
5865            Urban     Urbanization                            / - 0.007765 /
5866            Alpha     Alpha                                   / -0.597     /
5867            GDPdeflat GDP deflator between 1995 and 2010 ;
5868  * https://courses.lumenlearning.com/macroeconomics/chapter/converting-nominal-to-real-gdp/
5869     GDPdeflat = 110/81.7;
5870   
5871  Table  Ecmt(r,*)   Econometric estimation on Beta and MaxSat
5872  * EUR: average from Germany and France
5873  * XLM: average from Argentina and Chile
5874  * XAS: average from Japan, Kerea and India
5875  * AFR: average from Egypt and South Africa
5876  * ROW: average from Canada,Mexico and Austrilia
5877                                Beta              MaxSat
5878             USA               -0.20              852
5879             BRA               -0.17              831
5880             CHN               -0.14              807
5881             EUR               -0.165             776
5882             XLM               -0.15              805
5883             XAS               -0.21              687
5884             AFR               -0.18              838
5885             ROW               -0.17              823
5886   ;
5887   
5888  Table  VehOwn(r,*)    Motor vehicle ownership in 2014  by Region
5889  * TotalVeh: Total number of motor vehicle in million
5890  * Pop: population in million
5891  * VehOwnrate = TotalVeh /POP
5892  * Motor vehicle data is from: http://www.nationmaster.com/country-info/stats/Transport/Road/Motor-vehicles-per-1000-people
5893  * Number of private motor vehicles per 1000 people in 2014 by country. 'Motor vehicle' includes automobiles, SUVs, trucks, vans, buses, commercial vehicles and freight motor road vehicles. This data excludes motorcycles and other two-wheelers.
5894  * GDP and population data is from IMF: world economic outlook database, 2020. accessed in 1-7-2021
5895  * Those files are saved in D:\Model\ADAGE\CGE_Data_2011_tran\International\Tran_data\Motor vehicles per 1000 people by country in 2014.xlsx
5896                  TotalVeh           POP            VehOwnrate
5897       AFR         39.4205        930.0240          0.04239
5898       BRA         50.2278        201.7180          0.24900
5899       CHN        113.5879       1368.5840          0.08300
5900       EUR        288.1691        536.9840          0.53664
5901       ROW        279.1284       1078.7730          0.25875
5902       USA        253.8724        318.5350          0.79700
5903       XAS        164.3700       1054.9000          0.15582
5904       XLM         99.7752        701.4180          0.14225
5905  ;
5906   
5907  Parameter  GDPpercap(r,year)     GDP per capita in $1995 ($thousand)
5908             VehOwnrate(r,year)    The long-run equilibrium level of vehicle ownership annualy (vehicles per 1000 people)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 116
ADAGE Model - Exogenous growth trend the model will match
C o m p i l a t i o n


5909             VehOwnship(r,t)       The long-run equilibrium level of vehicle ownership every five year (vehicles per 1000 people)
5910             TotVeh(r,t)           Total motor vehicle ownship (million);
5911   
5912  * VehOwnship at t = SAII*MaxSat*e^(alpha*e^(beta*(GDP at t)))+(1-SAII)*VehOwnship at t-1
5913   
5914      GDPpercap(r,t)= gdp(r,t)/pop(r,t)/GDPdeflat;
5915  loop(year$t(year),
5916      GDPpercap(r,year+1)= 4/5*GDPpercap(r,year)+ 1/5*GDPpercap(r,year+5);
5917      GDPpercap(r,year+2)= 3/5*GDPpercap(r,year)+ 2/5*GDPpercap(r,year+5);
5918      GDPpercap(r,year+3)= 2/5*GDPpercap(r,year)+ 3/5*GDPpercap(r,year+5);
5919      GDPpercap(r,year+4)= 1/5*GDPpercap(r,year)+ 4/5*GDPpercap(r,year+5););
5920   
5921      VehOwnrate(r,"2015") = SAII*ecmt(r,"MaxSat")*exp(Alpha*exp(ecmt(r,"beta")*GDPpercap(r,"2015")))+(1-SAII)* VehOwn(r,"VehOwnrate")*1000;
5922      VehOwnship(r,"2015") = SAII*ecmt(r,"MaxSat")*exp(Alpha*exp(ecmt(r,"beta")*GDPpercap(r,"2015")))+(1-SAII)* VehOwn(r,"VehOwnrate")*1000;
5923   
5924  loop(year$(year.val>2015),
5925      VehOwnrate(r,year)   = SAII*ecmt(r,"MaxSat")*exp(Alpha*exp(ecmt(r,"beta")*GDPpercap(r,year)))+(1-SAII)* VehOwnrate(r,year-1);  );
5926      VehOwnrate(r,year)$(not t(year))= 0;
5927      VehOwnrate(r,"2010") =  VehOwnrate(r,"2015")* VehOwnrate(r,"2015")
5928                            / VehOwnrate(r,"2020");
5929  loop(t$(t.val>2015),
5930      VehOwnship(r,t)  = SAII*ecmt(r,"MaxSat")*exp(Alpha*exp(ecmt(r,"beta")*GDPpercap(r,t)))+(1-SAII)* VehOwnship(r,t-1);  );
5931   
5932  *    VehOwnship(r,t)     = VehOwnrate(r,t);
5933      VehOwnship(r,"2010") =  VehOwnship(r,"2015")* VehOwnship(r,"2015")
5934                            / VehOwnship(r,"2020");
5935   
5936      TotVeh(r,t) = VehOwnship(r,t)*pop(r,t)/1000;
5937  display GDPpercap,VehOwnrate, VehOwnship,TotVeh;
5938   
5939   
5940   
5941  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
5942  *                           Specify Scenario Analysis
5943  * Oil Price analysis
INCLUDE    c:\Develop\ADAGE_pub\ADAGE\analysis\pcru\analysis_oilprice.gms
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 117
Oil Price Analysis
C o m p i l a t i o n


5946   
5947  set  scn        Scenarios in oil price analysis
5948         / Ref     Reference oil price
5949           HOP     High oil price
5950           LOP     Low oil price    /;
5951   
5952   
5953  table  pcru_scn(scn,t)      Crude oil brent spot price scenario ($2017 per barrel)
5954  * data during 2015~2050 is provided by EPA and taken from AEO
5955  * data in 2010 is the historical price: 81.31 $2011/barrel from AEO2018
5956                    2015           2020            2025          2030            2035           2040            2045            2050
5957      REF          54.3890        69.9609        85.6952        92.8216        99.8657        106.0786        110.0415        113.5585
5958      HOP          54.3890       122.6483       164.8495       185.5338       199.7384        211.5846        220.3792        229.4992
5959      LOP          54.3890        31.2787        35.2719        37.5783        41.1244         44.8811         47.9949         51.6367
5960  ;
5961   
5962  parameter PI_aeo2012(*)     GDP chain-type price index from AEO2012 (1 in 2005)
5963      / 2009        1.097
5964        2010        1.110
5965        2011        1.133
5966        2015        1.196
5967        2016        1.217
5968        2017        1.239
5969       /;
5970   
5971  parameter PI_aeo2018(*)     GDP chain-type price index from AEO2018 (1 in 2009)
5972      / 2016        1.114
5973        2017        1.134
5974       /;
5975   
5976   
5977  scalar  deflat17to10   deflation factor from $2017 to $2010 /1.1226/
5978  *http://www.in2013dollars.com/2010-dollars-in-2017
5979          mmbtu_barel    mmbtu per barrel of crude oil        /5.800/;
5980   
5981       deflat17to10= PI_aeo2018("2017")/(PI_aeo2012("2010")/PI_aeo2012("2009"));
5982   
5983   
5984  parameter   pcru_trd_scn(scn,t)  crude oil price trend (1 in 2010);
5985   
5986       pcru_scn(scn,t)      = pcru_scn(scn,t)/deflat17to10;
5987       pcru_scn(scn,"2010") = 81.31/(PI_aeo2012("2011")/PI_aeo2012("2010"));
5988  * actual price in ADAGE
5989  *pcru_scn(scn,"2010") = y0("USA","Cru","new")/prod0("USA","cru")*mmbtu_barel;
5990   
5991  *pcru_trd_scn(scn,t)  = pcru_scn(scn,t)/pcru_scn(scn,"2010");
5992  pcru_trd_scn(scn,t)   = pcru_scn(scn,t)/(y0("USA","Cru","new")/prod0("USA","cru")*mmbtu_barel);
5993  display pcru_scn,pcru_trd_scn;
5994   
5995  parameter  chk_pcru      Check if crude oil price match the target ;
5996   
5997   
5998   
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 118
Oil Price Analysis
C o m p i l a t i o n


5999   
6000  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
6001   
6002   
6003   
6004   
6005  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
6006  *                                Report parameters
6007  *CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
6008  set   lp                    Flag to control number of runs to match the biofuel share
6010        /1*1/ ;
6012   
6013   
6014  parameter
6015        modelstats            Model status
6016        solvestats            Sover status       ;
6017   
6018   
6019  *  In conventional onroad transportation and advanced AFV, if oil usage (gasv, HEV) is expanded to oil-biofuel mix then the following notes are useful to interpret ed0_
6020  *    ed0_.l for auto, rodf and rodP for oil and biofuel are sum of consumption from conventional and AFV
6021  *    ed0_.l for auto, rodf and rodP for ele, gas are reported separately by conventional and AFV (auto, rodf, rodp are actually auto_oev, rodf_oev, rodP_oev)
6022  *     use an example to illustrate as below : ED0_.L
6023  *                                                     LEVEL           Notes
6024  *         ex: USA.Oil .fuel.Auto     .Extant          20.0            auto_oev
6025  *             USA.Oil .fuel.Auto     .New             50.0            auto_oev + auto_gasv + auto_hev
6026  *             USA.Ceth.fuel.Auto     .Extant          8.0             auto_oev
6027  *             USA.Ceth.fuel.Auto     .New             4.0             auto_oev + auto_gasv + auto_hev
6028   
6029  *             USA.Gas .fuel.Auto     .New             5.0             auto_oev
6030  *             USA.Gas .fuel.Auto_GasV.New             0.1             auto_GasV
6031  *             USA.Gas .fuel.Auto_BEV .New             0.2             Auto_BEV
6032  *             USA.Gas .fuel.Auto_HEV .New             0.3             Auto_HEV
6033  *             USA.Gas .fuel.Auto_FCEV.New             0.5             Auto_FCEV
6034  * Some parameters are added and reporting need to be modified to account for the expansion as below:
6035   
6036  parameter
6037  * Save ed0_.l to ed and distribute total onroad transportation oil-biofuel energy mix in oev, gasv ahd hev to its own technology
6038          eds(r,j,use,*,v,t)           Energy Demand by sector by vintage ($2010 billion)
6039          ed(r,j,use,*,t)              Energy Demand by sector ($2010 billion)
6040          obmixv(r,use,i,v,t)          Total energy (oil-biofuel) in onroad transportation by vintage(OEV & GASV & HEV where oil usage is expanded to oil-biofuel mix) ($2010 billion)
6041          obmix(r,use,i,t)             Total energy (oil-biofuel) in onroad transportation (OEV & GASV & HEV where oil usage is expanded to oil-biofuel mix) ($2010 billion)
6042          obmixv_shr(r,use,i,j,v,t)    Share of energy (oil-biofuel) in onroad transportation by technology by vintage(%)
6043          obmix_shr(r,use,i,j,t)       Share of energy (oil-biofuel) in onroad transportation by technology (%)
6044          obmix_shr1(r,use,i,j,v,t)    Share of energy (oil-biofuel) in onroad transportation by technology (%) ;
6045   
6046  set     macrovar /GDP,CONS,INVEST,GOVT,EXPORTS,IMPORTS/;
6047   
6048  parameter
6049          macro                  Macro outputs including GDP & consumption & investment and others ($billion)
6050          gdp_comp               GDP component by resource ($billion)
6051          gdp_shr                GDP share by resource using income approach
6052          gdp_                   Total GDP ($billion)
6053          gdp_sec                Sectoral gdp calculated from production side ($billion)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 119
Oil Price Analysis
C o m p i l a t i o n


6054          gdp_sec2               Sectoral gdp calculated from resource side ($billion)
6055   
6056          output                 Sectoral production ($billion)
6057          cons                   Household consumption ($billion)
6058          cons_p                 Consumer goods price index
6059          cons_all               Total consumption (armington goods) ($billion)
6060          cons_allp              Armington goods price index
6061          cons_alls              Armington goods consumption by sectors ($billion)
6062          cons_tonn              AG and food Household consumption (million metric ton)
6063          cons_all_tonn          AG and food armington goods consumption (million metric ton)
6064          cons_alls_tonn         Ag and food armington goods consumption by sectors (million metric ton)
6065          cons_alls_tonn_temp    Temporary calculation for soybean consumption by sectors (million metric ton)
6066   
6067          prices                 Price index of sectoral output
6068          price                  Price index of sectoral output and intermediate goods
6069          prices_pc              Price index of sectoral output (adjusted by price of consumption)
6070          prices_kt              Price of capital by vintage
6071          prices_kt_pc           Price of capital by vintage (adjusted by price of consumption)
6072          prices_fuel            Price of fuel in transportation ($ per mmtu)
6073          prices_fuel_pc         Price of fuel in transportation ($ per mmtu) (adjusted by price of consumption)
6074          prices_en              prices of energy by sector ($ per mmbtu)
6075   
6076          agbio_macro            Production & consumption & import and export for crop and biofuel ($billion)
6077   
6078          en_valu                Energy demand by sectors ($billion)
6079          en_valus               Energy demand by sectors and use type ($billion)
6080          en_btusv               Energy demand by sectors & generation type & vintage (quad btu)
6081          en_btus                Energy demand by sectors & generation type (quad btu)
6082          en_btu                 Energy demand by sectors (quad btu)
6083   
6084  * Another method to calculate the energy consumption (retail)
6085          en_valu1               Energy demand by sectors ($billion)
6086          en_valus1              Energy demand by sectors and use type ($billion)
6087          en_btu1                Energy demand by sectors (quad btu)
6088   
6089          enprod_valu            Energy production ($billion)
6090          enprod_btu             Energy production (quad btu)
6091   
6092          entrd_valu             Energy trade ($billion)
6093          entrd_btu              Energy trade (quad btu)
6094          entrd_gal              Energy trade (billion gallons)
6095   
6096          ele_cons_all           Total electricity consumption (from armington goods) (quad btu)
6097          ele_valu               Electricity generation by technology ($billion)
6098          ele_btu                Electricity generation by technology (quad btu)
6099          elesource              Electricity generation by energy source (quad btu)
6100          ele_valuV              Electricity generation by technology and vintage ($billion)
6101          ele_btuV               Electricity generation by technology and vintage (quad btu)
6102          ele_btubyAge           Electricity generation by technology and by age (quad btu)
6103          ele_btuShrV            Share of electricity generation by vintage for the next period
6104          ele_ketByAge           Electricity generation capital endowment by vintage over the time ($billion)
6105   
6106          auto_valu              Energy demand by household auto ($billion)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 120
Oil Price Analysis
C o m p i l a t i o n


6107          auto_shr               Share of biofuel in total household auto energy demand according to dollar value(%)
6108          auto_btu               Energy demand by household auto (quad btu)
6109          auto_gal               Energy demand by household auto (billion gallons)
6110          auto_pric              Price index of auto energy
6111          auto_pric_pc           Price index of auto energy (adjusted by price of consumption)
6112          auto_trdgal            Trade for energy and biofuels in household auto industry (billion gallons)
6113   
6114          OEV_valu               Energy demand by OEV ($billion)
6115          OEV_shr                Share of biofuels in OEV in terms to dollar value (%)
6116          OEV_shr_btu            Share of biofuels in OEV in terms to quad btu (%)
6117          OEV_btu                Energy demand by OEV (quad btu)
6118          OEV_gal                Energy demand by OEV (billion gallons)
6119          OEV_pric               Price index of OEV
6120          OEV_pric_pc            Price index of OEV (adjusted by price of consumption)
6121   
6122          tran_vmt               Transportation VMT traveled (billion vehicle-mile-traveled)
6123          tran_valu              Transportation production by sector ($billion)
6124          tran_prod              Transportation production by sector (billion passenger-mile-traveled for passenger transportation and billion-ton-mile traveled for freight)
6125          tran_enbtu             Transportation energy consumption (quad btu)
6126          tran_emis              Transportation ghg emission (mmt co2eq)
6127          tran_mpge              Transportation fuel economy (mile per gallon)
6128          tran_envalu            Transportation energy consumption ($billion)
6129   
6130          tran_vmtV              Transportation VMT traveled by vintage (billion mile-vehicle-traveled)
6131          tran_vmtbyage          Transportation VMT traveled by vintage for the next 30 years (billion mile-vehicle-traveled)
6132          tran_vmtshrV           Share of Transportation VMT traveled by vintage for the next period
6133          tran_surratio          Transportation VMT ratio between simulated and expected for extant vehicle (<1 means earlier scrappge than MOVEsa and >1 means late scrappage)
6134          tran_ketbyage          Transportation capital endowment by vintage over the time ($billion)
6135          tran_valuv             Transportation production by sector by vintage ($billion)
6136          tran_enbtuV            Transportation energy consumption by vintage(quad btu)
6137          tran_mpgeV             Transportation fuel economy by vintage (mile per gallon)
6138          usa_auto_stockV        Stock in USA auto sector by vintage (million)
6139   
6140          trade                  Import and export by sector ($billion)
6141          bi_trade               Export from one region to another region by sector ($billion)
6142   
6143          land_valu              Land demand by sector ($billion)
6144          land_area              Land area for different land types such as crop & livestock & forest & cellulosic biofuel (million ha)
6145          land_area0             Land area for different land types such as crop & livestock & forest & cellulosic biofuel (million ha)
6146          land_area1             Land area for different land types such as crop & livestock & forest & cellulosic biofuel (million ha)
6147          land_rent              land rent index
6148          land_tran              Land transformation from one type to another (million ha)
6149          land_em                Co2 emission from land use change (million metric ton co2eq)
6150          land_seq               Co2 sequestration from land use change (mmt CO2eq)
6151          chk_lndem              Check land use change in area & emission and sequestration
6152          emis_rep               Land conversion report (area(m ha) & emission and sequestration (mmt co2eq)
6153   
6154          co2t_ff                Co2 emissions by fuels type and by sector (mmt co2eq)
6155          co2tot_ff              Co2 emissions by fuel type (mmt co2eq)
6156          co2tott_ff             Total fossil fuel related co2 emissions by each country (mmt co2eq)
6157          co2elet                co2 emission from electricity generation (mmt CO2eq)
6158   
6159          co2t_lnd               Co2 emissions from land use change (mmt co2eq)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 121
Oil Price Analysis
C o m p i l a t i o n


6160          co2tot_lnd             Co2 emissions from land use change (mmt co2eq)
6161          co2tott_lnd            Total Co2 emissions from land use change (mmt co2eq)
6162   
6163          ghgt                   GHG emission by sector and ghg excluding CO2 emissions from fossil fuel and land use change (mmt co2eq)
6164          ghgtot(*,ghg,t)        Total GHG emissions by type excluding CO2 emissions from fossil fuel and land use change (mmt co2eq)
6165          ghgtott(*,t)           Total GHG emissions excluding CO2 emissions from fossil fuel and land use change (mmt co2eq)
6166   
6167          carbemis               Total GHG emissions by source in each period (mmt co2eq)
6168          carbemist              Accumulated GHG emissions by source from 2010 to the current period (mmt co2eq)
6169          carbemis2              Total GHG emissions by anoterh set of source in each period (mmt co2eq)
6170   
6171          pco2t                  Price of co2 emission ($ per metric ton)
6172          pghgt                  Price of ghg emission ($ per metric ton)
6173   
6174          apt(r,ap,i,t)          Air pollutant emission by sector and pollutant (thousand metric ton)
6175          aptot(r,ap,t)          Air pollutant emission by pollutant (thousand metric ton)
6176   
6177          ag_tonn                AG production (million ton)
6178          ag_valu                AG production ($billion)
6179          ag_pric                AG price ($1000 per metric ton)
6180          ag_lndh                AG land area (million ha)
6181          ag_lndv                AG land area ($billion)
6182   
6183          ag_tonn_trad           AG trade (million metric tons)
6184          ag_tonn_cons           AG armington consumption (mmt)
6185          ag_pric_cons           Ag consumption price ($thousand  per ton)
6186   
6187          yield                  AG yield (ton per ha)
6188          yield_growth           AG yield growth trend (1 in 2010)
6189          ag_tonn_growth         AG production growth trend (1 in 2010)
6190          output_growth          Sectoral production growth trend (1 in 2010)
6191          vmt_growth             Auto VMT growth trend (1 in 2010)
6192   
6193          chk_ag_tonn            Check ag supply-demand balance (mmt)
6194   
6195          chk_gdp                Check gdp growth trend to see if it matches the exogenous trend
6196          chk_macro              Check sectoral balance on production & consumption & import & export ($billion)
6197          chk_shr                Check sectoral input share balance
6198          chk_shrt               Check the sum of sectoral input share to see if it's equal to 1
6199          chk_area               Check land area (mha)
6200   
6201          chk_py                 Check sectoral production price
6202          chk_pc                 Check consumption price
6203          chk_ped                Check energy price in sectoral demand
6204          chk_plnd               Check land price
6205          chk_pl                 Check labor price
6206          chk_phk                Check human capital price
6207          chk_pk                 Check capital price
6208          chk_prk                Check capital price for vintage
6209          chk_srv(r,*,*)         Check service sector
6210   
6211          chk_enbalt             Check energy supply & demand balance (quad btu)
6212          chk_enprod             Check energy production at each period
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 122
Oil Price Analysis
C o m p i l a t i o n


6213          chk_encons             Check energy consumption at each period
6214          chk_elegen             Check electricity generation by source at each period
6215          chk_gencost            Check electricity generation Cost by source at each period
6216          chk_enrpric            Check energy retail price at each period
6217          chk_enwpric            Check energy whole sale price at each iteration
6218   
6219          chk_envalu             Check energy consumption by sector and type ($billion)
6220          chk_enbtu              Check energy consumption by sector and type (quad btu)
6221          chk_eds                Check energy consumption by sector and type ($billion)
6222   
6223          chk0_enprod            Check energy production at each iteration (quad btu)
6224          chk0_encons            Check energy consumption at each iteration (quad btu)
6225          chk0_elegen            Check electricity generation by source at each iteration (quad btu)
6226          chk0_enrpric           Check energy retail price at each iteration
6227          chk0_enwpric           Check energy whole sale price at each iteration
6228   
6229          chk_autoOil            Check auto sector oil consumption (billion gallons)
6230          chk_autogalshr         Check auto fuel share by fuel type
6231   
6232          chk_gal                Check if biofuels in final runs match the target (billion gallon)
6233          chk_gal0               Check if biofuel projection approaches the target in each iteration (billion gallon)
6234          chk_afvt               Check onroad OEV and afv's input and output
6235          chk_mpg                Check onroad OEV and afv's mpge (mile per gallon of oil equivalent)
6236          chk_mpge               Check onroad mpge to see if they meet the fuel economy target (mile per gallon of oil equivalent)
6237   
6238          chk_afvtV
6239          chk_afvtP
6240          chk_afvtQ
6241          chk_afvtall            AFV's input cost seperated by price (P) quanty (Q) value (V =P*Q) ($ per vmt)
6242  ;
6243   
6244   
6245  * Assign initial value of tran_vmtV for reporting purposes which will be updated in the model
6246        ele_valuv(r,gentype,v,"2010") = y0(r,gentype,v) ;
6247   
6248        tran_vmtv(r,oev,"extant","2010") = sum(mapoev(oev,trnv),clay(r,trnv)*tran_vmt0(r,trnv));
6249        tran_vmtv(r,oev,"new","2010")    = sum(mapoev(oev,trnv),(1-clay(r,trnv))*tran_vmt0(r,trnv));
6250   
6251        tran_valuv(r,afv,v,"2010") =0;
6252   
6253        tran_mpgev(r,oev,"extant","2010") = sum(mapoev(oev,trnv), old_mpgeT(r,trnv,"2010"));
6254        tran_mpgev(r,oev,"new","2010")    = sum(mapoev(oev,trnv), new_mpgeT(r,trnv,"2010"));
6255   
6256      ele_btushrV(r,advee,"extant",tt,t)$(ord(t)=1 and tt.val<=t.val-1 and tt.val>=t.val-6) = 0 ;
6257      ele_btushrV(r,i,"his","2010",t)$(t.val<=2010) = 1 ;
6258   
6259  Set  item1  /y0,mpge0, ld0,id0,kd0,hkd0,ob0,ff0/;
6260       item1(e)=yes;
6261   
6262  execute_unload '.\data\dataout4merge.gdx' pop, whlprc0,  prc0,price0, bio_convert,bio_convert_trd,bio_yield0, bio_yldtrd,swge_new,    btu_conv,  gal_conv, btu_gal, btuprod_conv, btuim_conv,btuex_conv,btuen_conv
****                                              $572
**** LINE   5445 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 123
Oil Price Analysis
C o m p i l a t i o n


6263                                            p_land0,  ag_pric0,  tx, tm,  tc, ty ,advbiomkupt ;
****                                                             $572
**** LINE   5446 INPUT       c:\Develop\ADAGE_pub\ADAGE\data.gms
6264   
6265   
6266  execute_unload  '.\lst\ATB_chk.gdx',heateff,elegen0_10,chk0_eleprod,ed0_10,ertl0_10,ewhl0_10,etax0_10,btu0_10,prod0_10,ATB20_elecost,y0_10,elegen_yt0,elegen_edt0,elegen_idt0,elegen_kdt0,elegen_rnwdt0,rnw0_10,rnw0,
6267                                      btu_conv,btuprod_conv;
6268   
6269   
6270   
6271   
6272   

**** LIST OF STRAY NAMES - CHECK DECLARATIONS FOR SPURIOUS COMMAS
**** STRAY NAME Simon OF TYPE PARAM
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 124
Oil Price Analysis
Error Messages


116  Label is unknown
140  Unknown symbol
282  Unable to open include file
572  Cannot GDX load/unload this type - only sets, parameters
        equations and variables can be used

**** 38 ERROR(S)   0 WARNING(S)
GAMS 26.1.0  rf2b37b9 Released Feb  2, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             05/21/23 22:31:51 Page 125
Oil Price Analysis
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  c:\Develop\ADAGE_pub\ADAGE\data.gms
     2       23 INCLUDE        1      24  .c:\Develop\ADAGE_pub\ADAGE\set.gms
     3      886 GDXIN          1     218  c:\Develop\ADAGE_pub\ADAGE\data\data1_main.gdx
     4      930 GDXIN          1     262  c:\Develop\ADAGE_pub\ADAGE\data\data11_en_eia_gen.gdx
     5      973 GDXIN          1     305  c:\Develop\ADAGE_pub\ADAGE\data\data11_ATB2020.gdx
     6     2358 GDXIN          1    1693  c:\Develop\ADAGE_pub\ADAGE\data\data4_ghg.gdx
     7     2555 GDXIN          1    1890  c:\Develop\ADAGE_pub\ADAGE\data\data5_pollutant.gdx
     8     3929 GDXIN          1    3274  c:\Develop\ADAGE_pub\ADAGE\data\data6_tran.gdx
     9     5305 GDXIN          1    4682  c:\Develop\ADAGE_pub\ADAGE\data\data9a_gdp_ieo2013.gdx
    10     5312 GDXIN          1    4689  c:\Develop\ADAGE_pub\ADAGE\data\data9b_gdp_ieo2014.gdx
    11     5319 GDXIN          1    4696  c:\Develop\ADAGE_pub\ADAGE\data\data9c_gdp_all.gdx
    12     5374 GDXIN          1    4751  c:\Develop\ADAGE_pub\ADAGE\data\data10_aggrowth.gdx
    13     5452 INCLUDE        1    4829  .c:\Develop\ADAGE_pub\ADAGE\match.gms
    14     5529 GDXIN         13      77  .c:\Develop\ADAGE_pub\ADAGE\data\data11_en_eia.gdx
    15     5563 GDXIN         13     111  .c:\Develop\ADAGE_pub\ADAGE\data\data12_match.gdx
    16     5944 INCLUDE        1    5180  .c:\Develop\ADAGE_pub\ADAGE\analysis\pcru\analysis_oilprice.gms


COMPILATION TIME     =        0.078 SECONDS      9 MB  26.1.0 rf2b37b9 WEX-WEI


USER: Medium MUD - 10 User License                   G190624/0001CO-WIN
      RTI International,                                     DC15002-S4


**** FILE SUMMARY

Input      c:\Develop\ADAGE_pub\ADAGE\data.gms
Output     c:\Develop\ADAGE_pub\ADAGE\data.lst
Save       c:\Develop\ADAGE_pub\ADAGE\lst\DA\a1.g0?

**** USER ERROR(S) ENCOUNTERED
